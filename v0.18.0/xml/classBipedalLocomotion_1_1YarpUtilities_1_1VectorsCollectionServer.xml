<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::YarpUtilities::VectorsCollectionServer</compoundname>
    <basecompoundref prot="public" virt="non-virtual">VectorsCollectionMetadataService</basecompoundref>
    <includes local="no">BipedalLocomotion/YarpUtilities/VectorsCollectionServer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a0e8b2b00daf7717db8fe01c0bf74ee12" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; BipedalLocomotion::YarpUtilities::VectorsCollectionServer::m_pimpl</definition>
        <argsstring></argsstring>
        <name>m_pimpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/VectorsCollectionServer.h" line="142" column="21" bodyfile="BipedalLocomotion/YarpUtilities/VectorsCollectionServer.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a2fd61e131a5a2ce3aaa8e808bb324fc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::YarpUtilities::VectorsCollectionServer::VectorsCollectionServer</definition>
        <argsstring>()</argsstring>
        <name>VectorsCollectionServer</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/VectorsCollectionServer.h" line="60" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a39245425516a34510e4f88489e88f117" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual BipedalLocomotion::YarpUtilities::VectorsCollectionServer::~VectorsCollectionServer</definition>
        <argsstring>()</argsstring>
        <name>~VectorsCollectionServer</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/VectorsCollectionServer.h" line="65" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a5aa7a1d27b90a8ea57e04787fdae1835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::YarpUtilities::VectorsCollectionServer::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>initialize</name>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize the server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameters handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The following parameters are required: <table rows="2" cols="3"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para>remote   </para>
</entry><entry thead="no" align='center'><para>string   </para>
</entry><entry thead="no" align='center'><para>Name of the port that will be created.   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>true if the server has been initialized successfully, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/VectorsCollectionServer.h" line="76" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1ac79fdca0811aa249a18c3f2e3c1d16e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::YarpUtilities::VectorsCollectionServer::populateMetadata</definition>
        <argsstring>(const std::string &amp;key, const std::vector&lt; std::string &gt; &amp;metadata)</argsstring>
        <name>populateMetadata</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
<para>Populate the metadata. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>key of the metadata. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metadata</parametername>
</parameternamelist>
<parameterdescription>
<para>metadata. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the metadata has been populated successfully, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/VectorsCollectionServer.h" line="84" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a8d6c90c7512271ebfa615e465634d6c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::YarpUtilities::VectorsCollectionServer::finalizeMetadata</definition>
        <argsstring>()</argsstring>
        <name>finalizeMetadata</name>
        <briefdescription>
<para>Finalize the metadata. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the metadata has been finalized successfully, false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>this function should be called after the metadata has been populated. It opens the ports. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/VectorsCollectionServer.h" line="92" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a47e3d8463e7d6ed8bc0b017b23bf1876" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::YarpUtilities::VectorsCollectionServer::populateData</definition>
        <argsstring>(const std::string &amp;key, const iDynTree::Span&lt; const double &gt; &amp;data)</argsstring>
        <name>populateData</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const iDynTree::Span&lt; const double &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Set the data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>key of the data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>data. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the data has been set successfully, false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>this function should be called after the metadata has been finalized and after the prepareData function has been called. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/VectorsCollectionServer.h" line="102" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a4e86fc0a34e47a37d548ccc894a3eead" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorsCollectionMetadata</type>
        <definition>VectorsCollectionMetadata BipedalLocomotion::YarpUtilities::VectorsCollectionServer::getMetadata</definition>
        <argsstring>() override</argsstring>
        <name>getMetadata</name>
        <briefdescription>
<para>Get the metadata. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the metadata. </para>
</simplesect>
<simplesect kind="note"><para>if the metadata is not ready, an empty VectorsCollectionMetadata is returned. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/VectorsCollectionServer.h" line="109" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1ab9bad32b954249921c8b393b29d4890b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::YarpUtilities::VectorsCollectionServer::areMetadataReady</definition>
        <argsstring>() override</argsstring>
        <name>areMetadataReady</name>
        <briefdescription>
<para>Check if the metadata is ready. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the metadata is ready, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/VectorsCollectionServer.h" line="115" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a11300c1246f96871f3952f8b0e47fb24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::YarpUtilities::VectorsCollectionServer::prepareData</definition>
        <argsstring>()</argsstring>
        <name>prepareData</name>
        <briefdescription>
<para>Prepare the data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>this function should be called before the data is populated. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/VectorsCollectionServer.h" line="121" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1ab664728a5a709297618f9e94b8a3e64b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::YarpUtilities::VectorsCollectionServer::sendData</definition>
        <argsstring>(bool forceStrict=false)</argsstring>
        <name>sendData</name>
        <param>
          <type>bool</type>
          <declname>forceStrict</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Send the data filled with populateData. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>forceStrict</parametername>
</parameternamelist>
<parameterdescription>
<para>If this is true, wait until any previous sends are complete. If false, the current object will not be sent on connections that are currently busy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/VectorsCollectionServer.h" line="128" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a425cd46ed345c642ad4558b37914f0d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::YarpUtilities::VectorsCollectionServer::clearData</definition>
        <argsstring>()</argsstring>
        <name>clearData</name>
        <briefdescription>
<para>Deallocates the memory held by the internal buffer used to store data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If you have previously populated the object using populateData and intend to reuse it without reallocating memory, you may skip calling this function. Otherwise, use VectorsCollection::clearData to free the memory allocated in the internal buffer. </para>
</simplesect>
<simplesect kind="note"><para>Note that this function only clears the data and does not affect the metadata. </para>
</simplesect>
<simplesect kind="return"><para>true if the data has been cleared successfully, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/VectorsCollectionServer.h" line="138" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer" kindref="compound">VectorsCollectionServer</ref> is a class that implements the VectorsCollectionMetadataService. </para>
    </briefdescription>
    <detaileddescription>
<para>It allows to send a VectorsCollection to a client. <simplesect kind="note"><para>The VectorCollectionServer allows to send a VectorsCollection to a client. You can use the <ref refid="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer" kindref="compound">VectorsCollectionServer</ref> as follows <programlisting filename=".cpp"><codeline><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>handler<sp/>=<sp/>std::make_shared&lt;ParametersHandler::StdImplementation&gt;();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>fill<sp/>the<sp/>handler<sp/>with<sp/>the<sp/>parameters<sp/>shown<sp/>in<sp/>the<sp/>documentation</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">VectorCollectionServer<sp/>server;</highlight></codeline>
<codeline><highlight class="normal">server.initialize(handler);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>metadata<sp/>should<sp/>be<sp/>populated<sp/>before<sp/>the<sp/>data<sp/>is<sp/>sent.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>metadata<sp/>are<sp/>available<sp/>to<sp/>the<sp/>client<sp/>only<sp/>after<sp/>the<sp/>finalizeMetadata<sp/>function<sp/>is<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">server.populateMetadata(</highlight><highlight class="stringliteral">&quot;key1&quot;</highlight><highlight class="normal">,<sp/>{</highlight><highlight class="stringliteral">&quot;metadata1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;metadata2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;metadata3&quot;</highlight><highlight class="normal">});</highlight></codeline>
<codeline><highlight class="normal">server.populateMetadata(</highlight><highlight class="stringliteral">&quot;key2&quot;</highlight><highlight class="normal">,<sp/>{</highlight><highlight class="stringliteral">&quot;metadata4&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;metadata5&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;metadata6&quot;</highlight><highlight class="normal">});</highlight></codeline>
<codeline><highlight class="normal">server.finalizeMetadata();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>prepare<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">server.prepareData();</highlight></codeline>
<codeline><highlight class="normal">server.clearData();<sp/></highlight><highlight class="comment">//<sp/>optional</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">server.populateData(</highlight><highlight class="stringliteral">&quot;key1&quot;</highlight><highlight class="normal">,<sp/>{1.0,<sp/>2.0,<sp/>3.0});</highlight></codeline>
<codeline><highlight class="normal">server.populateData(</highlight><highlight class="stringliteral">&quot;key2&quot;</highlight><highlight class="normal">,<sp/>{4.0,<sp/>5.0,<sp/>6.0});</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">server.sendData();</highlight></codeline>
</programlisting> <computeroutput>server.write()</computeroutput> will send the data to the client. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BipedalLocomotion::YarpUtilities::VectorsCollectionServer</label>
        <link refid="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>VectorsCollectionMetadataService</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BipedalLocomotion::YarpUtilities::VectorsCollectionServer</label>
        <link refid="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>VectorsCollectionMetadataService</label>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/YarpUtilities/VectorsCollectionServer.h" line="54" column="1" bodyfile="BipedalLocomotion/YarpUtilities/VectorsCollectionServer.h" bodystart="55" bodyend="143"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1ab9bad32b954249921c8b393b29d4890b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::VectorsCollectionServer</scope><name>areMetadataReady</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a425cd46ed345c642ad4558b37914f0d7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::VectorsCollectionServer</scope><name>clearData</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a8d6c90c7512271ebfa615e465634d6c8" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::VectorsCollectionServer</scope><name>finalizeMetadata</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a4e86fc0a34e47a37d548ccc894a3eead" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::VectorsCollectionServer</scope><name>getMetadata</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a5aa7a1d27b90a8ea57e04787fdae1835" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::VectorsCollectionServer</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a0e8b2b00daf7717db8fe01c0bf74ee12" prot="private" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::VectorsCollectionServer</scope><name>m_pimpl</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a47e3d8463e7d6ed8bc0b017b23bf1876" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::VectorsCollectionServer</scope><name>populateData</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1ac79fdca0811aa249a18c3f2e3c1d16e6" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::VectorsCollectionServer</scope><name>populateMetadata</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a11300c1246f96871f3952f8b0e47fb24" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::VectorsCollectionServer</scope><name>prepareData</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1ab664728a5a709297618f9e94b8a3e64b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::VectorsCollectionServer</scope><name>sendData</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a2fd61e131a5a2ce3aaa8e808bb324fc6" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::VectorsCollectionServer</scope><name>VectorsCollectionServer</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1VectorsCollectionServer_1a39245425516a34510e4f88489e88f117" prot="public" virt="virtual"><scope>BipedalLocomotion::YarpUtilities::VectorsCollectionServer</scope><name>~VectorsCollectionServer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
