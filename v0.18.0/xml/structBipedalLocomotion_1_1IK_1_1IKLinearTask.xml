<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structBipedalLocomotion_1_1IK_1_1IKLinearTask" kind="struct" language="C++" prot="public">
    <compoundname>BipedalLocomotion::IK::IKLinearTask</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1LinearTask" prot="public" virt="non-virtual">BipedalLocomotion::System::LinearTask</basecompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1IK_1_1AngularMomentumTask" prot="public" virt="non-virtual">BipedalLocomotion::IK::AngularMomentumTask</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1IK_1_1CoMTask" prot="public" virt="non-virtual">BipedalLocomotion::IK::CoMTask</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1IK_1_1DistanceTask" prot="public" virt="non-virtual">BipedalLocomotion::IK::DistanceTask</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1IK_1_1GravityTask" prot="public" virt="non-virtual">BipedalLocomotion::IK::GravityTask</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1IK_1_1JointLimitsTask" prot="public" virt="non-virtual">BipedalLocomotion::IK::JointLimitsTask</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1IK_1_1JointTrackingTask" prot="public" virt="non-virtual">BipedalLocomotion::IK::JointTrackingTask</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1IK_1_1R3Task" prot="public" virt="non-virtual">BipedalLocomotion::IK::R3Task</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1IK_1_1SE3Task" prot="public" virt="non-virtual">BipedalLocomotion::IK::SE3Task</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1IK_1_1SO3Task" prot="public" virt="non-virtual">BipedalLocomotion::IK::SO3Task</derivedcompoundref>
    <includes local="no">BipedalLocomotion/IK/IKLinearTask.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structBipedalLocomotion_1_1IK_1_1IKLinearTask_1ae1ea36d22880e1068c77661eef76ecf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual BipedalLocomotion::IK::IKLinearTask::~IKLinearTask</definition>
        <argsstring>()=default</argsstring>
        <name>~IKLinearTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/IKLinearTask.h" line="33" column="13"/>
      </memberdef>
      <memberdef kind="function" id="structBipedalLocomotion_1_1IK_1_1IKLinearTask_1acbafe7a440ba7e7fbd0d174dc994accf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::IK::IKLinearTask::setKinDyn</definition>
        <argsstring>(std::shared_ptr&lt; iDynTree::KinDynComputations &gt; kinDyn)</argsstring>
        <name>setKinDyn</name>
        <reimplementedby refid="classBipedalLocomotion_1_1IK_1_1AngularMomentumTask_1ae1f400e1aa466e2edf8ecaaf5de0e106">setKinDyn</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1a5547bc6b5727fbec9947d6d4ede197b9">setKinDyn</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a37d5ce15f2ffc3ea8f46a4a05b935cae">setKinDyn</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a016ae22fd0db3071cada8f090380fd6b">setKinDyn</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1IK_1_1JointLimitsTask_1a2d8c474f9fd61b45fb96473caad89d7a">setKinDyn</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1IK_1_1JointTrackingTask_1a37f0c2c72f2f8a5f8217247e21c3ed7a">setKinDyn</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1IK_1_1R3Task_1a9d265e17235b7193f14cd77587c613b0">setKinDyn</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1IK_1_1SE3Task_1a28526430bdb36d243366def63a199c1a">setKinDyn</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1IK_1_1SO3Task_1a54f52ee7b2330ddb22d55701725643f3">setKinDyn</reimplementedby>
        <param>
          <type>std::shared_ptr&lt; iDynTree::KinDynComputations &gt;</type>
          <declname>kinDyn</declname>
        </param>
        <briefdescription>
<para>Set the kinDynComputations object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kinDyn</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a kinDynComputations object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/IKLinearTask.h" line="40" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask" kindref="compound">IKLinearTask</ref> specializes a LinearTask in the case of Inverse Kinematics. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>BipedalLocomotion::IK::AngularMomentumTask</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1AngularMomentumTask"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion::IK::JointLimitsTask</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1JointLimitsTask"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>BipedalLocomotion::IK::R3Task</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1R3Task"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>BipedalLocomotion::IK::SE3Task</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1SE3Task"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>BipedalLocomotion::IK::JointTrackingTask</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1JointTrackingTask"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>BipedalLocomotion::IK::SO3Task</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1SO3Task"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::IK::GravityTask</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1GravityTask"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::IK::DistanceTask</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1DistanceTask"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::IK::IKLinearTask</label>
        <link refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::IK::CoMTask</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1CoMTask"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::LinearTask</label>
        <link refid="classBipedalLocomotion_1_1System_1_1LinearTask"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="1">
        <label>BipedalLocomotion::IK::IKLinearTask</label>
        <link refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::LinearTask</label>
        <link refid="classBipedalLocomotion_1_1System_1_1LinearTask"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_description</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::string</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/IK/IKLinearTask.h" line="31" column="1" bodyfile="BipedalLocomotion/IK/IKLinearTask.h" bodystart="32" bodyend="41"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad510fff46eb9cbbc65775b1a9490e297" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>getA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a8c65780b85d3927038c3320d3cfca730" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>getB</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a1d152be26f750d933bc07baf1344e97d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>getDescription</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a591be3a0f92c9e1c40ccadf85c21f739" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>getResidual</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ae8bd038ace5d8bccda37b62c5712f22b" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2566bae7a097d11b420b89cdd3f2002f" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>isValid</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1aa95f6768b7cd98aab6727e2eb729a308" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>m_A</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a0e86b8ecde78a0d6e87fcb2c373b2151" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>m_b</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a5efff74f1d43a59376a9c93a0400120a" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>m_description</name></member>
      <member refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask_1acbafe7a440ba7e7fbd0d174dc994accf" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>setKinDyn</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a898c2f93e48aeeb41e29d17c17b95437" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>setVariablesHandler</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a34621cd88c6d60909f09e95226f2cd67" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>size</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a06fab6bb77dd556a74c76b6e57dc0ba1" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>subA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad6a0743b7902e539d634358b269741b4" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>subA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2f9d37ec58342f227021c12a4a539748" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>Type</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ac20d8e993c66663b61f587d9642f3e8a" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>type</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1accd4ab19a7e8738abe53b485d8acbf1c" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>update</name></member>
      <member refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask_1ae1ea36d22880e1068c77661eef76ecf0" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>~IKLinearTask</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a22edf322e7504d1a197b687d265445d7" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::IKLinearTask</scope><name>~LinearTask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
