<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1System_1_1ClockBuilder" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::System::ClockBuilder</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1System_1_1ClockBuilder_1aaeba0c51ba3f7e4efada474492533d32" prot="private" static="yes" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classBipedalLocomotion_1_1System_1_1ClockFactory" kindref="compound">ClockFactory</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ClockFactory&gt; BipedalLocomotion::System::ClockBuilder::m_factory</definition>
        <argsstring></argsstring>
        <name>m_factory</name>
        <initializer>{std::make_shared&lt;<ref refid="classBipedalLocomotion_1_1System_1_1StdClockFactory" kindref="compound">StdClockFactory</ref>&gt;()}</initializer>
        <briefdescription>
<para>Pointer to factory used to build the clock. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Clock.h" line="33" column="35" bodyfile="BipedalLocomotion/System/Clock.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1System_1_1ClockBuilder_1ad31de193cbf85a1427ec04e982cc1114" prot="private" static="yes" mutable="no">
        <type>std::atomic&lt; bool &gt;</type>
        <definition>std::atomic&lt;bool&gt; BipedalLocomotion::System::ClockBuilder::m_clockAlreadyCalledOnce</definition>
        <argsstring></argsstring>
        <name>m_clockAlreadyCalledOnce</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the <ref refid="namespaceBipedalLocomotion_1a5927a6bb897f521070adfb6ca866668f" kindref="member">clock()</ref> has been already called once. </para>
        </briefdescription>
        <detaileddescription>
<para>If True it will not be possible to set a new <ref refid="classBipedalLocomotion_1_1System_1_1Factory" kindref="compound">Factory</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Clock.h" line="34" column="31" bodyfile="BipedalLocomotion/System/Clock.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1ClockBuilder_1a77ee6a0ac739edfbb9fecc64d16ebf0a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool BipedalLocomotion::System::ClockBuilder::setFactory</definition>
        <argsstring>(std::shared_ptr&lt; ClockFactory &gt; factory)</argsstring>
        <name>setFactory</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classBipedalLocomotion_1_1System_1_1ClockFactory" kindref="compound">ClockFactory</ref> &gt;</type>
          <declname>factory</declname>
        </param>
        <briefdescription>
<para>Set a custom factory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>factory.</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an existing factory. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Clock.h" line="44" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classBipedalLocomotion_1_1System_1_1ClockBuilder_1add6baabdedcd52ab9d6b2595135cdd54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBipedalLocomotion_1_1System_1_1IClock" kindref="compound">IClock</ref> &amp;</type>
        <definition>IClock&amp; BipedalLocomotion::clock</definition>
        <argsstring>()</argsstring>
        <name>BipedalLocomotion::clock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Clock.h" line="46" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="BipedalLocomotion/System/Clock.h" line="28" column="1" bodyfile="BipedalLocomotion/System/Clock.h" bodystart="29" bodyend="47"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1ClockBuilder_1add6baabdedcd52ab9d6b2595135cdd54" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::ClockBuilder</scope><name>BipedalLocomotion::clock</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1ClockBuilder_1ad31de193cbf85a1427ec04e982cc1114" prot="private" virt="non-virtual"><scope>BipedalLocomotion::System::ClockBuilder</scope><name>m_clockAlreadyCalledOnce</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1ClockBuilder_1aaeba0c51ba3f7e4efada474492533d32" prot="private" virt="non-virtual"><scope>BipedalLocomotion::System::ClockBuilder</scope><name>m_factory</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1ClockBuilder_1a77ee6a0ac739edfbb9fecc64d16ebf0a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::ClockBuilder</scope><name>setFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
