<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ManifConversions_8h" kind="file" language="C++">
    <compoundname>ManifConversions.h</compoundname>
    <includes local="no">iDynTree/Core/EigenHelpers.h</includes>
    <includes local="no">iDynTree/Core/Transform.h</includes>
    <includes local="no">iDynTree/Core/Twist.h</includes>
    <includes local="no">manif/manif.h</includes>
    <includedby refid="KinDynWrapper_8h" local="no">BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h</includedby>
    <includedby refid="RobotDynamicsEstimator_8h" local="no">BipedalLocomotion/RobotDynamicsEstimator/RobotDynamicsEstimator.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>iDynTree/Core/EigenHelpers.h</label>
      </node>
      <node id="5">
        <label>manif/manif.h</label>
      </node>
      <node id="1">
        <label>BipedalLocomotion/Conversions/ManifConversions.h</label>
        <link refid="ManifConversions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>iDynTree/Core/Twist.h</label>
      </node>
      <node id="3">
        <label>iDynTree/Core/Transform.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15">
        <label>BipedalLocomotion/RobotDynamicsEstimator/RobotDynamicsEstimator.h</label>
        <link refid="RobotDynamicsEstimator_8h"/>
      </node>
      <node id="12">
        <label>BipedalLocomotion/RobotDynamicsEstimator/UkfModel.h</label>
        <link refid="UkfModel_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion/RobotDynamicsEstimator/Dynamics.h</label>
        <link refid="Dynamics_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>BipedalLocomotion/RobotDynamicsEstimator/MotorCurrentMeasurementDynamics.h</label>
        <link refid="MotorCurrentMeasurementDynamics_8h"/>
      </node>
      <node id="11">
        <label>BipedalLocomotion/RobotDynamicsEstimator/UkfMeasurement.h</label>
        <link refid="UkfMeasurement_8h"/>
      </node>
      <node id="5">
        <label>BipedalLocomotion/RobotDynamicsEstimator/ConstantMeasurementModel.h</label>
        <link refid="ConstantMeasurementModel_8h"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion/Conversions/ManifConversions.h</label>
        <link refid="ManifConversions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>BipedalLocomotion/RobotDynamicsEstimator/JointVelocityStateDynamics.h</label>
        <link refid="JointVelocityStateDynamics_8h"/>
      </node>
      <node id="4">
        <label>BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h</label>
        <link refid="AccelerometerMeasurementDynamics_8h"/>
      </node>
      <node id="8">
        <label>BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h</label>
        <link refid="GyroscopeMeasurementDynamics_8h"/>
      </node>
      <node id="7">
        <label>BipedalLocomotion/RobotDynamicsEstimator/FrictionTorqueStateDynamics.h</label>
        <link refid="FrictionTorqueStateDynamics_8h"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h</label>
        <link refid="KinDynWrapper_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion/RobotDynamicsEstimator/ExternalContactStateDynamics.h</label>
        <link refid="ExternalContactStateDynamics_8h"/>
      </node>
      <node id="13">
        <label>BipedalLocomotion/RobotDynamicsEstimator/UkfState.h</label>
        <link refid="UkfState_8h"/>
      </node>
      <node id="14">
        <label>BipedalLocomotion/RobotDynamicsEstimator/ZeroVelocityStateDynamics.h</label>
        <link refid="ZeroVelocityStateDynamics_8h"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceBipedalLocomotion">BipedalLocomotion</innernamespace>
    <innernamespace refid="namespaceBipedalLocomotion_1_1Conversions">BipedalLocomotion::Conversions</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="ManifConversions_8h_1a6eca022cc68f31749418d297b83d67ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Scalar</type>
          </param>
        </templateparamlist>
        <type>manif::SE3&lt; Scalar &gt;</type>
        <definition>manif::SE3&lt;Scalar&gt; BipedalLocomotion::Conversions::toManifPose</definition>
        <argsstring>(const Eigen::Matrix&lt; Scalar, 3, 3 &gt; &amp;rotation, const Eigen::Matrix&lt; Scalar, 3, 1 &gt; &amp;translation)</argsstring>
        <name>toManifPose</name>
        <param>
          <type>const Eigen::Matrix&lt; Scalar, 3, 3 &gt; &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const Eigen::Matrix&lt; Scalar, 3, 1 &gt; &amp;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
<para>Convert rotation matrix and translation vector to manif SE3 object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to 3x3 Eigen matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>translation</parametername>
</parameternamelist>
<parameterdescription>
<para>reference of 3x1 Eigen matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pose as manif SE3 object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Conversions/ManifConversions.h" line="29" column="12" bodyfile="BipedalLocomotion/Conversions/ManifConversions.h" bodystart="29" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="ManifConversions_8h_1a0a64a78d62562574dd0466585928371e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>manif::SE3d</type>
        <definition>manif::SE3d BipedalLocomotion::Conversions::toManifPose</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::Matrix3d &gt; rotation, Eigen::Ref&lt; const Eigen::Vector3d &gt; translation)</argsstring>
        <name>toManifPose</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::Matrix3d &gt;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; const Eigen::Vector3d &gt;</type>
          <declname>translation</declname>
        </param>
        <briefdescription>
<para>Convert rotation matrix and translation vector to manif SE3d object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigen ref of 3x3 rotation matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>translation</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigen ref of 3x1 translation vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pose as manif SE3d object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Conversions/ManifConversions.h" line="44" column="20" bodyfile="BipedalLocomotion/Conversions/ManifConversions.h" bodystart="44" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="ManifConversions_8h_1ac71646fdf92888d3f6897ae090ce0a9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>manif::SE3d</type>
        <definition>manif::SE3d BipedalLocomotion::Conversions::toManifPose</definition>
        <argsstring>(const iDynTree::Transform &amp;H)</argsstring>
        <name>toManifPose</name>
        <param>
          <type>const iDynTree::Transform &amp;</type>
          <declname>H</declname>
        </param>
        <briefdescription>
<para>Convert iDynTree transform object to manif SE3d object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>H</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to iDynTree Tranform object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pose as manif SE3d object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Conversions/ManifConversions.h" line="58" column="20" bodyfile="BipedalLocomotion/Conversions/ManifConversions.h" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="ManifConversions_8h_1af56866b8b1ef81c3e00c5b53939386d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Scalar</type>
          </param>
        </templateparamlist>
        <type>manif::SO3&lt; Scalar &gt;</type>
        <definition>manif::SO3&lt;Scalar&gt; BipedalLocomotion::Conversions::toManifRot</definition>
        <argsstring>(const Eigen::Matrix&lt; Scalar, 3, 3 &gt; &amp;rotation)</argsstring>
        <name>toManifRot</name>
        <param>
          <type>const Eigen::Matrix&lt; Scalar, 3, 3 &gt; &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Convert rotation matrix to manif SO3 object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to 3x3 Eigen matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pose as manif SO3 object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Conversions/ManifConversions.h" line="69" column="24" bodyfile="BipedalLocomotion/Conversions/ManifConversions.h" bodystart="69" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="ManifConversions_8h_1a2b82cd2819e93a949cdf1afb56555565" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>manif::SO3d</type>
        <definition>manif::SO3d BipedalLocomotion::Conversions::toManifRot</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::Matrix3d &gt; rotation)</argsstring>
        <name>toManifRot</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::Matrix3d &gt;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Convert rotation matrix to manif SO3d object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigen ref of 3x3 rotation matrix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>translation</parametername>
</parameternamelist>
<parameterdescription>
<para>Eigen ref of 3x1 translation vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pose as manif SO3d object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Conversions/ManifConversions.h" line="83" column="20" bodyfile="BipedalLocomotion/Conversions/ManifConversions.h" bodystart="83" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="ManifConversions_8h_1aa3cbc74d297378895e4686cd4f8f3b3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>manif::SO3d</type>
        <definition>manif::SO3d BipedalLocomotion::Conversions::toManifRot</definition>
        <argsstring>(const iDynTree::Rotation &amp;R)</argsstring>
        <name>toManifRot</name>
        <param>
          <type>const iDynTree::Rotation &amp;</type>
          <declname>R</declname>
        </param>
        <briefdescription>
<para>Convert iDynTree rotation object to manif SE3d object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>R</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to iDynTree rotation object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pose as manif SO3d object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Conversions/ManifConversions.h" line="96" column="20" bodyfile="BipedalLocomotion/Conversions/ManifConversions.h" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="ManifConversions_8h_1a2ee026f68afc3402f6b722614d595136" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>manif::SE3Tangentd</type>
        <definition>manif::SE3Tangentd BipedalLocomotion::Conversions::toManifTwist</definition>
        <argsstring>(const iDynTree::Twist &amp;twist)</argsstring>
        <name>toManifTwist</name>
        <param>
          <type>const iDynTree::Twist &amp;</type>
          <declname>twist</declname>
        </param>
        <briefdescription>
<para>Convert iDynTree twist object to manif SE3Tangentd object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>twist</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to iDynTree twist object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a twist as manif SE3Tangentd object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Conversions/ManifConversions.h" line="107" column="27" bodyfile="BipedalLocomotion/Conversions/ManifConversions.h" bodystart="107" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="ManifConversions_8h_1a0514450edfa28e5496b74ab194b67e2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iDynTree::Transform</type>
        <definition>iDynTree::Transform BipedalLocomotion::Conversions::toiDynTreePose</definition>
        <argsstring>(const manif::SE3d &amp;se3)</argsstring>
        <name>toiDynTreePose</name>
        <param>
          <type>const manif::SE3d &amp;</type>
          <declname>se3</declname>
        </param>
        <briefdescription>
<para>Convert a manif SE3 object into and iDynTree::Transform. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>se3</parametername>
</parameternamelist>
<parameterdescription>
<para>a manif SE3 object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pose as iDynTree::Transform </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Conversions/ManifConversions.h" line="121" column="28" bodyfile="BipedalLocomotion/Conversions/ManifConversions.h" bodystart="121" bodyend="124"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="authors"><para>Prashanth Ramadoss Giulio Romualdi </para>
</simplesect>
<simplesect kind="copyright"><para>2020 Istituto Italiano di Tecnologia (IIT). This software may be modified and distributed under the terms of the BSD-3-Clause license. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="BipedalLocomotion/Conversions/ManifConversions.h"/>
  </compounddef>
</doxygen>
