<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper</compoundname>
    <basecompoundref prot="public" virt="non-virtual">iDynTree::KinDynComputations</basecompoundref>
    <includes local="no">BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1a653f4c9ff8f94ff3c4cc57da9b5efe7f" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper::m_totalBaseJointTorques</definition>
        <argsstring></argsstring>
        <name>m_totalBaseJointTorques</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" line="39" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1aad10f2e95a2bf42bb86f43b2a06358c0" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper::m_totalJointTorques</definition>
        <argsstring></argsstring>
        <name>m_totalJointTorques</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" line="40" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1a1706bc13d1cecb88366fe19a9ee3cf69" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper::m_generalizedBiasForces</definition>
        <argsstring></argsstring>
        <name>m_generalizedBiasForces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" line="41" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1a57fe2a9f6f4db241e5bc99d99e900ca3" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper::m_FTvBaseDot</definition>
        <argsstring></argsstring>
        <name>m_FTvBaseDot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" line="42" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1a5ab4a619288c49377da68c2937a6a8ac" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper::m_nuDot</definition>
        <argsstring></argsstring>
        <name>m_nuDot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" line="43" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1ad451df6fe796ced241ec444178b990cd" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper::m_massMatrix</definition>
        <argsstring></argsstring>
        <name>m_massMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" line="44" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1add1beeb7ea6b7bbab942ebdb974ce9f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper::setModel</definition>
        <argsstring>(const SubModel &amp;model)</argsstring>
        <name>setModel</name>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>setModel set the model and resize variables. </para>
        </briefdescription>
        <detaileddescription>
<para>The default frame velocity representation is BODY FIXED. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> object describing the robot model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a boolean value saying if all the variables are initialized correctly. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" line="53" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1a695f2f647eafe99785f0586722ab3145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper::forwardDynamics</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; motorTorqueAfterGearbox, Eigen::Ref&lt; const Eigen::VectorXd &gt; frictionTorques, Eigen::Ref&lt; const Eigen::VectorXd &gt; tauExt, manif::SE3d::Tangent baseAcceleration, Eigen::Ref&lt; Eigen::VectorXd &gt; jointAcceleration)</argsstring>
        <name>forwardDynamics</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>motorTorqueAfterGearbox</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>frictionTorques</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>tauExt</declname>
        </param>
        <param>
          <type>manif::SE3d::Tangent</type>
          <declname>baseAcceleration</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; Eigen::VectorXd &gt;</type>
          <declname>jointAcceleration</declname>
        </param>
        <briefdescription>
<para>forwardDynamics computes the forward dynamics only for the joints. </para>
        </briefdescription>
        <detaileddescription>
<para>The base acceleration should be provided by the user. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>motorTorqueAfterGearbox</parametername>
</parameternamelist>
<parameterdescription>
<para>joint motor torques. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frictionTorques</parametername>
</parameternamelist>
<parameterdescription>
<para>joint friction torques. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tauExt</parametername>
</parameternamelist>
<parameterdescription>
<para>torques generated by external contacts. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>baseAcceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>acceleration of the base. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jointAcceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>acceleration of the joints computed as forward dynamics. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" line="65" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1a20be227e49e3690dbd51b9b147e5e57d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper::forwardDynamics</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; motorTorqueAfterGearbox, Eigen::Ref&lt; const Eigen::VectorXd &gt; frictionTorques, Eigen::Ref&lt; const Eigen::VectorXd &gt; tauExt, Eigen::Ref&lt; Eigen::VectorXd &gt; nuDot)</argsstring>
        <name>forwardDynamics</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>motorTorqueAfterGearbox</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>frictionTorques</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>tauExt</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; Eigen::VectorXd &gt;</type>
          <declname>nuDot</declname>
        </param>
        <briefdescription>
<para>forwardDynamics computes the forward dynamics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>motorTorqueAfterGearbox</parametername>
</parameternamelist>
<parameterdescription>
<para>joint motor torques. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frictionTorques</parametername>
</parameternamelist>
<parameterdescription>
<para>joint friction torques. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tauExt</parametername>
</parameternamelist>
<parameterdescription>
<para>torques generated by external contacts. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nuDot</parametername>
</parameternamelist>
<parameterdescription>
<para>acceleration of the base plus acceleration of the joints computed as forward dynamics. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" line="80" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1ac345c922200cc4544ed38284a4d294e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
        <definition>Eigen::Ref&lt;const Eigen::VectorXd&gt; BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper::getNuDot</definition>
        <argsstring>()</argsstring>
        <name>getNuDot</name>
        <briefdescription>
<para>getNuDot get the base and joint accelerations computed as forward dynamics. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a Eigen::Vector of dimension <computeroutput>6 + nr_of_joints</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" line="89" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper" kindref="compound">KinDynWrapper</ref> is a concrete class and implements a wrapper of the KinDynComputation class from iDynTree. </para>
    </briefdescription>
    <detaileddescription>
<para>The class is used to take updated the sub-model kinematics and dynamics </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>iDynTree::KinDynComputations</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>iDynTree::KinDynComputations</label>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" line="37" column="1" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/KinDynWrapper.h" bodystart="38" bodyend="90"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1a695f2f647eafe99785f0586722ab3145" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper</scope><name>forwardDynamics</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1a20be227e49e3690dbd51b9b147e5e57d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper</scope><name>forwardDynamics</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1ac345c922200cc4544ed38284a4d294e7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper</scope><name>getNuDot</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1a57fe2a9f6f4db241e5bc99d99e900ca3" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper</scope><name>m_FTvBaseDot</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1a1706bc13d1cecb88366fe19a9ee3cf69" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper</scope><name>m_generalizedBiasForces</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1ad451df6fe796ced241ec444178b990cd" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper</scope><name>m_massMatrix</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1a5ab4a619288c49377da68c2937a6a8ac" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper</scope><name>m_nuDot</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1a653f4c9ff8f94ff3c4cc57da9b5efe7f" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper</scope><name>m_totalBaseJointTorques</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1aad10f2e95a2bf42bb86f43b2a06358c0" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper</scope><name>m_totalJointTorques</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper_1add1beeb7ea6b7bbab942ebdb974ce9f9" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::KinDynWrapper</scope><name>setModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
