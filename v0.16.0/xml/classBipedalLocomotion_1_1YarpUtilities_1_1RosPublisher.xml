<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::YarpUtilities::RosPublisher</compoundname>
    <includes local="no">BipedalLocomotion/YarpUtilities/RosPublisher.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a3e242dc2c4c04e94639a6ea79d91284a" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; BipedalLocomotion::YarpUtilities::RosPublisher::m_pimpl</definition>
        <argsstring></argsstring>
        <name>m_pimpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="147" column="21" bodyfile="BipedalLocomotion/YarpUtilities/RosPublisher.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1acbc0c0b65043bac152ba4a9aed75a14c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::YarpUtilities::RosPublisher::RosPublisher</definition>
        <argsstring>(const std::string &amp;nodeName)</argsstring>
        <name>RosPublisher</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>nodeName</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nodeName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the ROS publisher node </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="40" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1afe7fafcb1f3ab1e67bedffc0ec10617d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::YarpUtilities::RosPublisher::~RosPublisher</definition>
        <argsstring>()</argsstring>
        <name>~RosPublisher</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="45" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a105ff197482b3a89b878489626dc58e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::YarpUtilities::RosPublisher::initialize</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>initialize</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Configures the publishers and ROS topics for publishing messages The parameters used to configure the <ref refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher" kindref="compound">RosPublisher</ref>,. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>&quot;joint_states_topic&quot; name of the topic over which the joint states need to be published</para>
</listitem><listitem><para>&quot;transform_server_port&quot; name of the already running transform server&apos;s remote port</para>
</listitem><listitem><para>&quot;WrenchPublishers&quot; is group with the following parameters,<itemizedlist>
<listitem><para>&quot;frame_names&quot; a list containing the frames at which the published wrenches should be expressed</para>
</listitem><listitem><para>&quot;topics&quot; a list containing the topics over which the wrenches need to be published. Must be the same size and order as frame_names. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this method needs to be called after construction and before publishing </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="58" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1ab6f340d9cdbcb6718e5c756f439ca239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::YarpUtilities::RosPublisher::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
<para>Clear internal configuration and close the node. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="63" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a822812abbd297752c52b4f2e9abd0dc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::YarpUtilities::RosPublisher::publishJointStates</definition>
        <argsstring>(const BipedalLocomotion::GenericContainer::Vector&lt; const std::string &gt;::Ref jointList, const BipedalLocomotion::GenericContainer::Vector&lt; const double &gt;::Ref jointPositions)</argsstring>
        <name>publishJointStates</name>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">BipedalLocomotion::GenericContainer::Vector</ref>&lt; const std::string &gt;::Ref</type>
          <declname>jointList</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">BipedalLocomotion::GenericContainer::Vector</ref>&lt; const double &gt;::Ref</type>
          <declname>jointPositions</declname>
        </param>
        <briefdescription>
<para>Publish the joint states over the configured joint states topic The joint velocities and joint efforts are set to zero. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jointList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of joints </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">jointPositions</parametername>
</parameternamelist>
<parameterdescription>
<para>list of joint positions in m or rad with the same size as the joints list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="71" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1ab101ab6d42f927cf3043ec0060f097e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::YarpUtilities::RosPublisher::publishJointStates</definition>
        <argsstring>(const BipedalLocomotion::GenericContainer::Vector&lt; const std::string &gt;::Ref jointList, const BipedalLocomotion::GenericContainer::Vector&lt; const double &gt;::Ref jointPositions, const BipedalLocomotion::GenericContainer::Vector&lt; const double &gt;::Ref jointVelocities)</argsstring>
        <name>publishJointStates</name>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">BipedalLocomotion::GenericContainer::Vector</ref>&lt; const std::string &gt;::Ref</type>
          <declname>jointList</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">BipedalLocomotion::GenericContainer::Vector</ref>&lt; const double &gt;::Ref</type>
          <declname>jointPositions</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">BipedalLocomotion::GenericContainer::Vector</ref>&lt; const double &gt;::Ref</type>
          <declname>jointVelocities</declname>
        </param>
        <briefdescription>
<para>Publish the joint states over the configured joint states topic The joint velocities and joint efforts are set to zero. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jointList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of joints </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">jointPositions</parametername>
</parameternamelist>
<parameterdescription>
<para>list of joint positions in m or rad with the same size as the joints list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">jointVelocities</parametername>
</parameternamelist>
<parameterdescription>
<para>list of joint velocities in m/s or rad/s with the same size as the joints list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="81" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a341c71b9fbbd86d627f38e6d2a55d548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::YarpUtilities::RosPublisher::publishJointStates</definition>
        <argsstring>(const BipedalLocomotion::GenericContainer::Vector&lt; const std::string &gt;::Ref jointList, const BipedalLocomotion::GenericContainer::Vector&lt; const double &gt;::Ref jointPositions, const BipedalLocomotion::GenericContainer::Vector&lt; const double &gt;::Ref jointVelocities, const BipedalLocomotion::GenericContainer::Vector&lt; const double &gt;::Ref jointEfforts)</argsstring>
        <name>publishJointStates</name>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">BipedalLocomotion::GenericContainer::Vector</ref>&lt; const std::string &gt;::Ref</type>
          <declname>jointList</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">BipedalLocomotion::GenericContainer::Vector</ref>&lt; const double &gt;::Ref</type>
          <declname>jointPositions</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">BipedalLocomotion::GenericContainer::Vector</ref>&lt; const double &gt;::Ref</type>
          <declname>jointVelocities</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">BipedalLocomotion::GenericContainer::Vector</ref>&lt; const double &gt;::Ref</type>
          <declname>jointEfforts</declname>
        </param>
        <briefdescription>
<para>Publish the joint states over the configured joint states topic The joint velocities and joint efforts are set to zero. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">jointList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of joints </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">jointPositions</parametername>
</parameternamelist>
<parameterdescription>
<para>list of joint positions in m or rad with the same size as the joints list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">jointVelocities</parametername>
</parameternamelist>
<parameterdescription>
<para>list of joint velocities in m/s or rad/s with the same size as the joints list </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">jointPositions</parametername>
</parameternamelist>
<parameterdescription>
<para>list of joint torques/forces in Nm or N with the same size as the joints list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="93" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a230190780915cb52b834d5fd64b2e217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::YarpUtilities::RosPublisher::publishWrench</definition>
        <argsstring>(const std::string &amp;frameName, BipedalLocomotion::GenericContainer::Vector&lt; const double &gt;::Ref wrench6d)</argsstring>
        <name>publishWrench</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>frameName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">BipedalLocomotion::GenericContainer::Vector</ref>&lt; const double &gt;::Ref</type>
          <declname>wrench6d</declname>
        </param>
        <briefdescription>
<para>Publish the wrenches over the configured wrench topic associated to the frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frameName</parametername>
</parameternamelist>
<parameterdescription>
<para>frame at which the wrench will be expressed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">wrench6d</parametername>
</parameternamelist>
<parameterdescription>
<para>6d wrench as force-torque in N-Nm with serialziation as fx fy fz tx ty tz </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="103" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a71a34910a40560f3948a220d9a47585f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::YarpUtilities::RosPublisher::publishTransform</definition>
        <argsstring>(const std::string &amp;target, const std::string &amp;source, const BipedalLocomotion::GenericContainer::Vector&lt; const double &gt;::Ref transformAsVector16d)</argsstring>
        <name>publishTransform</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">BipedalLocomotion::GenericContainer::Vector</ref>&lt; const double &gt;::Ref</type>
          <declname>transformAsVector16d</declname>
        </param>
        <briefdescription>
<para>Publish transforms to the transform server. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">target</parametername>
</parameternamelist>
<parameterdescription>
<para>target frame for the transform </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">source</parametername>
</parameternamelist>
<parameterdescription>
<para>source frame of the transform </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">transformAsVector16d</parametername>
</parameternamelist>
<parameterdescription>
<para>4x4 transform as a vector data in row-major order </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="112" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1af82d8c434a410d484098c1dc3de98711" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::YarpUtilities::RosPublisher::configureTransformServer</definition>
        <argsstring>(const std::string &amp;transformServerPort)</argsstring>
        <name>configureTransformServer</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>transformServerPort</declname>
        </param>
        <briefdescription>
<para>Configure which transform server to connect to. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">transformServerPort</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the transform server port </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="119" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1ae8b262e63399e50fdd3436b5dfdf2b35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::YarpUtilities::RosPublisher::configureJointStatePublisher</definition>
        <argsstring>(const std::string &amp;topicName)</argsstring>
        <name>configureJointStatePublisher</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>topicName</declname>
        </param>
        <briefdescription>
<para>Configure the topic over which joint states are published. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">topicName</parametername>
</parameternamelist>
<parameterdescription>
<para>topic name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="125" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a29115595a1f580db37be309b085eef4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::YarpUtilities::RosPublisher::configureWrenchPublisher</definition>
        <argsstring>(const std::string &amp;frameName, const std::string &amp;topicName)</argsstring>
        <name>configureWrenchPublisher</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>frameName</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>topicName</declname>
        </param>
        <briefdescription>
<para>Add or reconfigure a wrench publisher. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frameName</parametername>
</parameternamelist>
<parameterdescription>
<para>frame name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">topicName</parametername>
</parameternamelist>
<parameterdescription>
<para>topic name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="132" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a8898d6f6bb8f8154ab564104038ea0d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::YarpUtilities::RosPublisher::removeWrenchPublisher</definition>
        <argsstring>(const std::string &amp;frameName)</argsstring>
        <name>removeWrenchPublisher</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>frameName</declname>
        </param>
        <briefdescription>
<para>Remove wrench publisher. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">frameName</parametername>
</parameternamelist>
<parameterdescription>
<para>frame name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="139" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a0399310a5ffc70b0ad5880950b8e48c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::YarpUtilities::RosPublisher::RosPublisher</definition>
        <argsstring>(const RosPublisher &amp;other)=delete</argsstring>
        <name>RosPublisher</name>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher" kindref="compound">RosPublisher</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>delete copy constructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="141" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a659a350fef218f88ce8012073d7a1f18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::YarpUtilities::RosPublisher::RosPublisher</definition>
        <argsstring>(RosPublisher &amp;&amp;other)=delete</argsstring>
        <name>RosPublisher</name>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher" kindref="compound">RosPublisher</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>delete move constructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="142" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a0d8f6c9c085f6c8a6bfbc896645bc753" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher" kindref="compound">RosPublisher</ref> &amp;</type>
        <definition>RosPublisher&amp; BipedalLocomotion::YarpUtilities::RosPublisher::operator=</definition>
        <argsstring>(const RosPublisher &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher" kindref="compound">RosPublisher</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>delete copy assignment operator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="143" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a111407193a2f97dfc741d22dfb217b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher" kindref="compound">RosPublisher</ref> &amp;</type>
        <definition>RosPublisher&amp; BipedalLocomotion::YarpUtilities::RosPublisher::operator=</definition>
        <argsstring>(RosPublisher &amp;&amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher" kindref="compound">RosPublisher</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>delete move assignment operator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="144" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class internally contains a YARP based ROS node and a set of publishers. </para>
    </briefdescription>
    <detaileddescription>
<para>Current implementation consists of<itemizedlist>
<listitem><para>Joint states publisher</para>
</listitem><listitem><para>Wrenches publisher</para>
</listitem><listitem><para>Transform broadcaster Although the class might be ROS independent, in order to run the code, ROS is required and usual YARP-ROS connections need to be made. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <location file="BipedalLocomotion/YarpUtilities/RosPublisher.h" line="33" column="1" bodyfile="BipedalLocomotion/YarpUtilities/RosPublisher.h" bodystart="34" bodyend="149"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1ae8b262e63399e50fdd3436b5dfdf2b35" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>configureJointStatePublisher</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1af82d8c434a410d484098c1dc3de98711" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>configureTransformServer</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a29115595a1f580db37be309b085eef4a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>configureWrenchPublisher</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a105ff197482b3a89b878489626dc58e9" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a3e242dc2c4c04e94639a6ea79d91284a" prot="private" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>m_pimpl</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a0d8f6c9c085f6c8a6bfbc896645bc753" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a111407193a2f97dfc741d22dfb217b3f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a822812abbd297752c52b4f2e9abd0dc9" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>publishJointStates</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1ab101ab6d42f927cf3043ec0060f097e9" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>publishJointStates</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a341c71b9fbbd86d627f38e6d2a55d548" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>publishJointStates</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a71a34910a40560f3948a220d9a47585f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>publishTransform</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a230190780915cb52b834d5fd64b2e217" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>publishWrench</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a8898d6f6bb8f8154ab564104038ea0d3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>removeWrenchPublisher</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1acbc0c0b65043bac152ba4a9aed75a14c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>RosPublisher</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a0399310a5ffc70b0ad5880950b8e48c6" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>RosPublisher</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1a659a350fef218f88ce8012073d7a1f18" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>RosPublisher</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1ab6f340d9cdbcb6718e5c756f439ca239" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>stop</name></member>
      <member refid="classBipedalLocomotion_1_1YarpUtilities_1_1RosPublisher_1afe7fafcb1f3ab1e67bedffc0ec10617d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::YarpUtilities::RosPublisher</scope><name>~RosPublisher</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
