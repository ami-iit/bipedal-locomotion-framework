<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceBipedalLocomotion_1_1Contacts" kind="namespace" language="C++">
    <compoundname>BipedalLocomotion::Contacts</compoundname>
    <innerclass refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector" prot="public">BipedalLocomotion::Contacts::ContactDetector</innerclass>
    <innerclass refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector" prot="public">BipedalLocomotion::Contacts::FixedFootDetector</innerclass>
    <innerclass refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector" prot="public">BipedalLocomotion::Contacts::SchmittTriggerDetector</innerclass>
    <innerclass refid="structBipedalLocomotion_1_1Contacts_1_1ContactBase" prot="public">BipedalLocomotion::Contacts::ContactBase</innerclass>
    <innerclass refid="structBipedalLocomotion_1_1Contacts_1_1PlannedContact" prot="public">BipedalLocomotion::Contacts::PlannedContact</innerclass>
    <innerclass refid="structBipedalLocomotion_1_1Contacts_1_1EstimatedContact" prot="public">BipedalLocomotion::Contacts::EstimatedContact</innerclass>
    <innerclass refid="structBipedalLocomotion_1_1Contacts_1_1ContactWrench" prot="public">BipedalLocomotion::Contacts::ContactWrench</innerclass>
    <innerclass refid="structBipedalLocomotion_1_1Contacts_1_1Corner" prot="public">BipedalLocomotion::Contacts::Corner</innerclass>
    <innerclass refid="structBipedalLocomotion_1_1Contacts_1_1DiscreteGeometryContact" prot="public">BipedalLocomotion::Contacts::DiscreteGeometryContact</innerclass>
    <innerclass refid="classBipedalLocomotion_1_1Contacts_1_1ContactList" prot="public">BipedalLocomotion::Contacts::ContactList</innerclass>
    <innerclass refid="structBipedalLocomotion_1_1Contacts_1_1ContactPhase" prot="public">BipedalLocomotion::Contacts::ContactPhase</innerclass>
    <innerclass refid="classBipedalLocomotion_1_1Contacts_1_1ContactPhaseList" prot="public">BipedalLocomotion::Contacts::ContactPhaseList</innerclass>
    <innerclass refid="classBipedalLocomotion_1_1Contacts_1_1GlobalCoPEvaluator" prot="public">BipedalLocomotion::Contacts::GlobalCoPEvaluator</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="Contact_8h_1a34ae1b101a919e7e1b42ddf2193c51b0" prot="public" static="no" strong="yes">
        <type></type>
        <name>ContactType</name>
        <enumvalue id="Contact_8h_1a34ae1b101a919e7e1b42ddf2193c51b0aba7de5bc6888294e5884b024a4c894f1" prot="public">
          <name>FULL</name>
          <briefdescription>
<para>The contact impose a full pose constraint. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="Contact_8h_1a34ae1b101a919e7e1b42ddf2193c51b0aaebdbcb765394d25d6a604589a890f82" prot="public">
          <name>POINT</name>
          <briefdescription>
<para>The contact impose a position constraint. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Definition of the type of contact. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/Contact.h" line="30" column="1" bodyfile="BipedalLocomotion/Contacts/Contact.h" bodystart="31" bodyend="41"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ContactDetector_8h_1ace202ec51b1a593717e2f279ef90386f" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, <ref refid="structBipedalLocomotion_1_1Contacts_1_1EstimatedContact" kindref="compound">Contacts::EstimatedContact</ref> &gt;</type>
        <definition>using BipedalLocomotion::Contacts::EstimatedContactList = typedef std::unordered_map&lt;std::string, Contacts::EstimatedContact&gt;</definition>
        <argsstring></argsstring>
        <name>EstimatedContactList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="22" column="1" bodyfile="BipedalLocomotion/ContactDetectors/ContactDetector.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="Contact_8h_1ad2d4f7afefeb8c02566b8498aea79042" prot="public" static="no">
        <type><ref refid="structBipedalLocomotion_1_1Contacts_1_1EstimatedContact" kindref="compound">EstimatedContact</ref></type>
        <definition>using BipedalLocomotion::Contacts::EstimatedLandmark = typedef EstimatedContact</definition>
        <argsstring></argsstring>
        <name>EstimatedLandmark</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/Contact.h" line="144" column="1" bodyfile="BipedalLocomotion/Contacts/Contact.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ContactList_8h_1a6d1a0a8ca118c9933d2c4f7a8c799b0e" prot="public" static="no">
        <type>std::unordered_map&lt; std::string, <ref refid="classBipedalLocomotion_1_1Contacts_1_1ContactList" kindref="compound">ContactList</ref> &gt;</type>
        <definition>using BipedalLocomotion::Contacts::ContactListMap = typedef std::unordered_map&lt;std::string, ContactList&gt;</definition>
        <argsstring></argsstring>
        <name>ContactListMap</name>
        <briefdescription>
<para>Utility alias to a map of ContacLists. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The key of the map is a user define label representing the contact name. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="244" column="1" bodyfile="BipedalLocomotion/Contacts/ContactList.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ContactListJsonParser_8h_1a1633a539039e00059b437ca778c5d4d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ContactList_8h_1a6d1a0a8ca118c9933d2c4f7a8c799b0e" kindref="member">ContactListMap</ref></type>
        <definition>ContactListMap BipedalLocomotion::Contacts::contactListMapFromJson</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>contactListMapFromJson</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Parse a ContactListMap from a JSON file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the file that should be loaded. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>return a ContactListMap containing all the contacts. </para>
</simplesect>
<simplesect kind="note"><para>The JSON file should have a structure similar to the following example. <programlisting filename=".json"><codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&quot;my_left_foot&quot;:<sp/>[</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;activation_time&quot;:<sp/>0.0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;deactivation_time&quot;:<sp/>1.0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;index&quot;:<sp/>42,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;name&quot;:<sp/>&quot;left_foot&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;position&quot;:<sp/>[</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5968800669521466,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.8232947158735686,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.6048972614132321</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;quaternion&quot;:<sp/>[</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.3149241877569222,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.8968666065772184,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.18925645870451685,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.24624182993742819</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;activation_time&quot;:<sp/>2.0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;deactivation_time&quot;:<sp/>5.0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;index&quot;:<sp/>42,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;name&quot;:<sp/>&quot;left_foot&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;position&quot;:<sp/>[</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.10793991159086103,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.0452058962756795,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.2577418495238488</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;quaternion&quot;:<sp/>[</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.09318476783085411,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5701901104695768,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.10052857125007243,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.8099961995771466</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&quot;my_right_foot&quot;:<sp/>[</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;activation_time&quot;:<sp/>0.0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;deactivation_time&quot;:<sp/>3.0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;index&quot;:<sp/>33,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;name&quot;:<sp/>&quot;right_foot&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;position&quot;:<sp/>[</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.8323901360074013,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.2714234559198019,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.43459385886536617</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;quaternion&quot;:<sp/>[</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.794180500610814,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.17857274481750596,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5769716176729885,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-0.06702879722711332</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>]</highlight></codeline>
<codeline><highlight class="normal">*}</highlight></codeline>
</programlisting> </para>
</simplesect>
<simplesect kind="note"><para>The structure of each step replicates the attributes of <ref refid="structBipedalLocomotion_1_1Contacts_1_1PlannedContact" kindref="compound">PlannedContact</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactListJsonParser.h" line="87" column="16" declfile="BipedalLocomotion/Contacts/ContactListJsonParser.h" declline="87" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="ContactListJsonParser_8h_1a9cdffabdd4841b37271e56376ba4d079" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::contactListMapToJson</definition>
        <argsstring>(const ContactListMap &amp;map, const std::string &amp;filename)</argsstring>
        <name>contactListMapToJson</name>
        <param>
          <type>const <ref refid="ContactList_8h_1a6d1a0a8ca118c9933d2c4f7a8c799b0e" kindref="member">ContactListMap</ref> &amp;</type>
          <declname>map</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Store a ContactListMap to a JSON file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>a ContactListMap containing the list of the contacts. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the file that should be loaded. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>return true in case of success, failure otherwise. </para>
</simplesect>
<simplesect kind="note"><para>The function generates a JSON file readable by <ref refid="ContactListJsonParser_8h_1a1633a539039e00059b437ca778c5d4d6" kindref="member">contactListMapFromJson()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactListJsonParser.h" line="96" column="6" declfile="BipedalLocomotion/Contacts/ContactListJsonParser.h" declline="96" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="BipedalLocomotion/ContactDetectors/ContactDetector.h" line="19" column="1"/>
  </compounddef>
</doxygen>
