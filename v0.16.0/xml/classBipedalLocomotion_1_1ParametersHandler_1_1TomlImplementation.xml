<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::ParametersHandler::TomlImplementation</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" prot="public" virt="non-virtual">BipedalLocomotion::ParametersHandler::IParametersHandler</basecompoundref>
    <includes local="no">BipedalLocomotion/ParametersHandler/TomlImplementation.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a855f1b3cc063980b3b7b5cb0790ca57d" prot="private" static="no" mutable="no">
        <type>toml::table</type>
        <definition>toml::table BipedalLocomotion::ParametersHandler::TomlImplementation::m_container</definition>
        <argsstring></argsstring>
        <name>m_container</name>
        <briefdescription>
<para>Main container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="31" column="17" bodyfile="BipedalLocomotion/ParametersHandler/TomlImplementation.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a699b33053f2d27f000f9adc1fe673265" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::shared_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation" kindref="compound">TomlImplementation</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;std::string, std::shared_ptr&lt;TomlImplementation&gt; &gt; BipedalLocomotion::ParametersHandler::TomlImplementation::m_lists</definition>
        <argsstring></argsstring>
        <name>m_lists</name>
        <briefdescription>
<para>Map containing pointers to the (asked) groups. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="34" column="24" bodyfile="BipedalLocomotion/ParametersHandler/TomlImplementation.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a28261ed5290820c00cbd00ca7a95aa4c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::TomlImplementation::getParameterPrivate</definition>
        <argsstring>(const std::string &amp;parameterName, T &amp;parameter) const</argsstring>
        <name>getParameterPrivate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Private implementation of getParameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="44" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1aab6b245af25b1643f063df7e1cfe9884" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::TomlImplementation::setParameterPrivate</definition>
        <argsstring>(const std::string &amp;parameterName, const T &amp;parameter)</argsstring>
        <name>setParameterPrivate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Private implementation of setParameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="53" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a5bc95be4154e386ebe1025072866f4d3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation" kindref="compound">TomlImplementation</ref> &gt;</type>
        <definition>std::shared_ptr&lt;TomlImplementation&gt; BipedalLocomotion::ParametersHandler::TomlImplementation::clonePrivate</definition>
        <argsstring>() const</argsstring>
        <name>clonePrivate</name>
        <briefdescription>
<para>Clone the content of the handler. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation" kindref="compound">TomlImplementation</ref> containing the content of the handler. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="59" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a10741fc6e67b7132d01fe661b8fa9161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ParametersHandler::TomlImplementation::TomlImplementation</definition>
        <argsstring>(const toml::table &amp;container)</argsstring>
        <name>TomlImplementation</name>
        <param>
          <type>const toml::table &amp;</type>
          <declname>container</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>container</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to a searchable object. The object is copied inside the Handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="67" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a3ed139758fa6c4e99bffc59666d6a8af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ParametersHandler::TomlImplementation::TomlImplementation</definition>
        <argsstring>()=default</argsstring>
        <name>TomlImplementation</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="72" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a65e64026771b47b0618b637a997dee4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::TomlImplementation::set</definition>
        <argsstring>(const toml::table &amp;container)</argsstring>
        <name>set</name>
        <param>
          <type>const toml::table &amp;</type>
          <declname>container</declname>
        </param>
        <briefdescription>
<para>Set the handler from an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>container</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="78" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a16f1f04aedcf5fb04008cb4436371def" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::TomlImplementation::setFromFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>setFromFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Set the handler from a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the file that should be loaded. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="85" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a5511a7d71159bb8d2e2f284431eac5d1" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::TomlImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, int &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1afdb240a10f9cb5345c86574f974d7e5d">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [int]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="93" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a12d106023924ec3ae4599d5c1f57d52e" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::TomlImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, double &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a309b3e41c285bafc3abfdaa19107a94d">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [double]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="101" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a7e96f4db775bfd6c6229cdfdbb705e9e" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::TomlImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, std::string &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a6f70e7ff8d921ddd86b1d787dea31817">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [std::string]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="109" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1ad2e89673adfcb9898f9ba76b3f6a4a89" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::TomlImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, bool &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a580f55f92e5113e5e956500a642c334f">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [bool]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="117" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a22bbed7969fa1f23ab948699683e0e3e" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::TomlImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, std::chrono::nanoseconds &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a32cea1fc7fe065fbd6222b26a4e8e669">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>std::chrono::nanoseconds &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [std::chrono::nanoseconds]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="125" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a6a77664180a9e9d54ecd13ddc44844de" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::TomlImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, std::vector&lt; bool &gt; &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a4b5d92b170d471760070c9b19fcf2355">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>std::vector&lt; bool &gt; &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [std::vector&lt;bool&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="133" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a58095752b261b5dc62b2bf438d9269d5" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::TomlImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, GenericContainer::Vector&lt; int &gt;::Ref parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ae2157684e9278364f16d491771db4de8">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; int &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;int&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="141" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a945893028ec4c53aa0731026ee67cb1a" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::TomlImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, GenericContainer::Vector&lt; double &gt;::Ref parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a3f9f2f10327e8e1f090357ca49fa6149">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; double &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;double&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="149" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a9bbdb6fd83abc1eece7385c4dd1d39f0" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::TomlImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, GenericContainer::Vector&lt; std::string &gt;::Ref parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1aaa35d7a32c43c5d75e48ad1228d1d335">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; std::string &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;std::string&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="157" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a1e21fcc6b435e6f33f7cd063f7f0d755" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::TomlImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, GenericContainer::Vector&lt; std::chrono::nanoseconds &gt;::Ref parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a9145dbaf1143a1a3da2f415e6c67894a">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; std::chrono::nanoseconds &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;std::chrono::nanoseconds&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="166" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a7b99e8520fcd89dfc002cd76e62283ca" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::TomlImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const int &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a6d237be21441ba4ad215955d1e59d78c">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [int]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="174" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1ada5d517cd6712e7fdcade0f3d0de55c9" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::TomlImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const double &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1af3d26ff754203f7ea0c18026299279f5">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [double]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="181" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a099f42898ff8dbf795c7c75928065453" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::TomlImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const std::string &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a676ff31c0f2a523d23115acb820fa8c4">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [std::string]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="188" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a5b79540432064125097af70ca2f0718c" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::TomlImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const char *parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ac50bdd9d7c54d542979601502aa63724">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [const char*]. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>this is required because of <ulink url="https://www.bfilipek.com/2019/07/surprising-conversions-char-bool.html">https://www.bfilipek.com/2019/07/surprising-conversions-char-bool.html</ulink> </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="197" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1ae1cf9094a7f84519bb19771b7cd29c52" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::TomlImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const bool &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a31e93d8df853c8e714ea0f02b561692d">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [bool]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="204" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a66aa74ef3f85f6cdb5f90176b96895fa" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::TomlImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const std::chrono::nanoseconds &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1aedd08b1aeedb09aff57a9dbb19dc88c1">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [std::chrono::nanoseconds]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="211" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a06aa8f03332037cc857472982daf8b21" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::TomlImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const std::vector&lt; bool &gt; &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1adbf64417a4c269eea758e895545a05db">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [std::vector&lt;bool&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="218" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1af5d54035b958caa5850ca5bcd2ba2b47" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::TomlImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const GenericContainer::Vector&lt; const int &gt;::Ref parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a99835b09d78671d66f127bb3f2f11a8f">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; const int &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [GenericContainer::Vector&lt;int&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="225" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a3b23017dce6e3baffeba093ac2059c96" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::TomlImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const GenericContainer::Vector&lt; const double &gt;::Ref parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a6acc040bc256463c628af59033a59863">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; const double &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [GenericContainer::Vector&lt;double&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="232" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1afd3e0f168562bbe9bb0d973975cd15ee" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::TomlImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const GenericContainer::Vector&lt; const std::string &gt;::Ref parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ab1cb738f9b06bf45c5f0bb63c87b87eb">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; const std::string &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [GenericContainer::Vector&lt;std::string&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="239" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1af2fe0e0cc15abcbb0475a558718eae7c" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::TomlImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const GenericContainer::Vector&lt; const std::chrono::nanoseconds &gt;::Ref parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a8446ca0f4e9028008b73ce6080615e64">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; const std::chrono::nanoseconds &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;std::chrono::nanoseconds&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="246" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a7967601e80d345c45915e2d8ca843088" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>weak_ptr</type>
        <definition>weak_ptr BipedalLocomotion::ParametersHandler::TomlImplementation::getGroup</definition>
        <argsstring>(const std::string &amp;name) const final</argsstring>
        <name>getGroup</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a8ca1254ab3f157396052b4df3cefc15d">getGroup</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get a Group from the handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the group </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">IParametersHandler</ref>, if the group is not found the weak pointer cannot be locked </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="256" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1ac0f5b19fdabc727f3baf3589c57f7d10" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::TomlImplementation::setGroup</definition>
        <argsstring>(const std::string &amp;name, shared_ptr newGroup) final</argsstring>
        <name>setGroup</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a78e1afbcb61323fa5d5a105466aa4a1b">setGroup</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>shared_ptr</type>
          <declname>newGroup</declname>
        </param>
        <briefdescription>
<para>Set a new group on the handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the group </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newGroup</parametername>
</parameternamelist>
<parameterdescription>
<para>shared pointer to the new group </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="263" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1ac79cb2e2193a73685e3197c2bf269e3d" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string BipedalLocomotion::ParametersHandler::TomlImplementation::toString</definition>
        <argsstring>() const final</argsstring>
        <name>toString</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a22dd2d7f429a64092bba1e3bdbe29713">toString</reimplements>
        <briefdescription>
<para>Return a standard text representation of the content of the object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a string containing the standard text representation of the content of the object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="269" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a4623cca36f2a12cef8d48560746b383c" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::TomlImplementation::isEmpty</definition>
        <argsstring>() const final</argsstring>
        <name>isEmpty</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ab15662ad31c0c5c750a8c0d301bd7033">isEmpty</reimplements>
        <briefdescription>
<para>Check if the handler contains parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the handler does not contain any parameters, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="275" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a454498de819a8547a721fb91d97332ca" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::TomlImplementation::clear</definition>
        <argsstring>() final</argsstring>
        <name>clear</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a7b1cd95ec96c2ea547d4e1acf5f4c3bd">clear</reimplements>
        <briefdescription>
<para>Clears the handler from all the parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="280" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a803b0534eba653136f5eef379b393065" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>shared_ptr</type>
        <definition>shared_ptr BipedalLocomotion::ParametersHandler::TomlImplementation::clone</definition>
        <argsstring>() const final</argsstring>
        <name>clone</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ad77436eee28c16c2ac6218ee04ec88b5">clone</reimplements>
        <briefdescription>
<para>Clone the content of the content. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a IParametersHandler::shared_ptr clone of the current handler. </para>
</simplesect>
<simplesect kind="warning"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="287" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a65d91dd7675d844644b3e2510dd33af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ParametersHandler::TomlImplementation::~TomlImplementation</definition>
        <argsstring>()=default</argsstring>
        <name>~TomlImplementation</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="292" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation" kindref="compound">TomlImplementation</ref> Toml implementation of the <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">IParametersHandler</ref> interface. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BipedalLocomotion::ParametersHandler::TomlImplementation</label>
        <link refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::ParametersHandler::IParametersHandler</label>
        <link refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BipedalLocomotion::ParametersHandler::TomlImplementation</label>
        <link refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::ParametersHandler::IParametersHandler</label>
        <link refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler"/>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/ParametersHandler/TomlImplementation.h" line="29" column="1" bodyfile="BipedalLocomotion/ParametersHandler/TomlImplementation.h" bodystart="30" bodyend="293"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a454498de819a8547a721fb91d97332ca" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>clear</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a803b0534eba653136f5eef379b393065" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>clone</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a5bc95be4154e386ebe1025072866f4d3" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>clonePrivate</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a7967601e80d345c45915e2d8ca843088" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>getGroup</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a5511a7d71159bb8d2e2f284431eac5d1" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a12d106023924ec3ae4599d5c1f57d52e" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a7e96f4db775bfd6c6229cdfdbb705e9e" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1ad2e89673adfcb9898f9ba76b3f6a4a89" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a22bbed7969fa1f23ab948699683e0e3e" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a6a77664180a9e9d54ecd13ddc44844de" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a58095752b261b5dc62b2bf438d9269d5" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a945893028ec4c53aa0731026ee67cb1a" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a9bbdb6fd83abc1eece7385c4dd1d39f0" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a1e21fcc6b435e6f33f7cd063f7f0d755" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a28261ed5290820c00cbd00ca7a95aa4c" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>getParameterPrivate</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a4623cca36f2a12cef8d48560746b383c" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>isEmpty</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a855f1b3cc063980b3b7b5cb0790ca57d" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>m_container</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a699b33053f2d27f000f9adc1fe673265" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>m_lists</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a65e64026771b47b0618b637a997dee4f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>set</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a16f1f04aedcf5fb04008cb4436371def" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>setFromFile</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1ac0f5b19fdabc727f3baf3589c57f7d10" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>setGroup</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a7b99e8520fcd89dfc002cd76e62283ca" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1ada5d517cd6712e7fdcade0f3d0de55c9" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a099f42898ff8dbf795c7c75928065453" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a5b79540432064125097af70ca2f0718c" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1ae1cf9094a7f84519bb19771b7cd29c52" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a66aa74ef3f85f6cdb5f90176b96895fa" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a06aa8f03332037cc857472982daf8b21" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1af5d54035b958caa5850ca5bcd2ba2b47" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a3b23017dce6e3baffeba093ac2059c96" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1afd3e0f168562bbe9bb0d973975cd15ee" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1af2fe0e0cc15abcbb0475a558718eae7c" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1aab6b245af25b1643f063df7e1cfe9884" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>setParameterPrivate</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a8afda2b689337f31a090dabd24df53f3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>shared_ptr</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a10741fc6e67b7132d01fe661b8fa9161" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>TomlImplementation</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a3ed139758fa6c4e99bffc59666d6a8af" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>TomlImplementation</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1ac79cb2e2193a73685e3197c2bf269e3d" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>toString</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1af52e37b791362f025487212e52256c51" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>unique_ptr</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a03eb908249dcb6c90bd61bdb55bd9aa7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>weak_ptr</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ac2dde38cbb2c531e185a40144b1d98ac" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>~IParametersHandler</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a65d91dd7675d844644b3e2510dd33af3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::TomlImplementation</scope><name>~TomlImplementation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
