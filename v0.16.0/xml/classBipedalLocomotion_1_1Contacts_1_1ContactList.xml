<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Contacts_1_1ContactList" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Contacts::ContactList</compoundname>
    <includes local="no">BipedalLocomotion/Contacts/ContactList.h</includes>
    <innerclass refid="structBipedalLocomotion_1_1Contacts_1_1ContactList_1_1ContactCompare" prot="private">BipedalLocomotion::Contacts::ContactList::ContactCompare</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1ab38a18dc96aec031256776d03d381c21" prot="public" static="no">
        <type>std::set&lt; <ref refid="structBipedalLocomotion_1_1Contacts_1_1PlannedContact" kindref="compound">BipedalLocomotion::Contacts::PlannedContact</ref>, ContactCompare &gt;::const_iterator</type>
        <definition>using BipedalLocomotion::Contacts::ContactList::const_iterator =  std::set&lt;BipedalLocomotion::Contacts::PlannedContact, ContactCompare&gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="54" column="5" bodyfile="BipedalLocomotion/Contacts/ContactList.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a9e6e4e7ec16cb0555372607be0446b03" prot="public" static="no">
        <type>std::set&lt; <ref refid="structBipedalLocomotion_1_1Contacts_1_1PlannedContact" kindref="compound">BipedalLocomotion::Contacts::PlannedContact</ref>, ContactCompare &gt;::const_reverse_iterator</type>
        <definition>using BipedalLocomotion::Contacts::ContactList::const_reverse_iterator =  std::set&lt;BipedalLocomotion::Contacts::PlannedContact, ContactCompare&gt;::const_reverse_iterator</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="56" column="5" bodyfile="BipedalLocomotion/Contacts/ContactList.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1ab38cbace4d5b64cd75e98eb242c13b6b" prot="private" static="no" mutable="no">
        <type>std::set&lt; <ref refid="structBipedalLocomotion_1_1Contacts_1_1PlannedContact" kindref="compound">BipedalLocomotion::Contacts::PlannedContact</ref>, ContactCompare &gt;</type>
        <definition>std::set&lt;BipedalLocomotion::Contacts::PlannedContact, ContactCompare&gt; BipedalLocomotion::Contacts::ContactList::m_contacts</definition>
        <argsstring></argsstring>
        <name>m_contacts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="45" column="14" bodyfile="BipedalLocomotion/Contacts/ContactList.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1ade88313ed2844d9e899d215adbf48ff5" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BipedalLocomotion::Contacts::ContactList::m_defaultName</definition>
        <argsstring></argsstring>
        <name>m_defaultName</name>
        <initializer>{&quot;ContactList&quot;}</initializer>
        <briefdescription>
<para>Data structure for inserting and ordering contacts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="48" column="17" bodyfile="BipedalLocomotion/Contacts/ContactList.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a497aa67f6d3be55e10e04f7d2fabbe7f" prot="private" static="no" mutable="no">
        <type><ref refid="Contact_8h_1a34ae1b101a919e7e1b42ddf2193c51b0" kindref="member">BipedalLocomotion::Contacts::ContactType</ref></type>
        <definition>BipedalLocomotion::Contacts::ContactType BipedalLocomotion::Contacts::ContactList::m_defaultContactType</definition>
        <argsstring></argsstring>
        <name>m_defaultContactType</name>
        <initializer>{
        <ref refid="Contact_8h_1a34ae1b101a919e7e1b42ddf2193c51b0aba7de5bc6888294e5884b024a4c894f1" kindref="member">BipedalLocomotion::Contacts::ContactType::FULL</ref>}</initializer>
        <briefdescription>
<para>Default name for the contact list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="49" column="46" bodyfile="BipedalLocomotion/Contacts/ContactList.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a9b46bdd594655bb5f683e42fba5c8bf6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int BipedalLocomotion::Contacts::ContactList::m_defaultIndex</definition>
        <argsstring></argsstring>
        <name>m_defaultIndex</name>
        <initializer>{-1}</initializer>
        <briefdescription>
<para>Default contact type. </para>
        </briefdescription>
        <detaileddescription>
<para>Default Frame index of the contact </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="51" column="9" bodyfile="BipedalLocomotion/Contacts/ContactList.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a763a0f4ce300b834b9972008fe2858d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::Contacts::ContactList::setDefaultName</definition>
        <argsstring>(const std::string &amp;defaultName)</argsstring>
        <name>setDefaultName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>defaultName</declname>
        </param>
        <briefdescription>
<para>Set the default name. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>defaultName</parametername>
</parameternamelist>
<parameterdescription>
<para>the default name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="63" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a4c7349af0eeb90d147342a3cfdbd95a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; BipedalLocomotion::Contacts::ContactList::defaultName</definition>
        <argsstring>() const</argsstring>
        <name>defaultName</name>
        <briefdescription>
<para>Get the default name. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the default name. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="69" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a0f6c9177ead1c0edf999693371ea4365" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::Contacts::ContactList::setDefaultContactType</definition>
        <argsstring>(const BipedalLocomotion::Contacts::ContactType &amp;type)</argsstring>
        <name>setDefaultContactType</name>
        <param>
          <type>const <ref refid="Contact_8h_1a34ae1b101a919e7e1b42ddf2193c51b0" kindref="member">BipedalLocomotion::Contacts::ContactType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Set the default contact type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>default contact type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="75" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1afe083245f09cdf581d93b4c43adcc3cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::Contacts::ContactList::setDefaultIndex</definition>
        <argsstring>(int defaultIndex)</argsstring>
        <name>setDefaultIndex</name>
        <param>
          <type>int</type>
          <declname>defaultIndex</declname>
        </param>
        <briefdescription>
<para>Set the default frame index of the contact. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>defaultIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the default index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="81" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1ac74016d057feec7c884aff7f4b726396" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BipedalLocomotion::Contacts::ContactList::defaultIndex</definition>
        <argsstring>() const</argsstring>
        <name>defaultIndex</name>
        <briefdescription>
<para>Get the default frame index of the contact. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the default index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="87" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1ae46e41130807480653ec39dba6cd576e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="Contact_8h_1a34ae1b101a919e7e1b42ddf2193c51b0" kindref="member">BipedalLocomotion::Contacts::ContactType</ref> &amp;</type>
        <definition>const BipedalLocomotion::Contacts::ContactType&amp; BipedalLocomotion::Contacts::ContactList::defaultContactType</definition>
        <argsstring>() const</argsstring>
        <name>defaultContactType</name>
        <briefdescription>
<para>Get the default contact type. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the default contact type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="93" column="52"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1ae3ed40a1a38d8878bfc30ea6fbb7ae7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::ContactList::addContact</definition>
        <argsstring>(const BipedalLocomotion::Contacts::PlannedContact &amp;newContact)</argsstring>
        <name>addContact</name>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Contacts_1_1PlannedContact" kindref="compound">BipedalLocomotion::Contacts::PlannedContact</ref> &amp;</type>
          <declname>newContact</declname>
        </param>
        <briefdescription>
<para>Add a new contact to the list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newContact</parametername>
</parameternamelist>
<parameterdescription>
<para>The new contact </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if it was not possible to insert the contact. Possible failures: the activation time is greater than the deactivation time, or the new contact overlaps with an existing contact. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="102" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a18ac03b2121f9a9a432914d3c329776b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::ContactList::addContact</definition>
        <argsstring>(const manif::SE3d &amp;newTransform, const std::chrono::nanoseconds &amp;activationTime, const std::chrono::nanoseconds &amp;deactivationTime)</argsstring>
        <name>addContact</name>
        <param>
          <type>const manif::SE3d &amp;</type>
          <declname>newTransform</declname>
        </param>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>activationTime</declname>
        </param>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>deactivationTime</declname>
        </param>
        <briefdescription>
<para>Add a new contact to the list. </para>
        </briefdescription>
        <detaileddescription>
<para>It uses the defaultName and the defaultContactType for the missing informations. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newTransform</parametername>
</parameternamelist>
<parameterdescription>
<para>The contact pose. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>activationTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The activation time. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>deactivationTime</parametername>
</parameternamelist>
<parameterdescription>
<para>The deactivation time. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if it was not possible to insert the contact. Possible failures: the activation time is greater than the deactivation time, or the new contact overlaps with an existing contact. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="115" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a8a5b2fe4dc34c6241440ecbda2113336" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator BipedalLocomotion::Contacts::ContactList::erase</definition>
        <argsstring>(const_iterator iterator)</argsstring>
        <name>erase</name>
        <param>
          <type>const_iterator</type>
          <declname>iterator</declname>
        </param>
        <briefdescription>
<para>Erase a contact. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iterator</parametername>
</parameternamelist>
<parameterdescription>
<para>to the contact to erase. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an iterator to the contact that follows the one removed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="124" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a9e8cda2df67a75c09a0bff7b8c265070" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator BipedalLocomotion::Contacts::ContactList::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Return a const iterator to the begin of the contacts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="129" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a0dbf3384cf7cd47f383181642e8abe22" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator BipedalLocomotion::Contacts::ContactList::cbegin</definition>
        <argsstring>() const</argsstring>
        <name>cbegin</name>
        <briefdescription>
<para>Return a const iterator to the begin of the contacts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="134" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1aad29463b9e1731b5ac744855ccf732ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_reverse_iterator</type>
        <definition>const_reverse_iterator BipedalLocomotion::Contacts::ContactList::rbegin</definition>
        <argsstring>() const</argsstring>
        <name>rbegin</name>
        <briefdescription>
<para>Return a const reverse iterator to the contacts (basically starting from the last contact going backward). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="140" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a6f059f21cd8202bfecda88a6f9277cc1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_reverse_iterator</type>
        <definition>const_reverse_iterator BipedalLocomotion::Contacts::ContactList::crbegin</definition>
        <argsstring>() const</argsstring>
        <name>crbegin</name>
        <briefdescription>
<para>Return a const reverse iterator to the contacts (basically starting from the last contact going backward). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="146" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a45dbd1687bf2ce59e16618e6fed455c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator BipedalLocomotion::Contacts::ContactList::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>Return a const iterator to the end of the list. </para>
        </briefdescription>
        <detaileddescription>
<para>This is only a placeholder, it does not reference any contact. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="153" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a9114e79fc750c2f0b5df006c24760937" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator BipedalLocomotion::Contacts::ContactList::cend</definition>
        <argsstring>() const</argsstring>
        <name>cend</name>
        <briefdescription>
<para>Return a const iterator to the end of the list. </para>
        </briefdescription>
        <detaileddescription>
<para>This is only a placeholder, it does not reference any contact. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="160" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a4f21ea4ece874b68db0501572403e53d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_reverse_iterator</type>
        <definition>const_reverse_iterator BipedalLocomotion::Contacts::ContactList::rend</definition>
        <argsstring>() const</argsstring>
        <name>rend</name>
        <briefdescription>
<para>Return a const reverse iterator to the end of the list. </para>
        </briefdescription>
        <detaileddescription>
<para>This is only a placeholder, it does not reference any contact. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="167" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a99518bded02dd9e7224a4aa59460ee35" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_reverse_iterator</type>
        <definition>const_reverse_iterator BipedalLocomotion::Contacts::ContactList::crend</definition>
        <argsstring>() const</argsstring>
        <name>crend</name>
        <briefdescription>
<para>Return a const reverse iterator to the end of the list. </para>
        </briefdescription>
        <detaileddescription>
<para>This is only a placeholder, it does not reference any contact. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="174" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a941b59a10e2f753cac46994b772252af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structBipedalLocomotion_1_1Contacts_1_1PlannedContact" kindref="compound">BipedalLocomotion::Contacts::PlannedContact</ref> &amp;</type>
        <definition>const BipedalLocomotion::Contacts::PlannedContact&amp; BipedalLocomotion::Contacts::ContactList::operator[]</definition>
        <argsstring>(size_t index) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Access contacts by index. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method in a for loop is much less efficient than using iterators. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>of the phase to be accessed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A const reference to the desired contact. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="182" column="55"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a0455d9dad6976ca0cc5238992cefd9f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t BipedalLocomotion::Contacts::ContactList::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Get the size of the list. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of contacts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="188" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1afd8a456aecdff7cad92a4a502117b0e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator BipedalLocomotion::Contacts::ContactList::firstContact</definition>
        <argsstring>() const</argsstring>
        <name>firstContact</name>
        <briefdescription>
<para>Iterator pointing to the first contact. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="193" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a09ce629f873b5aa12cab37d563f71e4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator BipedalLocomotion::Contacts::ContactList::lastContact</definition>
        <argsstring>() const</argsstring>
        <name>lastContact</name>
        <briefdescription>
<para>Iterator pointing to the last contact. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="198" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a84461637e0570046ef937728593f2d7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::ContactList::editContact</definition>
        <argsstring>(const_iterator element, const BipedalLocomotion::Contacts::PlannedContact &amp;newContact)</argsstring>
        <name>editContact</name>
        <param>
          <type>const_iterator</type>
          <declname>element</declname>
        </param>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Contacts_1_1PlannedContact" kindref="compound">BipedalLocomotion::Contacts::PlannedContact</ref> &amp;</type>
          <declname>newContact</declname>
        </param>
        <briefdescription>
<para>Edit an existing contact. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>element</parametername>
</parameternamelist>
<parameterdescription>
<para>Iterator to the element to edit. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newContact</parametername>
</parameternamelist>
<parameterdescription>
<para>The new contact </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if the element is not valid or if the new contact timing would require a reordering of the list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="207" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1ad1a6136e4c7f01886a379dc359c6b5f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator BipedalLocomotion::Contacts::ContactList::getPresentContact</definition>
        <argsstring>(const std::chrono::nanoseconds &amp;time) const</argsstring>
        <name>getPresentContact</name>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Get the contact given the time. </para>
        </briefdescription>
        <detaileddescription>
<para>It returns the contact with the highest activation time lower than time. If no contacts have an activation time lower than time, it returns an iterator to the end. Notice that the contact may not be active, i.e. the deactivationTime may be lower than time. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The present time. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an iterator to the last contact having an activation time lower than time. If no contact satisfy this condition, it returns a pointer to the end. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="220" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1ab44bbf63b56a9ddc25d70a69da354312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::ContactList::keepOnlyPresentContact</definition>
        <argsstring>(const std::chrono::nanoseconds &amp;time)</argsstring>
        <name>keepOnlyPresentContact</name>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Clear all the steps, except the one returned by getPresentContact. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The present time. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false if no contact is available at this time. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="227" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a56e370cad1add2f78dc27ec49d51b009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::Contacts::ContactList::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Clear the contacts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="232" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a16ec57481a746a75d30e0c52f9a136c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::Contacts::ContactList::removeLastContact</definition>
        <argsstring>()</argsstring>
        <name>removeLastContact</name>
        <briefdescription>
<para>Remove only the last contact. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactList.h" line="237" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class containing a list of contacts. </para>
    </briefdescription>
    <detaileddescription>
<para>The contact are added such that the activation time is strictly growing. In addition, contacts cannot be overlapping. It represents a series of contact activations and deactivations of a single entity. </para>
    </detaileddescription>
    <location file="BipedalLocomotion/Contacts/ContactList.h" line="34" column="1" bodyfile="BipedalLocomotion/Contacts/ContactList.h" bodystart="35" bodyend="238"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1ae3ed40a1a38d8878bfc30ea6fbb7ae7e" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>addContact</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a18ac03b2121f9a9a432914d3c329776b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>addContact</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a9e8cda2df67a75c09a0bff7b8c265070" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>begin</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a0dbf3384cf7cd47f383181642e8abe22" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>cbegin</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a9114e79fc750c2f0b5df006c24760937" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>cend</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a56e370cad1add2f78dc27ec49d51b009" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>clear</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1ab38a18dc96aec031256776d03d381c21" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>const_iterator</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a9e6e4e7ec16cb0555372607be0446b03" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>const_reverse_iterator</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a6f059f21cd8202bfecda88a6f9277cc1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>crbegin</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a99518bded02dd9e7224a4aa59460ee35" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>crend</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1ae46e41130807480653ec39dba6cd576e" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>defaultContactType</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1ac74016d057feec7c884aff7f4b726396" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>defaultIndex</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a4c7349af0eeb90d147342a3cfdbd95a3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>defaultName</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a84461637e0570046ef937728593f2d7c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>editContact</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a45dbd1687bf2ce59e16618e6fed455c7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>end</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a8a5b2fe4dc34c6241440ecbda2113336" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>erase</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1afd8a456aecdff7cad92a4a502117b0e5" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>firstContact</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1ad1a6136e4c7f01886a379dc359c6b5f1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>getPresentContact</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1ab44bbf63b56a9ddc25d70a69da354312" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>keepOnlyPresentContact</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a09ce629f873b5aa12cab37d563f71e4c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>lastContact</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1ab38cbace4d5b64cd75e98eb242c13b6b" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>m_contacts</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a497aa67f6d3be55e10e04f7d2fabbe7f" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>m_defaultContactType</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a9b46bdd594655bb5f683e42fba5c8bf6" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>m_defaultIndex</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1ade88313ed2844d9e899d215adbf48ff5" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>m_defaultName</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a941b59a10e2f753cac46994b772252af" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>operator[]</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1aad29463b9e1731b5ac744855ccf732ea" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>rbegin</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a16ec57481a746a75d30e0c52f9a136c2" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>removeLastContact</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a4f21ea4ece874b68db0501572403e53d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>rend</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a0f6c9177ead1c0edf999693371ea4365" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>setDefaultContactType</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1afe083245f09cdf581d93b4c43adcc3cb" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>setDefaultIndex</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a763a0f4ce300b834b9972008fe2858d7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>setDefaultName</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactList_1a0455d9dad6976ca0cc5238992cefd9f3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactList</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
