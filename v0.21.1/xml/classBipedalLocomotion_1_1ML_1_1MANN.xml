<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1ML_1_1MANN" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::ML::MANN</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1Advanceable" prot="public" virt="non-virtual">BipedalLocomotion::System::Advanceable&lt; MANNInput, MANNOutput &gt;</basecompoundref>
    <includes local="no">BipedalLocomotion/ML/MANN.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ML_1_1MANN_1a39c738bb7d6498a94183fc546768b4d7" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; BipedalLocomotion::ML::MANN::m_pimpl</definition>
        <argsstring></argsstring>
        <name>m_pimpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANN.h" line="171" column="21" bodyfile="BipedalLocomotion/ML/MANN.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANN_1a61bc383907844611c2f36e2d3c74b910" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ML::MANN::MANN</definition>
        <argsstring>()</argsstring>
        <name>MANN</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANN.h" line="120" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANN_1aa791bb95300f9331fd454bf070c8a283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ML::MANN::~MANN</definition>
        <argsstring>()</argsstring>
        <name>~MANN</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>It is required by the pimpl implementation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANN.h" line="125" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANN_1ae79cbf9ea01e3f252a04bf9fd8d6061a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ML::MANN::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; paramHandler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a6db247d3db83217a16e963d01f6bcb77">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>paramHandler</declname>
        </param>
        <briefdescription>
<para>Initialize the network. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paramHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameters handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="5" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>onnx_model_path</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Path to the <computeroutput>onnx</computeroutput> model that will be loaded to perform inference   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>number_of_joints</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>int</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Number of robot joints considered in the model   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>projected_base_datapoints</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>int</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Number of samples of the base horizon considered in the model (it must be an even number)   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>number_of_threads</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>int</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Number of threads used to perform the inference. Default value is the number of available cores   </para>
</entry><entry thead="no" align='center'><para>No   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANN.h" line="140" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANN_1a3a073e9fef1564929ff5dc2b68c3f561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ML::MANN::setInput</definition>
        <argsstring>(const MANNInput &amp;input) override</argsstring>
        <name>setInput</name>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1ML_1_1MANNInput" kindref="compound">MANNInput</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Set the input of the network. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>the struct containing all the inputs of the network. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANN.h" line="148" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANN_1abc025d0db188dc7bad83348037f2dd14" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ML::MANN::advance</definition>
        <argsstring>() override</argsstring>
        <name>advance</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a67107e46e831d93f572558b541aab6d2">advance</reimplements>
        <briefdescription>
<para>Perform one step of the inference given the input set. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANN.h" line="154" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANN_1accf8d34ca0615c78f9de0e2a1a20fcde" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="structBipedalLocomotion_1_1ML_1_1MANNOutput" kindref="compound">MANNOutput</ref> &amp;</type>
        <definition>const MANNOutput&amp; BipedalLocomotion::ML::MANN::getOutput</definition>
        <argsstring>() const override</argsstring>
        <name>getOutput</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a8c089ecf2dd8ff0fb2732233994b6cac">getOutput</reimplements>
        <briefdescription>
<para>Get the output of the network once advance has been called. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the output of the network. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANN.h" line="160" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANN_1a0967420544499455040bf0b62a59fa55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ML::MANN::isOutputValid</definition>
        <argsstring>() const override</argsstring>
        <name>isOutputValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ac50de29a6160baa2bba195af9d69430a">isOutputValid</reimplements>
        <briefdescription>
<para>Check if the output of the network is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if it is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANN.h" line="166" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1ML_1_1MANN" kindref="compound">MANN</ref> is a class that allows to perform the inference of an <computeroutput>onnx</computeroutput> implementing Mode-Adaptive Neural Networks (<ref refid="classBipedalLocomotion_1_1ML_1_1MANN" kindref="compound">MANN</ref>). </para>
    </briefdescription>
    <detaileddescription>
<para>The network was originally proposed in [H. Zhang, S. Starke, T. Komura, and J. Saito, “Mode-adaptive neural networks for quadruped motion control,” ACM Trans. Graph., vol. 37, no. 4, pp. 1–11, 2018.](<ulink url="https://doi.org/10.1145/3197517.3201366">https://doi.org/10.1145/3197517.3201366</ulink>) This class uses <computeroutput>onnxruntime</computeroutput> to perform inference and it has been tested with an <computeroutput>onnx</computeroutput> model generated from <ulink url="https://github.com/ami-iit/mann-pytorch">https://github.com/ami-iit/mann-pytorch</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; MANNInput, MANNOutput &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; MANNInput, MANNOutput &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::ML::MANN</label>
        <link refid="classBipedalLocomotion_1_1ML_1_1MANN"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; MANNInput, MANNOutput &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; MANNInput, MANNOutput &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::ML::MANN</label>
        <link refid="classBipedalLocomotion_1_1ML_1_1MANN"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/ML/MANN.h" line="114" column="1" bodyfile="BipedalLocomotion/ML/MANN.h" bodystart="115" bodyend="172"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANN_1abc025d0db188dc7bad83348037f2dd14" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a09ee5b41c77c6b626f4d5cb775065325" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1aaeb3eba3073fbc844dea1eba4c9b68f3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ac1549cb26bd896e27370e97b0795ba3f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a618ab786bb43814b3b3012b843fce93b" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>close</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANN_1accf8d34ca0615c78f9de0e2a1a20fcde" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>getOutput</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANN_1ae79cbf9ea01e3f252a04bf9fd8d6061a" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a975a7ecbf38c917c7b72519581fc7dba" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a27c614cb30c1e4b78e64791f4919dfa7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a74d1418613e89a7f2993ea936228a44a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a02ec5c947f1d2d83d2952c3b899cc58f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANN_1a0967420544499455040bf0b62a59fa55" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>isOutputValid</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANN_1a39c738bb7d6498a94183fc546768b4d7" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>m_pimpl</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANN_1a61bc383907844611c2f36e2d3c74b910" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>MANN</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ae147cdee9ff9160a9dfe0d3e349a9aad" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1adf0d9fc07bab0ec5d4db7f3a35816bf2" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a54f476d3c8d6d003fb714309ea6272aa" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::ML::MANN</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1adb341b37472241b6da8b552166308d7b" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::ML::MANN</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1af5e15f5e4962a5c8e0f0c0a49adb9ca1" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::ML::MANN</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ad5c6ce3ad7d2a064d7bb512fe0bc489e" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::ML::MANN</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a69603f2c9c608815908425b5b8c2005c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>Output</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a7c0d15e677a1935918fc747ba4c25ec1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a0a39b891749961d34507b4b591886741" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a581340f280eca1890a8a7b2331761b57" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANN_1a3a073e9fef1564929ff5dc2b68c3f561" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ad2637be5c9075a2d8f09fedc6a42d808" prot="public" virt="pure-virtual" ambiguityscope="Advanceable&lt; MANNInput, MANNOutput &gt;::"><scope>BipedalLocomotion::ML::MANN</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1afae1137cba829874bab4a1d25d559896" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>~Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ac9b58b0d2f6ae8821b873ed6f9817ccb" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>~InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANN_1aa791bb95300f9331fd454bf070c8a283" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>~MANN</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1adcc49c38152c9204dcab4f8e87f68977" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANN</scope><name>~OutputPort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
