<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceBipedalLocomotion_1_1Planners_1_1UnicycleUtilities" kind="namespace" language="C++">
    <compoundname>BipedalLocomotion::Planners::UnicycleUtilities</compoundname>
    <innernamespace refid="namespaceBipedalLocomotion_1_1Planners_1_1UnicycleUtilities_1_1Conversions">BipedalLocomotion::Planners::UnicycleUtilities::Conversions</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="UnicycleUtilities_8h_1afef9c4730943e70538ef7f2d4d3ad760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::UnicycleUtilities::getContactList</definition>
        <argsstring>(const std::chrono::nanoseconds &amp;initTime, const std::chrono::nanoseconds &amp;dt, const std::vector&lt; bool &gt; &amp;inContact, const std::deque&lt; Step &gt; &amp;steps, const int &amp;contactFrameIndex, const std::string &amp;contactName, BipedalLocomotion::Contacts::ContactList &amp;contactList)</argsstring>
        <name>getContactList</name>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>initTime</declname>
        </param>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>inContact</declname>
        </param>
        <param>
          <type>const std::deque&lt; Step &gt; &amp;</type>
          <declname>steps</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>contactFrameIndex</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>contactName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1Contacts_1_1ContactList" kindref="compound">BipedalLocomotion::Contacts::ContactList</ref> &amp;</type>
          <declname>contactList</declname>
        </param>
        <briefdescription>
<para>It populates the contact list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>initTime</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial time of the trajectory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>the time step. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inContact</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector containing the contact status. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>steps</parametername>
</parameternamelist>
<parameterdescription>
<para>a deque containing the steps. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contactFrameIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the contact frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contactName</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the contact. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contactList</parametername>
</parameternamelist>
<parameterdescription>
<para>the contact list to be populated. It should be empty or contain only the first step (i.e., the current one already in contact at time initTime). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/UnicycleUtilities.h" line="31" column="6" declfile="BipedalLocomotion/Planners/UnicycleUtilities.h" declline="31" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="UnicycleUtilities_8h_1af8f8743fb6551dc3fef9ee769acb79a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::Planners::UnicycleUtilities::mergeSteps</definition>
        <argsstring>(const std::deque&lt; Step &gt; &amp;newSteps, std::deque&lt; Step &gt; &amp;currentSteps, const std::chrono::nanoseconds &amp;currentTime)</argsstring>
        <name>mergeSteps</name>
        <param>
          <type>const std::deque&lt; Step &gt; &amp;</type>
          <declname>newSteps</declname>
        </param>
        <param>
          <type>std::deque&lt; Step &gt; &amp;</type>
          <declname>currentSteps</declname>
        </param>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>currentTime</declname>
        </param>
        <briefdescription>
<para>Merge two steps sequences, and stores the merged output in the second one. </para>
        </briefdescription>
        <detaileddescription>
<para>The new steps which has an impact time lower than the current time are discarded. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>newSteps</parametername>
</parameternamelist>
<parameterdescription>
<para>the new list of steps. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentSteps</parametername>
</parameternamelist>
<parameterdescription>
<para>the cuurent list of steps. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>currentTime</parametername>
</parameternamelist>
<parameterdescription>
<para>the current time. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/UnicycleUtilities.h" line="46" column="6" declfile="BipedalLocomotion/Planners/UnicycleUtilities.h" declline="46" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="UnicycleUtilities_8h_1a4f89c1b6bf65aa00f42552fb639bbbbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::UnicycleUtilities::appendVectorToDeque</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;input, std::deque&lt; T &gt; &amp;output, const size_t &amp;initPoint)</argsstring>
        <name>appendVectorToDeque</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>std::deque&lt; T &gt; &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>initPoint</declname>
        </param>
        <briefdescription>
<para>It appends a vector to a deque. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>the input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>the output deque. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial point where the vector has to be appended. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the operation is successful, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/UnicycleUtilities.h" line="58" column="6" bodyfile="BipedalLocomotion/Planners/UnicycleUtilities.h" bodystart="58" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="UnicycleUtilities_8h_1aa946614a8cd691fdbaedd08db4f17365" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void BipedalLocomotion::Planners::UnicycleUtilities::populateVectorFromDeque</definition>
        <argsstring>(const std::deque&lt; T &gt; &amp;deque, std::vector&lt; T &gt; &amp;vector)</argsstring>
        <name>populateVectorFromDeque</name>
        <param>
          <type>const std::deque&lt; T &gt; &amp;</type>
          <declname>deque</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>It populates a vector from a deque. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deque</parametername>
</parameternamelist>
<parameterdescription>
<para>the input deque. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>the output vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/UnicycleUtilities.h" line="88" column="6" bodyfile="BipedalLocomotion/Planners/UnicycleUtilities.h" bodystart="88" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="BipedalLocomotion/Planners/UnicycleUtilities.h" line="18" column="1"/>
  </compounddef>
</doxygen>
