<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1System_1_1OutputPort" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>BipedalLocomotion::System::OutputPort</compoundname>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1Advanceable" prot="public" virt="non-virtual">BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1Advanceable" prot="public" virt="non-virtual">BipedalLocomotion::System::Advanceable&lt; Eigen::VectorXd, Eigen::VectorXd &gt;</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1Advanceable" prot="public" virt="non-virtual">BipedalLocomotion::System::Advanceable&lt; CoMZMPControllerInput, CoMZMPControllerOutput &gt;</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1Advanceable" prot="public" virt="non-virtual">BipedalLocomotion::System::Advanceable&lt; Input, EmptySignal &gt;</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1Advanceable" prot="public" virt="non-virtual">BipedalLocomotion::System::Advanceable&lt; SchmittTriggerInput, SchmittTriggerState &gt;</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1Advanceable" prot="public" virt="non-virtual">BipedalLocomotion::System::Advanceable&lt; UnicyclePlannerInput, UnicyclePlannerOutput &gt;</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1Advanceable" prot="public" virt="non-virtual">BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</derivedcompoundref>
    <includes local="no">BipedalLocomotion/System/OutputPort.h</includes>
    <templateparamlist>
      <param>
        <type>class _Output</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classBipedalLocomotion_1_1System_1_1OutputPort_1ab9150fecab94a5c4e06bc0579277d8c3" prot="public" static="no">
        <type>_Output</type>
        <definition>using BipedalLocomotion::System::OutputPort&lt; _Output &gt;::Output =  _Output</definition>
        <argsstring></argsstring>
        <name>Output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/OutputPort.h" line="26" column="5" bodyfile="BipedalLocomotion/System/OutputPort.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1OutputPort_1adcc49c38152c9204dcab4f8e87f68977" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual BipedalLocomotion::System::OutputPort&lt; _Output &gt;::~OutputPort</definition>
        <argsstring>()=default</argsstring>
        <name>~OutputPort</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/OutputPort.h" line="28" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1OutputPort_1a8c089ecf2dd8ff0fb2732233994b6cac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const Output &amp;</type>
        <definition>virtual const Output&amp; BipedalLocomotion::System::OutputPort&lt; _Output &gt;::getOutput</definition>
        <argsstring>() const =0</argsstring>
        <name>getOutput</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1af11bae01dd074ff9e2d4ebdfcc7edd88">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1RecursiveLeastSquare_1a8560d01b521beb3e1564071d05bf9f8e">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1aecc991f84626ed5114483a3e7c0fd78c">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Perception_1_1ArucoDetector_1ae4891a46aa7b4fe04e03f2e94c9d34e8">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1CubicSpline_1a002da0f215ba10ca204e84de2e1080de">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a4c1563c14094002279156a834fa1bc8b">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1SO3Planner_1a9e1bc5e248e0f83cddae20277200ca12">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1SO3Planner_1a9e1bc5e248e0f83cddae20277200ca12">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1a3495995d4e48df8f65648538f4b1ae88">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ad4e7aa0da4b67123771a8155611fbe64">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1RobotInterface_1_1YarpSensorBridge_1a92beedaec20313db5623cca3f9b630fd">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1SimplifiedModelControllers_1_1CoMZMPController_1a5413119cdc59bf3418e488057b539974">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1ConstantWeightProvider_1a16bdab064ee802587c20b12ccf0d5c62">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1Sink_1a4f83834c9269c31074e5a7e35ddb5f99">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1ac5914a6768674100165630736548341d">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1MultiStateWeightProvider_1ad46dbab464e8680510ff523a1d41383e">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1IK_1_1QPInverseKinematics_1ac3382473c18f86c151e40e567b048b68">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1a901267089c772b97bd7e3ac64de586f2">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1UnicyclePlanner_1ae052b356eb6471e8ef93385285b017e4">getOutput</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1a483e2dca295dd4dad89f0c268c4afeaa">getOutput</reimplementedby>
        <briefdescription>
<para>Get the output of the port. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a const reference of the requested object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/OutputPort.h" line="34" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1OutputPort_1ac50de29a6160baa2bba195af9d69430a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::System::OutputPort&lt; _Output &gt;::isOutputValid</definition>
        <argsstring>() const =0</argsstring>
        <name>isOutputValid</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1add50895455a7713e665da0c93b027c12">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1MultiStateWeightProvider_1a2de5cc8fedca73e0a615ba3f505534be">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1RecursiveLeastSquare_1a7d9bea401a1490a1c3074773a7d0f31a">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a0baf4a4877c4c790c35be575f63ea2d2">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Perception_1_1ArucoDetector_1a733a50a2bdc34dbd0ee708e04d7fb2bb">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1CubicSpline_1ac09c1790195dc45acfb5838072e8d6e7">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1aade486dcd2cb26b789d0ef5fa8020b7a">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1SO3Planner_1acdf5026823d28b0bec14badad5617599">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1SO3Planner_1acdf5026823d28b0bec14badad5617599">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner_1af9b02eaefe72c8800c50e061a5ea0d87">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ae3452250d0c1ff2c505e160837cdebc9">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1RobotInterface_1_1YarpSensorBridge_1a4037cd65a12b285a8fd2cc3d2db443c8">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1SimplifiedModelControllers_1_1CoMZMPController_1a331d69e7059d2622ccb84ff4f2246d37">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1ConstantWeightProvider_1a3391c4ce67dea1bde179f87c61c09c58">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1Sink_1a6228f114c0fc428501649d4c13ae5cb8">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a4abb7565bb83ed84cdf1072d27db171c">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1IK_1_1QPInverseKinematics_1a82818a7d4b208780d7ae1fb03b7bb38a">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1aa2a4f2527741ee1e5d6e2b147b9751cc">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1UnicyclePlanner_1ab9fb291db0662a9d7760171fdcdcf44d">isOutputValid</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1ae1312f6965a91d4b2472c30ff95c4e5c">isOutputValid</reimplementedby>
        <briefdescription>
<para>Determines the validity of the object retrieved with <ref refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a8c089ecf2dd8ff0fb2732233994b6cac" kindref="member">getOutput()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the object is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/OutputPort.h" line="40" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Basic class that represents an output port. </para>
    </briefdescription>
    <detaileddescription>
<para>The interface contains method to set inputs and output. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="51">
        <label>BipedalLocomotion::Math::SchmittTrigger</label>
        <link refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger"/>
        <childnode refid="50" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>BipedalLocomotion::System::Source&lt; SwingFootPlannerState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; SwingFootPlannerState &gt;</edgelabel>
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>BipedalLocomotion::IK::IntegrationBasedIK</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1IntegrationBasedIK"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>BipedalLocomotion::System::Advanceable&lt; Input, EmptySignal &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="54" relation="template-instance">
          <edgelabel>&lt; Input, EmptySignal &gt;</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>BipedalLocomotion::SimplifiedModelControllers::CoMZMPController</label>
        <link refid="classBipedalLocomotion_1_1SimplifiedModelControllers_1_1CoMZMPController"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator"/>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>BipedalLocomotion::Contacts::FixedFootDetector</label>
        <link refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>BipedalLocomotion::System::Advanceable&lt; Eigen::VectorXd, Eigen::VectorXd &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="54" relation="template-instance">
          <edgelabel>&lt; Eigen::VectorXd, Eigen::VectorXd &gt;</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>BipedalLocomotion::RobotInterface::YarpSensorBridge</label>
        <link refid="classBipedalLocomotion_1_1RobotInterface_1_1YarpSensorBridge"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>BipedalLocomotion::Perception::ArucoDetector</label>
        <link refid="classBipedalLocomotion_1_1Perception_1_1ArucoDetector"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</label>
        <link refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::TSID::QPTSID</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1QPTSID"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="52">
        <label>BipedalLocomotion::System::Advanceable&lt; UnicyclePlannerInput, UnicyclePlannerOutput &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="54" relation="template-instance">
          <edgelabel>&lt; UnicyclePlannerInput, UnicyclePlannerOutput &gt;</edgelabel>
        </childnode>
      </node>
      <node id="41">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimator</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator"/>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>BipedalLocomotion::Planners::DCMPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>BipedalLocomotion::Planners::QuinticSpline</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>BipedalLocomotion::System::ConstantWeightProvider</label>
        <link refid="classBipedalLocomotion_1_1System_1_1ConstantWeightProvider"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>BipedalLocomotion::System::Source&lt; RecursiveLeastSquareState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; RecursiveLeastSquareState &gt;</edgelabel>
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::ILinearTaskSolver&lt; TSIDLinearTask, TSIDState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1ILinearTaskSolver"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="39" relation="template-instance">
          <edgelabel>&lt; TSIDLinearTask, TSIDState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>BipedalLocomotion::System::Source&lt; FloatingBaseEstimators::Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; FloatingBaseEstimators::Output &gt;</edgelabel>
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>BipedalLocomotion::System::Source&lt; DCMPlannerState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; DCMPlannerState &gt;</edgelabel>
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>BipedalLocomotion::System::Source&lt; SensorBridgeMetaData &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; SensorBridgeMetaData &gt;</edgelabel>
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>BipedalLocomotion::System::Sink&lt; Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Sink"/>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>BipedalLocomotion::System::WeightProvider</label>
        <link refid="structBipedalLocomotion_1_1System_1_1WeightProvider"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>BipedalLocomotion::Planners::CubicSpline</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1CubicSpline"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>BipedalLocomotion::System::Source&lt; EstimatedContactList &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; EstimatedContactList &gt;</edgelabel>
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="53">
        <label>BipedalLocomotion::Planners::UnicyclePlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1UnicyclePlanner"/>
        <childnode refid="52" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>BipedalLocomotion::Estimators::LeggedOdometry</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1LeggedOdometry"/>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>BipedalLocomotion::Planners::SO3Planner&lt; trivialization &gt;</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1SO3Planner"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>BipedalLocomotion::System::Advanceable&lt; CoMZMPControllerInput, CoMZMPControllerOutput &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="54" relation="template-instance">
          <edgelabel>&lt; CoMZMPControllerInput, CoMZMPControllerOutput &gt;</edgelabel>
        </childnode>
      </node>
      <node id="50">
        <label>BipedalLocomotion::System::Advanceable&lt; SchmittTriggerInput, SchmittTriggerState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="54" relation="template-instance">
          <edgelabel>&lt; SchmittTriggerInput, SchmittTriggerState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="28">
        <label>BipedalLocomotion::Contacts::SchmittTriggerDetector</label>
        <link refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>BipedalLocomotion::Planners::Spline</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1Spline"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>BipedalLocomotion::System::Source&lt; Eigen::VectorXd &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; Eigen::VectorXd &gt;</edgelabel>
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>BipedalLocomotion::IK::QPInverseKinematics</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1QPInverseKinematics"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>BipedalLocomotion::IK::QPFixedBaseInverseKinematics</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1QPFixedBaseInverseKinematics"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>BipedalLocomotion::Estimators::RecursiveLeastSquare</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1RecursiveLeastSquare"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>BipedalLocomotion::System::Source&lt; ArucoDetectorOutput &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; ArucoDetectorOutput &gt;</edgelabel>
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>BipedalLocomotion::System::Source&lt; SplineState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; SplineState &gt;</edgelabel>
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>BipedalLocomotion::Planners::SO3Planner&lt; LieGroupTrivialization::Right &gt;</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1SO3Planner"/>
        <childnode refid="20" relation="public-inheritance">
        </childnode>
        <childnode refid="22" relation="template-instance">
          <edgelabel>&lt; LieGroupTrivialization::Right &gt;</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>BipedalLocomotion::ContinuousDynamicalSystem::MultiStateWeightProvider</label>
        <link refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1MultiStateWeightProvider"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>BipedalLocomotion::System::Source&lt; _State &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; _State &gt;</edgelabel>
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>BipedalLocomotion::Planners::SwingFootPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1SwingFootPlanner"/>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>BipedalLocomotion::System::ILinearTaskSolver&lt; _Task, _State &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1ILinearTaskSolver"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
        <childnode refid="54" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion::TSID::QPFixedBaseTSID</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>BipedalLocomotion::System::ILinearTaskSolver&lt; IKLinearTask, IntegrationBasedIKState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1ILinearTaskSolver"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="39" relation="template-instance">
          <edgelabel>&lt; IKLinearTask, IntegrationBasedIKState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::TSID::TaskSpaceInverseDynamics</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1TaskSpaceInverseDynamics"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>BipedalLocomotion::Contacts::ContactDetector</label>
        <link refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>BipedalLocomotion::System::Source&lt; SO3PlannerState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; SO3PlannerState &gt;</edgelabel>
        </childnode>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="BipedalLocomotion/System/OutputPort.h" line="23" column="12" bodyfile="BipedalLocomotion/System/OutputPort.h" bodystart="24" bodyend="41"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a8c089ecf2dd8ff0fb2732233994b6cac" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::System::OutputPort</scope><name>getOutput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ac50de29a6160baa2bba195af9d69430a" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::System::OutputPort</scope><name>isOutputValid</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ab9150fecab94a5c4e06bc0579277d8c3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::OutputPort</scope><name>Output</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1adcc49c38152c9204dcab4f8e87f68977" prot="public" virt="virtual"><scope>BipedalLocomotion::System::OutputPort</scope><name>~OutputPort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
