<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::TSID::VariableRegularizationTask</compoundname>
    <basecompoundref refid="structBipedalLocomotion_1_1TSID_1_1TSIDLinearTask" prot="public" virt="non-virtual">BipedalLocomotion::TSID::TSIDLinearTask</basecompoundref>
    <includes local="no">BipedalLocomotion/TSID/VariableRegularizationTask.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1a16ff6448c616b96a9f906245cc0eb631" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BipedalLocomotion::TSID::VariableRegularizationTask::m_variableName</definition>
        <argsstring></argsstring>
        <name>m_variableName</name>
        <briefdescription>
<para>Name of the variable considered that will be regularized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/VariableRegularizationTask.h" line="28" column="17" bodyfile="BipedalLocomotion/TSID/VariableRegularizationTask.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1a1e08a12a6a73a79a81c2c33018c3f502" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; BipedalLocomotion::TSID::VariableRegularizationTask::m_controlledElements</definition>
        <argsstring></argsstring>
        <name>m_controlledElements</name>
        <briefdescription>
<para>Name of the variable elements considered in the task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/VariableRegularizationTask.h" line="29" column="17" bodyfile="BipedalLocomotion/TSID/VariableRegularizationTask.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1ad49883be96ed012e29068aa0f228d8d5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::VariableRegularizationTask::m_isInitialized</definition>
        <argsstring></argsstring>
        <name>m_isInitialized</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the task has been initialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/VariableRegularizationTask.h" line="31" column="10" bodyfile="BipedalLocomotion/TSID/VariableRegularizationTask.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1ad22db6b86f7b0af9ec6551edb375e76a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::VariableRegularizationTask::m_isValid</definition>
        <argsstring></argsstring>
        <name>m_isValid</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the task is valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/VariableRegularizationTask.h" line="32" column="10" bodyfile="BipedalLocomotion/TSID/VariableRegularizationTask.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1a21181352b0d84aeae073a5e46a2b1d96" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t BipedalLocomotion::TSID::VariableRegularizationTask::m_variableSize</definition>
        <argsstring></argsstring>
        <name>m_variableSize</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Size of the regularized variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/VariableRegularizationTask.h" line="33" column="17" bodyfile="BipedalLocomotion/TSID/VariableRegularizationTask.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1a44319f32909224d367d61f5fc99eaaae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::VariableRegularizationTask::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; paramHandler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ae8bd038ace5d8bccda37b62c5712f22b">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>paramHandler</declname>
        </param>
        <briefdescription>
<para>Initialize the planner. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paramHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameters handler. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>variablesHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to a variables handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="4" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>variable_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the variable that you want to regularize   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>variable_size</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>int</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Number of the elements that will be regularized.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>elements_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the elements to consider. If not specified all the elements are regularize to the desired vector   </para>
</entry><entry thead="no" align='center'><para>No   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/VariableRegularizationTask.h" line="48" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1afeb8d2acf6e16f6f7b034b26803ca0e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::VariableRegularizationTask::setVariablesHandler</definition>
        <argsstring>(const System::VariablesHandler &amp;variablesHandler) override</argsstring>
        <name>setVariablesHandler</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a898c2f93e48aeeb41e29d17c17b95437">setVariablesHandler</reimplements>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref> &amp;</type>
          <declname>variablesHandler</declname>
        </param>
        <briefdescription>
<para>Set the set of variables required by the task. </para>
        </briefdescription>
        <detaileddescription>
<para>The variables are stored in the <ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variablesHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to a variables handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The variablesHandler must contain a variable named as the parameter <computeroutput>variable_name</computeroutput>. </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/VariableRegularizationTask.h" line="57" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1ae25a5ca3e9125dffcfdae6f76a17445a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::VariableRegularizationTask::setSetPoint</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; setPoint)</argsstring>
        <name>setSetPoint</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>setPoint</declname>
        </param>
        <briefdescription>
<para>Set the desired setpoint. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>setPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>vector containing the desired variable set point. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/VariableRegularizationTask.h" line="64" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1a4d9fa58ed90d17f878a63cfc6cac73d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::size_t</type>
        <definition>std::size_t BipedalLocomotion::TSID::VariableRegularizationTask::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a34621cd88c6d60909f09e95226f2cd67">size</reimplements>
        <briefdescription>
<para>Get the size of the task. </para>
        </briefdescription>
        <detaileddescription>
<para>(I.e the number of rows of the vector b) <simplesect kind="return"><para>the size of the task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/VariableRegularizationTask.h" line="70" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1a3ad566a5bda20a0dc7ea45e983f78ead" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2f9d37ec58342f227021c12a4a539748" kindref="member">Type</ref></type>
        <definition>Type BipedalLocomotion::TSID::VariableRegularizationTask::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ac20d8e993c66663b61f587d9642f3e8a">type</reimplements>
        <briefdescription>
<para>The <ref refid="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask" kindref="compound">VariableRegularizationTask</ref> is an equality task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the type of the task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/VariableRegularizationTask.h" line="76" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1a1d41a572a9794d3a252bdb52d6039d27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::VariableRegularizationTask::isValid</definition>
        <argsstring>() const override</argsstring>
        <name>isValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2566bae7a097d11b420b89cdd3f2002f">isValid</reimplements>
        <briefdescription>
<para>Determines the validity of the objects retrieved with <ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad510fff46eb9cbbc65775b1a9490e297" kindref="member">getA()</ref> and <ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a8c65780b85d3927038c3320d3cfca730" kindref="member">getB()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the objects are valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/VariableRegularizationTask.h" line="82" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask" kindref="compound">VariableRegularizationTask</ref> is a concrete implementation of the Task. </para>
    </briefdescription>
    <detaileddescription>
<para>Please use this element if you want to regularize a variable to a given value. The task represents the following equation <formula id="101">\[ x = x_{des} \]</formula> where <formula id="38">$x$</formula> are the elements of the variable you want to regularize to a given value. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BipedalLocomotion::TSID::TSIDLinearTask</label>
        <link refid="structBipedalLocomotion_1_1TSID_1_1TSIDLinearTask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::TSID::VariableRegularizationTask</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::LinearTask</label>
        <link refid="classBipedalLocomotion_1_1System_1_1LinearTask"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>BipedalLocomotion::TSID::TSIDLinearTask</label>
        <link refid="structBipedalLocomotion_1_1TSID_1_1TSIDLinearTask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::TSID::VariableRegularizationTask</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::LinearTask</label>
        <link refid="classBipedalLocomotion_1_1System_1_1LinearTask"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_description</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/TSID/VariableRegularizationTask.h" line="26" column="1" bodyfile="BipedalLocomotion/TSID/VariableRegularizationTask.h" bodystart="27" bodyend="83"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad510fff46eb9cbbc65775b1a9490e297" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>getA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a8c65780b85d3927038c3320d3cfca730" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>getB</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a1d152be26f750d933bc07baf1344e97d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>getDescription</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a591be3a0f92c9e1c40ccadf85c21f739" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>getResidual</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1a44319f32909224d367d61f5fc99eaaae" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1a1d41a572a9794d3a252bdb52d6039d27" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>isValid</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1aa95f6768b7cd98aab6727e2eb729a308" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>m_A</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a0e86b8ecde78a0d6e87fcb2c373b2151" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>m_b</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1a1e08a12a6a73a79a81c2c33018c3f502" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>m_controlledElements</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a5efff74f1d43a59376a9c93a0400120a" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>m_description</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1ad49883be96ed012e29068aa0f228d8d5" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>m_isInitialized</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1ad22db6b86f7b0af9ec6551edb375e76a" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>m_isValid</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1a16ff6448c616b96a9f906245cc0eb631" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>m_variableName</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1a21181352b0d84aeae073a5e46a2b1d96" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>m_variableSize</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1ae25a5ca3e9125dffcfdae6f76a17445a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>setSetPoint</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1afeb8d2acf6e16f6f7b034b26803ca0e7" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>setVariablesHandler</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1a4d9fa58ed90d17f878a63cfc6cac73d0" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>size</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a06fab6bb77dd556a74c76b6e57dc0ba1" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>subA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad6a0743b7902e539d634358b269741b4" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>subA</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1VariableRegularizationTask_1a3ad566a5bda20a0dc7ea45e983f78ead" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>type</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2f9d37ec58342f227021c12a4a539748" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>Type</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1accd4ab19a7e8738abe53b485d8acbf1c" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>update</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a22edf322e7504d1a197b687d265445d7" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>~LinearTask</name></member>
      <member refid="structBipedalLocomotion_1_1TSID_1_1TSIDLinearTask_1a7ba94cb320d7b4c367ed01c14ef29d73" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::VariableRegularizationTask</scope><name>~TSIDLinearTask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
