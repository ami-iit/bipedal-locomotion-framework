<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Contacts::SchmittTriggerDetector</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector" prot="public" virt="non-virtual">BipedalLocomotion::Contacts::ContactDetector</basecompoundref>
    <includes local="no">BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1aba3a015baeb0ae1f981477be8a69f225" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; BipedalLocomotion::Contacts::SchmittTriggerDetector::m_pimpl</definition>
        <argsstring></argsstring>
        <name>m_pimpl</name>
        <briefdescription>
<para>Pointer to implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="127" column="21" bodyfile="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1a18818e068e8f5b9d95bf6a224625a270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::Contacts::SchmittTriggerDetector::SchmittTriggerDetector</definition>
        <argsstring>()</argsstring>
        <name>SchmittTriggerDetector</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>It is required by the pimpl idiom. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="33" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1a36c544fc955734a77ddf3c3e3bd65c77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::Contacts::SchmittTriggerDetector::~SchmittTriggerDetector</definition>
        <argsstring>()</argsstring>
        <name>~SchmittTriggerDetector</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>It is required by the pimpl idiom. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="39" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1a12c749a6558f999fbcdafab99f0110d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::SchmittTriggerDetector::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; handler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a6db247d3db83217a16e963d01f6bcb77">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector" kindref="compound">SchmittTriggerDetector</ref> with a parameters handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>configure the custom parameters for the detector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The following parameters are required <table rows="6" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>contacts</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector&lt;string&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Vector containing the names of the contact. The name can be used to retrieve the current status of a contact with <computeroutput><ref refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1ad8e16e2a8a352a6fe6c99dbbf6270080" kindref="member">ContactDetector::get</ref></computeroutput>.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>contact_make_thresholds</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector&lt;double&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Vector containing High-value thresholds to initiate an ON state switch after switchOnAfter time-units. For each contact specified in <computeroutput>contacts</computeroutput> the user needs to specify an element of the vector.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>contact_break_thresholds</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector&lt;double&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Vector containing Low-value thresholds to initiate an ON state switch after switchOnAfter time-units. For each contact specified in <computeroutput>contacts</computeroutput> the user needs to specify an element of the vector.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>contact_make_switch_times</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector&lt;double&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Time units to wait for before switching to <computeroutput>contact</computeroutput> state from <computeroutput>no-contact</computeroutput> state. For each contact specified in <computeroutput>contacts</computeroutput> the user needs to specify an element of the vector.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>contact_break_switch_times</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector&lt;double&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Time units to wait for before switching to <computeroutput>no-contact</computeroutput> state from <computeroutput>contact</computeroutput> state. For each contact specified in <computeroutput>contacts</computeroutput> the user needs to specify an element of the vector.   </para>
</entry><entry thead="no" align='center'><para>Yes   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="54" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1aba31e8003654784ba231d90e897ce6e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::SchmittTriggerDetector::setTimedTriggerInput</definition>
        <argsstring>(const std::string &amp;contactName, const Math::SchmittTriggerInput &amp;input)</argsstring>
        <name>setTimedTriggerInput</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>contactName</declname>
        </param>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Math_1_1SchmittTriggerInput" kindref="compound">Math::SchmittTriggerInput</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Set trigger input and time stamp for an existing SchmittTrigger unit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">contactName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the contact </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">input</parametername>
</parameternamelist>
<parameterdescription>
<para>the imput of the trigger containing the contact force and the time instant </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="62" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1ac921d42d02d88a68fab7952cfc4e3d62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::SchmittTriggerDetector::setTimedTriggerInputs</definition>
        <argsstring>(const std::unordered_map&lt; std::string, Math::SchmittTriggerInput &gt; &amp;timedInputs)</argsstring>
        <name>setTimedTriggerInputs</name>
        <param>
          <type>const std::unordered_map&lt; std::string, <ref refid="structBipedalLocomotion_1_1Math_1_1SchmittTriggerInput" kindref="compound">Math::SchmittTriggerInput</ref> &gt; &amp;</type>
          <declname>timedInputs</declname>
        </param>
        <briefdescription>
<para>Set trigger input and time stamp for existing units. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">timedInputs</parametername>
</parameternamelist>
<parameterdescription>
<para>container of timed trigger inputs, pair(first, second): (time, force) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>any unit names in the input container that does not already exist will be ignored </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="71" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1abf5851f9bc76e39bf03d974d5895a273" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::SchmittTriggerDetector::addContact</definition>
        <argsstring>(const std::string &amp;contactName, const BipedalLocomotion::Math::SchmittTriggerState &amp;initialState, const BipedalLocomotion::Math::SchmittTrigger::Params &amp;params)</argsstring>
        <name>addContact</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>contactName</declname>
        </param>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Math_1_1SchmittTriggerState" kindref="compound">BipedalLocomotion::Math::SchmittTriggerState</ref> &amp;</type>
          <declname>initialState</declname>
        </param>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Math_1_1SchmittTrigger_1_1Params" kindref="compound">BipedalLocomotion::Math::SchmittTrigger::Params</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Add a contact whose contact state need to be tracked. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">contactName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the contact </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initialState</parametername>
</parameternamelist>
<parameterdescription>
<para>initial contact state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>Schmitt Trigger parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">time_now</parametername>
</parameternamelist>
<parameterdescription>
<para>current time instant to initialize the Schmitt trigger timers </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>this method does not reset the state and parameters if the contact already exists </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="83" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1af358db9fa986a86ebafab00660150709" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::SchmittTriggerDetector::resetState</definition>
        <argsstring>(const std::string &amp;contactName, const bool &amp;state)</argsstring>
        <name>resetState</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>contactName</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Reset a contact&apos;s state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">contactName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the contact </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initialState</parametername>
</parameternamelist>
<parameterdescription>
<para>contact state </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false if contact does not exist/otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="93" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1a5fb1195af7ba13fa0984320acf556917" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::SchmittTriggerDetector::resetContact</definition>
        <argsstring>(const std::string &amp;contactName, const bool state, const BipedalLocomotion::Math::SchmittTrigger::Params &amp;params)</argsstring>
        <name>resetContact</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>contactName</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Math_1_1SchmittTrigger_1_1Params" kindref="compound">BipedalLocomotion::Math::SchmittTrigger::Params</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Reset a contact&apos;s parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">contactName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the contact </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">initialState</parametername>
</parameternamelist>
<parameterdescription>
<para>initial contact state </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>Schmitt Trigger parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false if contact does not exist/otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="102" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1af0ebc3d9afa278e871be41e3c9be9896" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::SchmittTriggerDetector::removeContact</definition>
        <argsstring>(const std::string &amp;contactName)</argsstring>
        <name>removeContact</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>contactName</declname>
        </param>
        <briefdescription>
<para>Remove contact from the Detector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">contactName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the contact </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false if does not exist/otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="111" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1a1cf53a6d4a1bc4b6dd682e1c2fef8c69" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::SchmittTriggerDetector::advance</definition>
        <argsstring>() final</argsstring>
        <name>advance</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a67107e46e831d93f572558b541aab6d2">advance</reimplements>
        <briefdescription>
<para>Compute one step of the detector. </para>
        </briefdescription>
        <detaileddescription>
<para>This method uses all the inputs and evaluate the contact status considering the Schmitt trigger output. <simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="119" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Schmitt Trigger thresholding based contact detector that maintains and updates the contact states for a prescribed set of contacts. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Source&lt; EstimatedContactList &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; EstimatedContactList &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Contacts::SchmittTriggerDetector</label>
        <link refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::Contacts::ContactDetector</label>
        <link refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>BipedalLocomotion::Contacts::EstimatedContact</label>
        <link refid="structBipedalLocomotion_1_1Contacts_1_1EstimatedContact"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>K</label>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="16">
        <label>T</label>
      </node>
      <node id="14">
        <label>std::unordered_map&lt; K, T &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Source&lt; EstimatedContactList &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; EstimatedContactList &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Contacts::SchmittTriggerDetector</label>
        <link refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>std::unordered_map&lt; std::string, Contacts::EstimatedContact &gt;</label>
        <childnode refid="10" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="14" relation="template-instance">
          <edgelabel>&lt; std::string, Contacts::EstimatedContact &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>BipedalLocomotion::Contacts::ContactBase</label>
        <link refid="structBipedalLocomotion_1_1Contacts_1_1ContactBase"/>
        <childnode refid="12" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::Contacts::ContactDetector</label>
        <link refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_contactStates</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>std::string</label>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" line="25" column="1" bodyfile="BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h" bodystart="26" bodyend="128"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1abf5851f9bc76e39bf03d974d5895a273" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>addContact</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1a1cf53a6d4a1bc4b6dd682e1c2fef8c69" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a618ab786bb43814b3b3012b843fce93b" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>close</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1ad8e16e2a8a352a6fe6c99dbbf6270080" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>get</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1a9d0a9f236c81d8fe59c50f2f7db33128" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>get</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1af11bae01dd074ff9e2d4ebdfcc7edd88" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>getOutput</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1a12c749a6558f999fbcdafab99f0110d8" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a975a7ecbf38c917c7b72519581fc7dba" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1add50895455a7713e665da0c93b027c12" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>isOutputValid</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1a028ec4c9e7bbf0fce3fd8c5e94f72a4c" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>m_contactStates</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1af9644dfa23468dd4c37532600c491810" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>m_detectorState</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1aba3a015baeb0ae1f981477be8a69f225" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>m_pimpl</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a69603f2c9c608815908425b5b8c2005c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>Output</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1af0ebc3d9afa278e871be41e3c9be9896" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>removeContact</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1a5fb1195af7ba13fa0984320acf556917" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>resetContact</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1a11bf662e6ea3ac76dcc4767172bf6adb" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>resetContacts</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1af358db9fa986a86ebafab00660150709" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>resetState</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1a18818e068e8f5b9d95bf6a224625a270" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>SchmittTriggerDetector</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1a472624c76d5e02e8ae16991cd77016ce" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ad2637be5c9075a2d8f09fedc6a42d808" prot="public" virt="pure-virtual" ambiguityscope="BipedalLocomotion::System::Advanceable::"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1aba31e8003654784ba231d90e897ce6e5" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>setTimedTriggerInput</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1ac921d42d02d88a68fab7952cfc4e3d62" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>setTimedTriggerInputs</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1a2d43086e84e475eaec9adeb9575dea84" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>State</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1afae1137cba829874bab4a1d25d559896" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>~Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1a586343d41d78cc88ea919e3600266fd3" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>~ContactDetector</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ac9b58b0d2f6ae8821b873ed6f9817ccb" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>~InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1adcc49c38152c9204dcab4f8e87f68977" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>~OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector_1a36c544fc955734a77ddf3c3e3bd65c77" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>~SchmittTriggerDetector</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1acf12427433027de27b18e6e70ba0cae8" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::SchmittTriggerDetector</scope><name>~Source</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
