<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner" prot="public" virt="non-virtual">BipedalLocomotion::Planners::DCMPlanner</basecompoundref>
    <includes local="no">BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1a683d2b2957650558670e6bcdcffe7a15" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; BipedalLocomotion::Planners::TimeVaryingDCMPlanner::m_pimpl</definition>
        <argsstring></argsstring>
        <name>m_pimpl</name>
        <briefdescription>
<para>Pointer to private implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="31" column="21" bodyfile="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1afe4ed11bbdbaabd4acbeceeb9d2aa6ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::Planners::TimeVaryingDCMPlanner::TimeVaryingDCMPlanner</definition>
        <argsstring>()</argsstring>
        <name>TimeVaryingDCMPlanner</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="37" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ab8ab59949f0b38a5de1f7e31196a2d79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::Planners::TimeVaryingDCMPlanner::~TimeVaryingDCMPlanner</definition>
        <argsstring>() override</argsstring>
        <name>~TimeVaryingDCMPlanner</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="42" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1a0eb48afbadf1bf3c8d48cec0e8b006ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::TimeVaryingDCMPlanner::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; handler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a6db247d3db83217a16e963d01f6bcb77">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize the planner. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameter handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="12" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>linear_solver</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Linear solver used by ipopt, the default value is mumps. Please check <ulink url="https://coin-or.github.io/Ipopt/#PREREQUISITES">here</ulink> for the available solvers   </para>
</entry><entry thead="no" align='center'><para>No    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>planner_sampling_time</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Sampling time of the planner   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>number_of_foot_corners</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>int</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Number of the corner of the polygon used to describe the foot. E.g. 4   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>foot_corner_&lt;i&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>Vector3d</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>A 3d vector describing the position of the corner w.r.t. frame associated to the foot. <computeroutput>i = 0:number_of_foot_corners</computeroutput>.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>omega_dot_weight</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Weight associated to the <formula id="137">$\dot{\omega}$</formula>   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>dcm_tracking_weight</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Weight associated to the DCM tracking   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>omega_dot_rate_of_change_weight</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Weight associated to the rate of change of <formula id="137">$\dot{\omega}$</formula>   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>vrp_rate_of_change_weight</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Weight associated to the rate of change of the VRP   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>dcm_rate_of_change_weight</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Weight associated to the rate of change of the DCM   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>use_external_dcm_reference</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>bool</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Set this option to true if you want provide an external DCM reference with <ref refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1afe43643d66211ebfe3785f725f2bddba" kindref="member">TimeVaryingDCMPlanner::setDCMReference()</ref>. (Default value False)   </para>
</entry><entry thead="no" align='center'><para>No    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>gravity</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Value of the gravity acceleration. It should be a positive number (Default Math::StandardAccelerationOfGravitation )   </para>
</entry><entry thead="no" align='center'><para>No   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>true in case of success/false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="63" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1a7040188a5ec9589ddd5112c36f04e87f" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::TimeVaryingDCMPlanner::computeTrajectory</definition>
        <argsstring>() final</argsstring>
        <name>computeTrajectory</name>
        <reimplements refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner_1ab53cdcad13421f631a811dcdcae1126c">computeTrajectory</reimplements>
        <briefdescription>
<para>Compute the DCM trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="69" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1a463e9a97bc273b37be3fc74b377fdd82" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::TimeVaryingDCMPlanner::setContactPhaseList</definition>
        <argsstring>(const Contacts::ContactPhaseList &amp;contactPhaseList) final</argsstring>
        <name>setContactPhaseList</name>
        <reimplements refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner_1a96d65cf6acea9c068cfd84ae3d814066">setContactPhaseList</reimplements>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1Contacts_1_1ContactPhaseList" kindref="compound">Contacts::ContactPhaseList</ref> &amp;</type>
          <declname>contactPhaseList</declname>
        </param>
        <briefdescription>
<para>Set the contact phase list. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>the contactPhaseList pointer should point to an already initialized ContactPhaseList. Please be sure that the memory pointed is reachable for the entire life time of the <ref refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner" kindref="compound">DCMPlanner</ref> class. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>contactPhaseList</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer containing the list of the contact phases </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="79" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1afe43643d66211ebfe3785f725f2bddba" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::TimeVaryingDCMPlanner::setDCMReference</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::MatrixXd &gt; dcmReference) final</argsstring>
        <name>setDCMReference</name>
        <reimplements refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner_1a13f56bb413ae36b6b5419be82616f455">setDCMReference</reimplements>
        <param>
          <type>Eigen::Ref&lt; const Eigen::MatrixXd &gt;</type>
          <declname>dcmReference</declname>
        </param>
        <briefdescription>
<para>Set the DCM reference. </para>
        </briefdescription>
        <detaileddescription>
<para>This value will be used as regularization term from the planner. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dcmReference</parametername>
</parameternamelist>
<parameterdescription>
<para>matrix containing the DCM trajectory. <emphasis>dcmReference</emphasis> must be a 3 x n matrix where the rows are the x y and z coordinates of the DCM and the columns contain the trajectory of the DCM. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The number of columns should be coherent with the contactPhaseList. In details the number of samples <formula id="95">$s$</formula> is equal to <formula id="138">\[ s = \left\lceil {\frac{t_f - t_i}{dT}} \right\rceil \]</formula> where <formula id="139">$dT$</formula> is the sampling time of the planner, <formula id="140">$t_f$</formula> and <formula id="141">$t_i$</formula> are the end time of the last contact and the initial time of the first contact. </para>
</simplesect>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="95" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1aa313676a62fd6c1ceba48dc17592e899" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::Planners::TimeVaryingDCMPlanner::setInitialState</definition>
        <argsstring>(const DCMPlannerState &amp;initialState) final</argsstring>
        <name>setInitialState</name>
        <reimplements refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner_1a43cc8ee9d3c9eeb4e856f3a7556be5c5">setInitialState</reimplements>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Planners_1_1DCMPlannerState" kindref="compound">DCMPlannerState</ref> &amp;</type>
          <declname>initialState</declname>
        </param>
        <briefdescription>
<para>Set the initial state of the planner. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>initialState</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial state of the planner </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="101" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ad4e7aa0da4b67123771a8155611fbe64" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>const <ref refid="structBipedalLocomotion_1_1Planners_1_1DCMPlannerState" kindref="compound">DCMPlannerState</ref> &amp;</type>
        <definition>const DCMPlannerState&amp; BipedalLocomotion::Planners::TimeVaryingDCMPlanner::getOutput</definition>
        <argsstring>() const final</argsstring>
        <name>getOutput</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a8c089ecf2dd8ff0fb2732233994b6cac">getOutput</reimplements>
        <briefdescription>
<para>Get the object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a const reference of the requested object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="107" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ae3452250d0c1ff2c505e160837cdebc9" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::TimeVaryingDCMPlanner::isOutputValid</definition>
        <argsstring>() const final</argsstring>
        <name>isOutputValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ac50de29a6160baa2bba195af9d69430a">isOutputValid</reimplements>
        <briefdescription>
<para>Determines the validity of the object retrieved with <ref refid="NamedTuple_8h_1ab70c8bf5efee8eb732d3dfa7d05efa58" kindref="member">get()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the object is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="113" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ad2935a4ff1c4e345a6e1b49dc5a3bfc6" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Planners::TimeVaryingDCMPlanner::advance</definition>
        <argsstring>() final</argsstring>
        <name>advance</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a67107e46e831d93f572558b541aab6d2">advance</reimplements>
        <briefdescription>
<para>Advance the internal state. </para>
        </briefdescription>
        <detaileddescription>
<para>This may change the value retrievable from <ref refid="NamedTuple_8h_1ab70c8bf5efee8eb732d3dfa7d05efa58" kindref="member">get()</ref>. <simplesect kind="return"><para>True if the advance is successfull. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="119" column="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner" kindref="compound">DCMPlanner</ref> defines a trajectory generator for the variable height Divergent component of motion (DCM). </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::Planners::DCMPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Source&lt; DCMPlannerState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; DCMPlannerState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::Planners::DCMPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_contactPhaseList</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>m_initialState</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>BipedalLocomotion::Planners::DCMPlannerState</label>
        <link refid="structBipedalLocomotion_1_1Planners_1_1DCMPlannerState"/>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Source&lt; DCMPlannerState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; DCMPlannerState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>BipedalLocomotion::Contacts::ContactPhaseList</label>
        <link refid="classBipedalLocomotion_1_1Contacts_1_1ContactPhaseList"/>
      </node>
      <node id="8">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" line="24" column="1" bodyfile="BipedalLocomotion/Planners/TimeVaryingDCMPlanner.h" bodystart="25" bodyend="121"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ad2935a4ff1c4e345a6e1b49dc5a3bfc6" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a618ab786bb43814b3b3012b843fce93b" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>close</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1a7040188a5ec9589ddd5112c36f04e87f" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>computeTrajectory</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ad4e7aa0da4b67123771a8155611fbe64" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>getOutput</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1a0eb48afbadf1bf3c8d48cec0e8b006ca" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a975a7ecbf38c917c7b72519581fc7dba" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ae3452250d0c1ff2c505e160837cdebc9" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>isOutputValid</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner_1afd0891b02c4ecda84047fce1c7804ca2" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>m_contactPhaseList</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner_1af1b8d72d4fe9eddc15fad125b4655c94" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>m_initialState</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1a683d2b2957650558670e6bcdcffe7a15" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>m_pimpl</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a69603f2c9c608815908425b5b8c2005c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>Output</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1a463e9a97bc273b37be3fc74b377fdd82" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>setContactPhaseList</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1afe43643d66211ebfe3785f725f2bddba" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>setDCMReference</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1aa313676a62fd6c1ceba48dc17592e899" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>setInitialState</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1a472624c76d5e02e8ae16991cd77016ce" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ad2637be5c9075a2d8f09fedc6a42d808" prot="public" virt="pure-virtual" ambiguityscope="BipedalLocomotion::System::Advanceable::"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1afe4ed11bbdbaabd4acbeceeb9d2aa6ad" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>TimeVaryingDCMPlanner</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1afae1137cba829874bab4a1d25d559896" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>~Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1DCMPlanner_1a4be34427ec06b98edcdd7ab62ab2728e" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>~DCMPlanner</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ac9b58b0d2f6ae8821b873ed6f9817ccb" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>~InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1adcc49c38152c9204dcab4f8e87f68977" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>~OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1acf12427433027de27b18e6e70ba0cae8" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>~Source</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1TimeVaryingDCMPlanner_1ab8ab59949f0b38a5de1f7e31196a2d79" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::TimeVaryingDCMPlanner</scope><name>~TimeVaryingDCMPlanner</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
