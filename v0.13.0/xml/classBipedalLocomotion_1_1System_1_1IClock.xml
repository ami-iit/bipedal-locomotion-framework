<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1System_1_1IClock" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>BipedalLocomotion::System::IClock</compoundname>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1RosClock" prot="public" virt="non-virtual">BipedalLocomotion::System::RosClock</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1StdClock" prot="public" virt="non-virtual">BipedalLocomotion::System::StdClock</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1System_1_1YarpClock" prot="public" virt="non-virtual">BipedalLocomotion::System::YarpClock</derivedcompoundref>
    <includes local="no">BipedalLocomotion/System/IClock.h</includes>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1IClock_1a99a28837fb84b2a1df959890ec561f82" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::System::IClock::IClock</definition>
        <argsstring>()=default</argsstring>
        <name>IClock</name>
        <briefdescription>
<para>The constructor is protected. </para>
        </briefdescription>
        <detaileddescription>
<para>Please create the clock with ClockBulder. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/IClock.h" line="33" column="5"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1IClock_1a77e56163bf5079bd23380849f69266aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual BipedalLocomotion::System::IClock::~IClock</definition>
        <argsstring>()=default</argsstring>
        <name>~IClock</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/IClock.h" line="39" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1IClock_1a0e89b562a22f1290761787be01084145" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::chrono::duration&lt; double &gt;</type>
        <definition>virtual std::chrono::duration&lt;double&gt; BipedalLocomotion::System::IClock::now</definition>
        <argsstring>()=0</argsstring>
        <name>now</name>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1StdClock_1adf4aa071022036e199f19daf693eb042">now</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1RosClock_1a012f7ae6a37f527b7503fe8b6dd7c1ef">now</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1YarpClock_1a6d9d80e3c3c123455bed534c2565082a">now</reimplementedby>
        <briefdescription>
<para>Get the current time. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current time. The output of the function depends on the concrete implementation. </para>
</simplesect>
<simplesect kind="note"><para><computeroutput><ref refid="namespaceBipedalLocomotion_1a5927a6bb897f521070adfb6ca866668f" kindref="member">BipedalLocomotion::clock()</ref>.<ref refid="classBipedalLocomotion_1_1System_1_1IClock_1a0e89b562a22f1290761787be01084145" kindref="member">now()</ref>.count()</computeroutput> returns a double containing the seconds since epoch. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/IClock.h" line="47" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1IClock_1a67693d3efb397f36a29a3cd293a3b254" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BipedalLocomotion::System::IClock::sleepFor</definition>
        <argsstring>(const std::chrono::duration&lt; double &gt; &amp;sleepDuration)=0</argsstring>
        <name>sleepFor</name>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1StdClock_1aa4ab82f30a91e6bf7f98fb001c97e135">sleepFor</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1RosClock_1a572a7c94b44c3b6bc3f044612c729d6d">sleepFor</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1YarpClock_1a97ff209b7f7b79aa04ef227a0f8aca2c">sleepFor</reimplementedby>
        <param>
          <type>const std::chrono::duration&lt; double &gt; &amp;</type>
          <declname>sleepDuration</declname>
        </param>
        <briefdescription>
<para>Blocks the execution of the current thread for at least the specified sleepDuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>duration to sleep </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/IClock.h" line="53" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1IClock_1a24adc25ba8b11d0a01bcde4eeb4fd91b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BipedalLocomotion::System::IClock::sleepUntil</definition>
        <argsstring>(const std::chrono::duration&lt; double &gt; &amp;time)=0</argsstring>
        <name>sleepUntil</name>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1StdClock_1aa49d0bb14a7cc40704c197456d90241e">sleepUntil</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1RosClock_1a703b948c60e1349843412579983683db">sleepUntil</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1YarpClock_1af889336071d6371103749346e3dbcdf9">sleepUntil</reimplementedby>
        <param>
          <type>const std::chrono::duration&lt; double &gt; &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Blocks the execution of the current thread until specified sleepTime has been reached. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>to block until </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/IClock.h" line="59" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1IClock_1a220afc1ddc1f19474cb0da08a3cd3640" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BipedalLocomotion::System::IClock::yield</definition>
        <argsstring>()=0</argsstring>
        <name>yield</name>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1StdClock_1abb868d54c2b5daff1970ad552a4536f4">yield</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1RosClock_1a962c94da417af69dd731a193acdc0f26">yield</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1System_1_1YarpClock_1a1223985052e0b22e18f2ce3851c2e884">yield</reimplementedby>
        <briefdescription>
<para>Provides a hint to the implementation to reschedule the execution of threads, allowing other threads to run. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/IClock.h" line="65" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1System_1_1IClock" kindref="compound">IClock</ref> is the interface to the clock. </para>
    </briefdescription>
    <detaileddescription>
<para>The Clock is considered as a singleton. Please use the <ref refid="classBipedalLocomotion_1_1System_1_1ClockBuilder" kindref="compound">ClockBuilder</ref> to create a clock. The default clock is the <ref refid="classBipedalLocomotion_1_1System_1_1StdClock" kindref="compound">System::StdClock</ref> which uses only the std methods. To get the current time you can simply use the following line of code <programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="namespaceBipedalLocomotion_1a5927a6bb897f521070adfb6ca866668f" kindref="member">BipedalLocomotion::clock</ref>().<ref refid="classBipedalLocomotion_1_1System_1_1IClock_1a0e89b562a22f1290761787be01084145" kindref="member">now</ref>();</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BipedalLocomotion::System::IClock</label>
        <link refid="classBipedalLocomotion_1_1System_1_1IClock"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::RosClock</label>
        <link refid="classBipedalLocomotion_1_1System_1_1RosClock"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::StdClock</label>
        <link refid="classBipedalLocomotion_1_1System_1_1StdClock"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::YarpClock</label>
        <link refid="classBipedalLocomotion_1_1System_1_1YarpClock"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="BipedalLocomotion/System/IClock.h" line="26" column="1" bodyfile="BipedalLocomotion/System/IClock.h" bodystart="27" bodyend="66"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1IClock_1a99a28837fb84b2a1df959890ec561f82" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::System::IClock</scope><name>IClock</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1IClock_1a0e89b562a22f1290761787be01084145" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::System::IClock</scope><name>now</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1IClock_1a67693d3efb397f36a29a3cd293a3b254" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::System::IClock</scope><name>sleepFor</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1IClock_1a24adc25ba8b11d0a01bcde4eeb4fd91b" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::System::IClock</scope><name>sleepUntil</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1IClock_1a220afc1ddc1f19474cb0da08a3cd3640" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::System::IClock</scope><name>yield</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1IClock_1a77e56163bf5079bd23380849f69266aa" prot="public" virt="virtual"><scope>BipedalLocomotion::System::IClock</scope><name>~IClock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
