<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="traits_8h" kind="file" language="C++">
    <compoundname>traits.h</compoundname>
    <includes local="no">tuple</includes>
    <includedby refid="DynamicalSystem_8h" local="no">BipedalLocomotion/ContinuousDynamicalSystem/DynamicalSystem.h</includedby>
    <includedby refid="FixedBaseDynamics_8h" local="no">BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h</includedby>
    <includedby refid="FloatingBaseDynamicsWithCompliantContacts_8h" local="no">BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseDynamicsWithCompliantContacts.h</includedby>
    <includedby refid="Integrator_8h" local="no">BipedalLocomotion/ContinuousDynamicalSystem/Integrator.h</includedby>
    <includedby refid="LinearTimeInvariantSystem_8h" local="no">BipedalLocomotion/ContinuousDynamicalSystem/LinearTimeInvariantSystem.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>tuple</label>
      </node>
      <node id="1">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/impl/traits.h</label>
        <link refid="traits_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/Integrator.h</label>
        <link refid="Integrator_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/MultiStateWeightProvider.h</label>
        <link refid="MultiStateWeightProvider_8h"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/DynamicalSystem.h</label>
        <link refid="DynamicalSystem_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/CentroidalDynamics.h</label>
        <link refid="CentroidalDynamics_8h"/>
      </node>
      <node id="4">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h</label>
        <link refid="FixedBaseDynamics_8h"/>
      </node>
      <node id="5">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseDynamicsWithCompliantContacts.h</label>
        <link refid="FloatingBaseDynamicsWithCompliantContacts_8h"/>
      </node>
      <node id="6">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseSystemKinematics.h</label>
        <link refid="FloatingBaseSystemKinematics_8h"/>
      </node>
      <node id="9">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/ForwardEuler.h</label>
        <link refid="ForwardEuler_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h</label>
        <link refid="FirstOrderSmoother_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/LinearTimeInvariantSystem.h</label>
        <link refid="LinearTimeInvariantSystem_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/FixedStepIntegrator.h</label>
        <link refid="FixedStepIntegrator_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/impl/traits.h</label>
        <link refid="traits_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1internal_1_1traits_3_01const_01T_01_4" prot="public">BipedalLocomotion::ContinuousDynamicalSystem::internal::traits&lt; const T &gt;</innerclass>
    <innernamespace refid="namespaceBipedalLocomotion">BipedalLocomotion</innernamespace>
    <innernamespace refid="namespaceBipedalLocomotion_1_1ContinuousDynamicalSystem">BipedalLocomotion::ContinuousDynamicalSystem</innernamespace>
    <innernamespace refid="namespaceBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1internal">BipedalLocomotion::ContinuousDynamicalSystem::internal</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="traits_8h_1a1fda6311c664fa7d6e5ea0a8dfbf36b7" prot="public" static="no">
        <name>BLF_CONTINUOUS_DYNAMICAL_SYSTEM_STATE</name>
        <param><defname>...</defname></param>
        <initializer>using State = std::tuple&lt;__VA_ARGS__&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/impl/traits.h" line="13" column="9" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/impl/traits.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="traits_8h_1aad6f57e6a4fb713f6a69110a22fb6013" prot="public" static="no">
        <name>BLF_CONTINUOUS_DYNAMICAL_SYSTEM_STATE_DERIVATIVE</name>
        <param><defname>...</defname></param>
        <initializer>    using StateDerivative = std::tuple&lt;__VA_ARGS__&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/impl/traits.h" line="15" column="9" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/impl/traits.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="traits_8h_1a8a9ee4596b0fae2dc9e6a6961cafb657" prot="public" static="no">
        <name>BLF_CONTINUOUS_DYNAMICAL_SYSTEM_STATE_INPUT</name>
        <param><defname>...</defname></param>
        <initializer>using Input = std::tuple&lt;__VA_ARGS__&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/impl/traits.h" line="18" column="9" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/impl/traits.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="traits_8h_1a0163896a87affbf02ec432fba8bb6f09" prot="public" static="no">
        <name>BLF_DEFINE_CONTINUOUS_DYNAMICAL_SYSTEM_INTERAL_STRUCTURE</name>
        <param><defname>_DynamicalSystem</defname></param>
        <param><defname>StateType</defname></param>
        <param><defname>StateDerivativeType</defname></param>
        <param><defname>InputType</defname></param>
        <initializer>    namespace BipedalLocomotion                                                       \
    {                                                                                 \
    namespace ContinuousDynamicalSystem                                               \
    {                                                                                 \
    namespace internal                                                                \
    {                                                                                 \
    template &lt;&gt; struct traits&lt;_DynamicalSystem&gt;                                       \
    {                                                                                 \
        BLF_CONTINUOUS_DYNAMICAL_SYSTEM_STATE StateType;                              \
        BLF_CONTINUOUS_DYNAMICAL_SYSTEM_STATE_DERIVATIVE StateDerivativeType;         \
        BLF_CONTINUOUS_DYNAMICAL_SYSTEM_STATE_INPUT InputType;                        \
        using DynamicalSystem = _DynamicalSystem;                                     \
    };                                                                                \
    }                                                                                 \
    }                                                                                 \
    }</initializer>
        <briefdescription>
<para>The user must call this macro before defining a custom ContinuousDynamicalSystem::DynamicalSystem. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>DynamicalSystemType</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the dynamical system </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>StateType</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of the types used to define the state. The list must be defined using round parenthesis. E.g. <computeroutput>(Eigen::VectorXd, Eigen::VectorXd)</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>StateDerivativeType</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of the types used to define the state derivative. The list must be defined using round parenthesis. E.g. <computeroutput>(Eigen::VectorXd, Eigen::VectorXd)</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>InputType</parametername>
</parameternamelist>
<parameterdescription>
<para>the list of the types used to define inputs. The list must be defined using round parenthesis. E.g. <computeroutput>(Eigen::VectorXd, Eigen::VectorXd)</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/impl/traits.h" line="33" column="9" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/impl/traits.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="traits_8h_1a0f84fde07f0a6fd9fd13de1c9c7c8a16" prot="public" static="no">
        <name>BLF_DEFINE_INTEGRATOR_STRUCTURE</name>
        <param><defname>IntegratorType</defname></param>
        <param><defname>_Derived</defname></param>
        <initializer>    namespace BipedalLocomotion                                             \
    {                                                                       \
    namespace ContinuousDynamicalSystem                                     \
    {                                                                       \
    namespace internal                                                      \
    {                                                                       \
    template &lt;class _Derived&gt; struct traits&lt;IntegratorType&lt;_Derived&gt;&gt;       \
    {                                                                       \
        /** State of the integrator */                                      \
        using State = typename traits&lt;_Derived&gt;::State;                     \
        /** State derivative of the integrator */                           \
        using StateDerivative = typename traits&lt;_Derived&gt;::StateDerivative; \
        /** Type of the dynamical system */                                 \
        using DynamicalSystem = typename traits&lt;_Derived&gt;::DynamicalSystem; \
    };                                                                      \
    }                                                                       \
    }                                                                       \
    }</initializer>
        <briefdescription>
<para>The user must call this macro before defining a custom ContinuousDynamicalSystem::Integrator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>IntegratorType</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the integrator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_Derived</parametername>
</parameternamelist>
<parameterdescription>
<para>the type derived integrator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/impl/traits.h" line="56" column="9" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/impl/traits.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="authors"><para>Giulio Romualdi </para>
</simplesect>
<simplesect kind="copyright"><para>2020 Istituto Italiano di Tecnologia (IIT). This software may be modified and distributed under the terms of the BSD-3-Clause license. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="BipedalLocomotion/ContinuousDynamicalSystem/impl/traits.h"/>
  </compounddef>
</doxygen>
