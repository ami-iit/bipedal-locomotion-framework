<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics" prot="public" virt="non-virtual">BipedalLocomotion::Estimators::RobotDynamicsEstimator::Dynamics</basecompoundref>
    <includes local="no">BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a39a613ca2c216fe47a463e07d4d4224f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::m_useBias</definition>
        <argsstring></argsstring>
        <name>m_useBias</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>If true the dynamics depends on a bias additively. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="32" column="10" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a1f99520c1c3db117473ee113cf77c255" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::m_bias</definition>
        <argsstring></argsstring>
        <name>m_bias</name>
        <briefdescription>
<para>The bias is initialized and used only if m_useBias is true. </para>
        </briefdescription>
        <detaileddescription>
<para>False if not specified. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="33" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a252cb543b890364753a64bcb48c05f62" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::m_biasVariableName</definition>
        <argsstring></argsstring>
        <name>m_biasVariableName</name>
        <briefdescription>
<para>Name of the variable containing the bias in the variable handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="35" column="17" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a6d882ebdebcfda120b5aeec20e0289e6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::m_isSubModelListSet</definition>
        <argsstring></argsstring>
        <name>m_isSubModelListSet</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>Boolean flag saying if the sub-model list has been set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="37" column="10" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1ad902ad04911f26984965c58ea1502a29" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::m_nrOfSubDynamics</definition>
        <argsstring></argsstring>
        <name>m_nrOfSubDynamics</name>
        <briefdescription>
<para>Number of sub-dynamics which corresponds to the number of sub-models. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="38" column="9" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a98c59fa11b143311e5ea39abb922c6ae" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper" kindref="compound">KinDynWrapper</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;KinDynWrapper&gt; &gt; BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::m_subModelKinDynList</definition>
        <argsstring></argsstring>
        <name>m_subModelKinDynList</name>
        <briefdescription>
<para>Vector of <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper" kindref="compound">KinDynWrapper</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="40" column="17" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a2c4c7e76398161ae566d7ae689b9cb83" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> &gt;</type>
        <definition>std::vector&lt;SubModel&gt; BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::m_subModelList</definition>
        <argsstring></argsstring>
        <name>m_subModelList</name>
        <briefdescription>
<para>Vector of <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="43" column="17" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a4b672bcc7c161a7ee93913116cb9029e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>std::vector&lt;Eigen::VectorXd&gt; BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::m_subModelJointVel</definition>
        <argsstring></argsstring>
        <name>m_subModelJointVel</name>
        <briefdescription>
<para>Updated joint velocities of each sub-model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="44" column="17" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1ac2093fec3a4b1d6d8aa78a274ce42984" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::size_t &gt;</type>
        <definition>std::vector&lt;std::size_t&gt; BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::m_subModelWithGyro</definition>
        <argsstring></argsstring>
        <name>m_subModelWithGyro</name>
        <briefdescription>
<para>List of indeces saying which sub-model in the m_subDynamics list containa the gyroscope. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="46" column="17" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1ab51a2db3072f88dbc959cc6e154ef199" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::m_jointVelocityFullModel</definition>
        <argsstring></argsstring>
        <name>m_jointVelocityFullModel</name>
        <briefdescription>
<para>Vector of joint velocities. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="48" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1aa46481efe7f3493df666d440eec67f92" prot="private" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1UKFInput" kindref="compound">UKFInput</ref></type>
        <definition>UKFInput BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::m_ukfInput</definition>
        <argsstring></argsstring>
        <name>m_ukfInput</name>
        <briefdescription>
<para>Input of the UKF used to update the dynamics. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="49" column="14" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a5dcb5aff89feb6d295817b013efc701f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
<para>Name of dynamics. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="50" column="17" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a9e6979fef7b95d67faf82417e2d1381e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::m_elements</definition>
        <argsstring></argsstring>
        <name>m_elements</name>
        <initializer>= {}</initializer>
        <briefdescription>
<para>Elements composing the variable vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="51" column="17" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a8095b9422de1dce39587fe8dfc78220f" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref></type>
        <definition>System::VariablesHandler BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::m_stateVariableHandler</definition>
        <argsstring></argsstring>
        <name>m_stateVariableHandler</name>
        <briefdescription>
<para>Variable handler describing the variables and the sizes in the ukf state vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="52" column="30" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a1c56d61ecc8a40b01475d3a340050d57" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::m_covSingleVar</definition>
        <argsstring></argsstring>
        <name>m_covSingleVar</name>
        <briefdescription>
<para>Covariance of the gyroscope measurement from configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="54" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1acabca9196f74847f20da7f7454c11869" prot="private" static="no" mutable="no">
        <type>manif::SE3d::Tangent</type>
        <definition>manif::SE3d::Tangent BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::m_accelerometerVelocity</definition>
        <argsstring></argsstring>
        <name>m_accelerometerVelocity</name>
        <briefdescription>
<para>Accelerometer velocity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="56" column="26" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a0d95b291a21712935fe703b622ef4417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::GyroscopeMeasurementDynamics</definition>
        <argsstring>()</argsstring>
        <name>GyroscopeMeasurementDynamics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="62" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a7824edb0b3b15aa2a6e18dd1ffa75ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::~GyroscopeMeasurementDynamics</definition>
        <argsstring>()</argsstring>
        <name>~GyroscopeMeasurementDynamics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="67" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a89334c44c6f08dea8663020d9f42ef25" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; paramHandler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a8c24850ae58c6cdd1d4534e65ca24c7d">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>paramHandler</declname>
        </param>
        <briefdescription>
<para>Initialize the state dynamics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paramHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameters handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="5" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the state contained in the <computeroutput>VariablesHandler</computeroutput> describing the state associated to this dynamics   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>covariance</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Process covariances   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>dynamic_model</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Type of dynamic model describing the state dynamics.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>use_bias</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>boolean</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Boolean saying if the dynamics depends on a bias. False if not specified.   </para>
</entry><entry thead="no" align='center'><para>No   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="82" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1ae6eb978878989961b83885831d2e6648" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::finalize</definition>
        <argsstring>(const System::VariablesHandler &amp;stateVariableHandler) override</argsstring>
        <name>finalize</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a09e7ef24e05c4aaca536cc019810e0c5">finalize</reimplements>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref> &amp;</type>
          <declname>stateVariableHandler</declname>
        </param>
        <briefdescription>
<para>Finalize the <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics" kindref="compound">Dynamics</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stateVariableHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>object describing the variables in the state vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>You should call this method after you add ALL the state dynamics to the state variable handler. </para>
</simplesect>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="91" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a868e63b7edb2c3416613f722ca8d2f12" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::setSubModels</definition>
        <argsstring>(const std::vector&lt; SubModel &gt; &amp;subModelList, const std::vector&lt; std::shared_ptr&lt; KinDynWrapper &gt;&gt; &amp;kinDynWrapperList) override</argsstring>
        <name>setSubModels</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1ad150cc229cc82083a713ed2ba453e82a">setSubModels</reimplements>
        <param>
          <type>const std::vector&lt; <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> &gt; &amp;</type>
          <declname>subModelList</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper" kindref="compound">KinDynWrapper</ref> &gt;&gt; &amp;</type>
          <declname>kinDynWrapperList</declname>
        </param>
        <briefdescription>
<para>Set the <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper" kindref="compound">KinDynWrapper</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>subModelList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> objects </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kinDynWrapperList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of pointers to <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1KinDynWrapper" kindref="compound">KinDynWrapper</ref> objects. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="99" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1ac94fa671ce2b4fcbb999fe448027f2a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::checkStateVariableHandler</definition>
        <argsstring>() override</argsstring>
        <name>checkStateVariableHandler</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a4272a944fe6a88c70a2ec198851ae18c">checkStateVariableHandler</reimplements>
        <briefdescription>
<para>Controls whether the variable handler contains the variables on which the dynamics depend. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case all the dependencies are contained in the variable handler, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="108" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a11ea2b1a7f5e305afea1cced7dd225c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1aafd426248fbbf4a93405b9f4b321d821">update</reimplements>
        <briefdescription>
<para>Update the content of the element. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="114" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a46d021b5133041f9a29575969ad91e17" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::setState</definition>
        <argsstring>(const Eigen::Ref&lt; const Eigen::VectorXd &gt; ukfState) override</argsstring>
        <name>setState</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a3874e314d326424d9f9514e218badb86">setState</reimplements>
        <param>
          <type>const Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>ukfState</declname>
        </param>
        <briefdescription>
<para>Set the state of the ukf needed to update the dynamics of the measurement variable associated to ths object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ukfState</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the ukf state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="121" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a607541a61a5a73d8c0cd6f49c43b2dbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics::setInput</definition>
        <argsstring>(const UKFInput &amp;ukfInput) override</argsstring>
        <name>setInput</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a53c4861a09cd78e7c7548cd46a28b6e3">setInput</reimplements>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1UKFInput" kindref="compound">UKFInput</ref> &amp;</type>
          <declname>ukfInput</declname>
        </param>
        <briefdescription>
<para>Set a <computeroutput><ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1UKFInput" kindref="compound">UKFInput</ref></computeroutput> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ukfInput</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1UKFInput" kindref="compound">UKFInput</ref> struct. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="127" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics" kindref="compound">GyroscopeMeasurementDynamics</ref> class is a concrete implementation of the <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics" kindref="compound">Dynamics</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Please use this element if you want to use the model dynamics of a gyroscope. The <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics" kindref="compound">GyroscopeMeasurementDynamics</ref> represents the following equation in the continuous time: <formula id="249">\[ \omega^{gyroscope} = J \nu = J^{base} v^{base} + J^{joints} \dot{s} \]</formula> where the joint velocity is estimated by the ukf. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BipedalLocomotion::Estimators::RobotDynamicsEstimator::Dynamics</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>BipedalLocomotion::Estimators::RobotDynamicsEstimator::Dynamics</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_description</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::string</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" line="30" column="1" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/GyroscopeMeasurementDynamics.h" bodystart="31" bodyend="129"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1ac94fa671ce2b4fcbb999fe448027f2a3" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>checkStateVariableHandler</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1ae6eb978878989961b83885831d2e6648" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>finalize</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a518aaf5ff8b96345b34fdba009fc2ce5" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>getCovariance</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a1ff246934d62ec52decf6a4df46150c1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>getInitialStateCovariance</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1ac7ad9601f0f1b7f6516e1117e4845ae2" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>getUpdatedVariable</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a0d95b291a21712935fe703b622ef4417" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>GyroscopeMeasurementDynamics</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a89334c44c6f08dea8663020d9f42ef25" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1acabca9196f74847f20da7f7454c11869" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_accelerometerVelocity</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a1f99520c1c3db117473ee113cf77c255" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_bias</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a252cb543b890364753a64bcb48c05f62" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_biasVariableName</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1adda3fb21d2afc618efa3b5da736f8a65" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_covariances</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a1c56d61ecc8a40b01475d3a340050d57" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_covSingleVar</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1acbab99c51da6ecc85731da9e410a943b" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_description</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a9e6979fef7b95d67faf82417e2d1381e" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_elements</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1ac80148fa7320566717a83ca303a40057" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_initialCovariances</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a57fe02624c1ae50c1d839b6ad0e67d8a" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_isInitialized</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a6d882ebdebcfda120b5aeec20e0289e6" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_isSubModelListSet</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1ab51a2db3072f88dbc959cc6e154ef199" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_jointVelocityFullModel</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a5dcb5aff89feb6d295817b013efc701f" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_name</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1ad902ad04911f26984965c58ea1502a29" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_nrOfSubDynamics</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a6f6ab82393f65792c50a2f267e2d2235" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_size</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a8095b9422de1dce39587fe8dfc78220f" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_stateVariableHandler</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a4b672bcc7c161a7ee93913116cb9029e" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_subModelJointVel</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a98c59fa11b143311e5ea39abb922c6ae" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_subModelKinDynList</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a2c4c7e76398161ae566d7ae689b9cb83" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_subModelList</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1ac2093fec3a4b1d6d8aa78a274ce42984" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_subModelWithGyro</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1aa46481efe7f3493df666d440eec67f92" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_ukfInput</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1af79b12fb9a01f2eb05db0c59a639bad9" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_updatedVariable</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a39a613ca2c216fe47a463e07d4d4224f" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>m_useBias</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a607541a61a5a73d8c0cd6f49c43b2dbd" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a46d021b5133041f9a29575969ad91e17" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>setState</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a868e63b7edb2c3416613f722ca8d2f12" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>setSubModels</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a7570b0d3691c7838e5108b13d36196f8" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>size</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a11ea2b1a7f5e305afea1cced7dd225c9" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>update</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1aa21073a31262bbbc161f0f36130e8273" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>~Dynamics</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1GyroscopeMeasurementDynamics_1a7824edb0b3b15aa2a6e18dd1ffa75ab0" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::GyroscopeMeasurementDynamics</scope><name>~GyroscopeMeasurementDynamics</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
