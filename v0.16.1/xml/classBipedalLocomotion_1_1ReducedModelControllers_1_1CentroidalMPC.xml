<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1Source" prot="public" virt="non-virtual">BipedalLocomotion::System::Source&lt; CentroidalMPCOutput &gt;</basecompoundref>
    <includes local="no">BipedalLocomotion/ReducedModelControllers/CentroidalMPC.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1a535ac58d984b521b3280d0fe0e14de8b" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; BipedalLocomotion::ReducedModelControllers::CentroidalMPC::m_pimpl</definition>
        <argsstring></argsstring>
        <name>m_pimpl</name>
        <briefdescription>
<para>Pointer to private implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ReducedModelControllers/CentroidalMPC.h" line="176" column="21" bodyfile="BipedalLocomotion/ReducedModelControllers/CentroidalMPC.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1adcab73d03a8224133ca3cc095af54cdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ReducedModelControllers::CentroidalMPC::CentroidalMPC</definition>
        <argsstring>()</argsstring>
        <name>CentroidalMPC</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ReducedModelControllers/CentroidalMPC.h" line="57" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1af75524466b061f0594e965798606a863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ReducedModelControllers::CentroidalMPC::~CentroidalMPC</definition>
        <argsstring>()</argsstring>
        <name>~CentroidalMPC</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ReducedModelControllers/CentroidalMPC.h" line="62" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1af0f4177a9f28c839e56fe70e977f1daf" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ReducedModelControllers::CentroidalMPC::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; handler) final</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a6db247d3db83217a16e963d01f6bcb77">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize the controller. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameter handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="15" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>sampling_time</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Sampling time of the MPC.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>time_horizon</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>The time horizon of the MPC. The number of knots will be given by <computeroutput>floor(time_horizon / sampling_time)</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>number_of_maximum_contacts</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>int</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Integer representing the maximum number of contacts that can be established. For a bipedal is in general 2 (the feet) for a quadruped 4.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>com_weight</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector&lt;double&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Weight of the CoM in the cost function. The Vector must contain three elements that will correspond to the weight in the x y and z coordinates.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>contact_position_weight</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Weight related to the contact position regularization provided by the <ref refid="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1a2fce2bf43ea7b309cd3a31a20bfaf8ce" kindref="member">CentroidalMPC::setContactPhaseList</ref>   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>force_rate_of_change_weight</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector&lt;double&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Weight associated to the rate of change of the contact forces. The higher the weight, the more the contact forces will be smooth.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>angular_momentum_weight</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Weight associated to the angular momentum. The higher the weight, the more the angular momentum will follow the desired one.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>contact_force_symmetry_weight</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Weight associated to the symmetry of the contact forces. The higher the weight, the more the contact forces associated to the same contact will be symmetric   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>linear_solver</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Linear solver used by ipopt. Please check <ulink url="https://coin-or.github.io/Ipopt/#PREREQUISITES">https://coin-or.github.io/Ipopt/#PREREQUISITES</ulink> for the available solvers (default <computeroutput>mumps</computeroutput>).   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>ipopt_tolerance</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Determines the convergence tolerance for the algorithm (default value is <formula id="35">$10^{-8}$</formula> (<ulink url="https://coin-or.github.io/Ipopt/OPTIONS.html#OPT_tol">https://coin-or.github.io/Ipopt/OPTIONS.html#OPT_tol</ulink>).   </para>
</entry><entry thead="no" align='center'><para>No    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>ipopt_max_iteration</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>int</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>The maximum number of iterations of ipopt (The default value is 3000).   </para>
</entry><entry thead="no" align='center'><para>No    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>solver_verbosity</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>int</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Verbosity of the solver. The higher the value, the higher the verbosity (Default value is <computeroutput>0</computeroutput>)   </para>
</entry><entry thead="no" align='center'><para>No    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>is_warm_start_enabled</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>bool</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>True if the user wants to warm start the CoM, angular momentum, and contact location with the nominal value (Default <computeroutput>false</computeroutput>)   </para>
</entry><entry thead="no" align='center'><para>No    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>is_cse_enabled</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>bool</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>True if the Common subexpression elimination casadi option is enabled. This option is supported only by casadi 3.6.0 <ulink url="https://github.com/casadi/casadi/releases/tag/3.6.3">https://github.com/casadi/casadi/releases/tag/3.6.3</ulink> (Default <computeroutput>false</computeroutput> )   </para>
</entry><entry thead="no" align='center'><para>No   </para>
</entry></row>
</table>
</para>
</simplesect>
Moreover for each contact <formula id="36">$i$</formula> where <formula id="37">$ 0 \le i \le $</formula> <computeroutput>number_of_maximum_contacts-1</computeroutput> it is required to define a group <computeroutput>CONTACT_&lt;i&gt;</computeroutput> that contains the following parameters <table rows="6" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>contact_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name associated to the contact.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>bounding_box_upper_limit</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector&lt;double&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Upper limit of the bounding box where the adjusted contact must belong to. The limits are expressed in the contact local frame.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>bounding_box_lower_limit</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector&lt;double&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Lower limit of the bounding box where the adjusted contact must belong to. The limits are expressed in the contact local frame.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>number_of_corners</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>int</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Number of corners associated to the foot.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>corner_&lt;j&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector&lt;double&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Position of the corner expressed in the foot frame. I must be from 0 to number_of_corners - 1.   </para>
</entry><entry thead="no" align='center'><para>Yes   </para>
</entry></row>
</table>
<simplesect kind="return"><para>true in case of success/false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ReducedModelControllers/CentroidalMPC.h" line="96" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1a2fce2bf43ea7b309cd3a31a20bfaf8ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ReducedModelControllers::CentroidalMPC::setContactPhaseList</definition>
        <argsstring>(const Contacts::ContactPhaseList &amp;contactPhaseList)</argsstring>
        <name>setContactPhaseList</name>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1Contacts_1_1ContactPhaseList" kindref="compound">Contacts::ContactPhaseList</ref> &amp;</type>
          <declname>contactPhaseList</declname>
        </param>
        <briefdescription>
<para>Set the contact phase list considered by the controller as nominal contact location. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>contactPhaseList</parametername>
</parameternamelist>
<parameterdescription>
<para>contact phase. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>This function needs to be called before advance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ReducedModelControllers/CentroidalMPC.h" line="105" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1af2b0c915edf393922a59032671900760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ReducedModelControllers::CentroidalMPC::setState</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::Vector3d &gt; com, Eigen::Ref&lt; const Eigen::Vector3d &gt; dcom, Eigen::Ref&lt; const Eigen::Vector3d &gt; angularMomentum)</argsstring>
        <name>setState</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::Vector3d &gt;</type>
          <declname>com</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; const Eigen::Vector3d &gt;</type>
          <declname>dcom</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; const Eigen::Vector3d &gt;</type>
          <declname>angularMomentum</declname>
        </param>
        <briefdescription>
<para>Set the state of the centroidal dynamics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>com</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the CoM expressed in the inertial frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dcom</parametername>
</parameternamelist>
<parameterdescription>
<para>velocity of the CoM expressed in a frame centered in the CoM and oriented as the inertial frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angularMomentum</parametername>
</parameternamelist>
<parameterdescription>
<para>centroidal angular momentum. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>This function needs to be called before advance. </para>
</simplesect>
<simplesect kind="note"><para>The external wrench is assumed to be zero. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ReducedModelControllers/CentroidalMPC.h" line="117" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1ae934d8090b0fd0e758c1e99039384569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ReducedModelControllers::CentroidalMPC::setState</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::Vector3d &gt; com, Eigen::Ref&lt; const Eigen::Vector3d &gt; dcom, Eigen::Ref&lt; const Eigen::Vector3d &gt; angularMomentum, const Math::Wrenchd &amp;externalWrench)</argsstring>
        <name>setState</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::Vector3d &gt;</type>
          <declname>com</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; const Eigen::Vector3d &gt;</type>
          <declname>dcom</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; const Eigen::Vector3d &gt;</type>
          <declname>angularMomentum</declname>
        </param>
        <param>
          <type>const <ref refid="Wrench_8h_1a45559f66740448bbc8253a9816dbef05" kindref="member">Math::Wrenchd</ref> &amp;</type>
          <declname>externalWrench</declname>
        </param>
        <briefdescription>
<para>Set the state of the centroidal dynamics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>com</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the CoM expressed in the inertial frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dcom</parametername>
</parameternamelist>
<parameterdescription>
<para>velocity of the CoM expressed in a frame centered in the CoM and oriented as the inertial frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angularMomentum</parametername>
</parameternamelist>
<parameterdescription>
<para>centroidal angular momentum. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>externalWrench</parametername>
</parameternamelist>
<parameterdescription>
<para>optional parameter used to represent an external wrench applied to the robot CoM. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>This function needs to be called before advance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ReducedModelControllers/CentroidalMPC.h" line="132" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1a7d5769df43fe3e67f66a6609b8a1dac6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ReducedModelControllers::CentroidalMPC::setReferenceTrajectory</definition>
        <argsstring>(const std::vector&lt; Eigen::Vector3d &gt; &amp;com, const std::vector&lt; Eigen::Vector3d &gt; &amp;angularMomentum)</argsstring>
        <name>setReferenceTrajectory</name>
        <param>
          <type>const std::vector&lt; Eigen::Vector3d &gt; &amp;</type>
          <declname>com</declname>
        </param>
        <param>
          <type>const std::vector&lt; Eigen::Vector3d &gt; &amp;</type>
          <declname>angularMomentum</declname>
        </param>
        <briefdescription>
<para>Set the reference trajectories for the CoM and the centroidal angular momentum. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>com</parametername>
</parameternamelist>
<parameterdescription>
<para>desired trajectory of the CoM. The rows contain the x, y and z coordinates while the columns the position at each time instant. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angularMomentum</parametername>
</parameternamelist>
<parameterdescription>
<para>centroidal angular momentum. The rows contain the x, y and z coordinates while the columns the trajectory at each time instant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>In case the warmstart has been enabled in the initialization, then the CoM and the angular momentum will be used to warmstart the problem. </para>
</simplesect>
<simplesect kind="warning"><para>The CoM and the angular momentum trajectory is assumed to be sampled at the controller sampling period </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ReducedModelControllers/CentroidalMPC.h" line="149" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1a7462bc4a06678c8029ccd692cb48eea9" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>const <ref refid="structBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPCOutput" kindref="compound">CentroidalMPCOutput</ref> &amp;</type>
        <definition>const CentroidalMPCOutput&amp; BipedalLocomotion::ReducedModelControllers::CentroidalMPC::getOutput</definition>
        <argsstring>() const final</argsstring>
        <name>getOutput</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a8c089ecf2dd8ff0fb2732233994b6cac">getOutput</reimplements>
        <briefdescription>
<para>Get the output of the controller. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a const reference of the output of the controller. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ReducedModelControllers/CentroidalMPC.h" line="156" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1a053ae0d2488c8c09826f12b15afad527" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ReducedModelControllers::CentroidalMPC::isOutputValid</definition>
        <argsstring>() const final</argsstring>
        <name>isOutputValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ac50de29a6160baa2bba195af9d69430a">isOutputValid</reimplements>
        <briefdescription>
<para>Determines the validity of the object retrieved with <ref refid="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1a7462bc4a06678c8029ccd692cb48eea9" kindref="member">getOutput()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the object is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ReducedModelControllers/CentroidalMPC.h" line="162" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1a769ca3af8290ee3a847226534013153b" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ReducedModelControllers::CentroidalMPC::advance</definition>
        <argsstring>() final</argsstring>
        <name>advance</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a67107e46e831d93f572558b541aab6d2">advance</reimplements>
        <briefdescription>
<para>Perform one control cycle. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the advance is successfull. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ReducedModelControllers/CentroidalMPC.h" line="168" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC" kindref="compound">CentroidalMPC</ref> implements a Non-Linear Model Predictive Controller for humanoid robot locomotion with online step adjustment capabilities. </para>
    </briefdescription>
    <detaileddescription>
<para>The proposed controller considers the Centroidal Dynamics of the system to compute the desired contact forces and torques and contact locations. Let us assume the presence of a high-level contact planner that generates only the contact location and timings, the <ref refid="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC" kindref="compound">CentroidalMPC</ref> objective is to implement a control law that generates feasible contact wrenches and locations while considering the Centroidal dynamics of the floating base system, and a nominal set of contact positions and timings. The control problem is formulated using the Model Predictive Control (MPC) framework. <simplesect kind="note"><para>This class implements the work presented in G. Romualdi, S. Dafarra, G. L&apos;Erario, I. Sorrentino, S. Traversaro and D. Pucci, &quot;Online Non-linear Centroidal MPC for Humanoid Robot
Locomotion with Step Adjustment,&quot; 2022 International Conference on Robotics and Automation (ICRA), Philadelphia, PA, USA, 2022, pp. 10412-10419, doi: 10.1109/ICRA46639.2022.9811670. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Source&lt; CentroidalMPCOutput &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; CentroidalMPCOutput &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</label>
        <link refid="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Source&lt; CentroidalMPCOutput &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; CentroidalMPCOutput &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</label>
        <link refid="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/ReducedModelControllers/CentroidalMPC.h" line="51" column="1" bodyfile="BipedalLocomotion/ReducedModelControllers/CentroidalMPC.h" bodystart="52" bodyend="177"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1a769ca3af8290ee3a847226534013153b" prot="public" virt="virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a09ee5b41c77c6b626f4d5cb775065325" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1aaeb3eba3073fbc844dea1eba4c9b68f3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ac1549cb26bd896e27370e97b0795ba3f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1adcab73d03a8224133ca3cc095af54cdb" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>CentroidalMPC</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a618ab786bb43814b3b3012b843fce93b" prot="public" virt="virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>close</name></member>
      <member refid="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1a7462bc4a06678c8029ccd692cb48eea9" prot="public" virt="virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>getOutput</name></member>
      <member refid="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1af0f4177a9f28c839e56fe70e977f1daf" prot="public" virt="virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a975a7ecbf38c917c7b72519581fc7dba" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a27c614cb30c1e4b78e64791f4919dfa7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a74d1418613e89a7f2993ea936228a44a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a02ec5c947f1d2d83d2952c3b899cc58f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1a053ae0d2488c8c09826f12b15afad527" prot="public" virt="virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>isOutputValid</name></member>
      <member refid="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1a535ac58d984b521b3280d0fe0e14de8b" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>m_pimpl</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1a922e6eec2f74620c49f9fcd1ddf709ae" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1ad63e64dcad4c269263ecd20b2c81352b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ae147cdee9ff9160a9dfe0d3e349a9aad" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::Advanceable::"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1adf0d9fc07bab0ec5d4db7f3a35816bf2" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::Advanceable::"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a54f476d3c8d6d003fb714309ea6272aa" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1adb341b37472241b6da8b552166308d7b" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1af5e15f5e4962a5c8e0f0c0a49adb9ca1" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ad5c6ce3ad7d2a064d7bb512fe0bc489e" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a69603f2c9c608815908425b5b8c2005c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>Output</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a7c0d15e677a1935918fc747ba4c25ec1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a0a39b891749961d34507b4b591886741" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a581340f280eca1890a8a7b2331761b57" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1a2fce2bf43ea7b309cd3a31a20bfaf8ce" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>setContactPhaseList</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1a472624c76d5e02e8ae16991cd77016ce" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ad2637be5c9075a2d8f09fedc6a42d808" prot="public" virt="pure-virtual" ambiguityscope="BipedalLocomotion::System::Advanceable::"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1a7d5769df43fe3e67f66a6609b8a1dac6" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>setReferenceTrajectory</name></member>
      <member refid="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1af2b0c915edf393922a59032671900760" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>setState</name></member>
      <member refid="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1ae934d8090b0fd0e758c1e99039384569" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>setState</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1aa6af70cc2e04e6a7e011af3d968b3b4b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>Source</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1a1c126531af21d485f09f297cb162c30a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>Source</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1af0cf2abdf10e6594372a0b062fe4a8af" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>Source</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1afae1137cba829874bab4a1d25d559896" prot="public" virt="virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>~Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1ReducedModelControllers_1_1CentroidalMPC_1af75524466b061f0594e965798606a863" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>~CentroidalMPC</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ac9b58b0d2f6ae8821b873ed6f9817ccb" prot="public" virt="virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>~InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1adcc49c38152c9204dcab4f8e87f68977" prot="public" virt="virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>~OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1acf12427433027de27b18e6e70ba0cae8" prot="public" virt="virtual"><scope>BipedalLocomotion::ReducedModelControllers::CentroidalMPC</scope><name>~Source</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
