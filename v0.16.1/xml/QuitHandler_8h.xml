<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="QuitHandler_8h" kind="file" language="C++">
    <compoundname>QuitHandler.h</compoundname>
    <includes local="no">functional</includes>
    <incdepgraph>
      <node id="2">
        <label>functional</label>
      </node>
      <node id="1">
        <label>BipedalLocomotion/System/QuitHandler.h</label>
        <link refid="QuitHandler_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceBipedalLocomotion">BipedalLocomotion</innernamespace>
    <innernamespace refid="namespaceBipedalLocomotion_1_1System">BipedalLocomotion::System</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="QuitHandler_8h_1a2e69b33ec2397a9c294c5d5ebbe79e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::System::handleQuitSignals</definition>
        <argsstring>(std::function&lt; void()&gt; customHandler=std::function&lt; void()&gt;())</argsstring>
        <name>handleQuitSignals</name>
        <param>
          <type>std::function&lt; void()&gt;</type>
          <declname>customHandler</declname>
          <defval>std::function&lt; void()&gt;()</defval>
        </param>
        <briefdescription>
<para>handleQuitSignals should be called if you want to call a function when ctrl-c event is detected. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>customHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>function that will be called when ctrl-c event is detected </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Please check the following example if you want to use the function <programlisting filename=".cpp"><codeline><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="QuitHandler_8h" kindref="compound">BipedalLocomotion/System/QuitHandler.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>ctrl-c<sp/>event<sp/>is<sp/>called<sp/>the<sp/>application<sp/>will<sp/>print<sp/>&quot;Closing...&quot;<sp/>in<sp/>the<sp/>terminal.</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="QuitHandler_8h_1a2e69b33ec2397a9c294c5d5ebbe79e3c" kindref="member">BipedalLocomotion::System::handleQuitSignals</ref>([](){std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Closing...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;});</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::this_thread::sleep_for(std::chrono::milliseconds(100));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
</simplesect>
<simplesect kind="note"><para>The original implementation can be found here: <ulink url="https://github.com/robotology/idyntree-yarp-tools/blob/main/src/lib/Utilities/Utilities.h">https://github.com/robotology/idyntree-yarp-tools/blob/main/src/lib/Utilities/Utilities.h</ulink> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/QuitHandler.h" line="44" column="6" declfile="BipedalLocomotion/System/QuitHandler.h" declline="44" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="authors"><para>Stefano Dafarra, Giulio Romualdi </para>
</simplesect>
<simplesect kind="copyright"><para>2021 Istituto Italiano di Tecnologia (IIT). This software may be modified and distributed under the terms of the BSD-3-Clause license. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="BipedalLocomotion/System/QuitHandler.h"/>
  </compounddef>
</doxygen>
