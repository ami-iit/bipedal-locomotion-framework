<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1TSID_1_1SO3Task" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::TSID::SO3Task</compoundname>
    <basecompoundref refid="structBipedalLocomotion_1_1TSID_1_1TSIDLinearTask" prot="public" virt="non-virtual">BipedalLocomotion::TSID::TSIDLinearTask</basecompoundref>
    <includes local="no">BipedalLocomotion/TSID/SO3Task.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1SO3Task_1add9230aa4314eeadae242a9b4f26baf4" prot="private" static="no" mutable="no">
        <type>LieGroupControllers::ProportionalDerivativeControllerSO3d</type>
        <definition>LieGroupControllers::ProportionalDerivativeControllerSO3d BipedalLocomotion::TSID::SO3Task::m_SO3Controller</definition>
        <argsstring></argsstring>
        <name>m_SO3Controller</name>
        <briefdescription>
<para>PD Controller in SO(3) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/SO3Task.h" line="42" column="63" bodyfile="BipedalLocomotion/TSID/SO3Task.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a2dc271ea6396f7d3fc2c15a051950fb3" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler_1_1VariableDescription" kindref="compound">System::VariablesHandler::VariableDescription</ref></type>
        <definition>System::VariablesHandler::VariableDescription BipedalLocomotion::TSID::SO3Task::m_robotAccelerationVariable</definition>
        <argsstring></argsstring>
        <name>m_robotAccelerationVariable</name>
        <briefdescription>
<para>Variable describing the robot acceleration (base + joint) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/SO3Task.h" line="45" column="51" bodyfile="BipedalLocomotion/TSID/SO3Task.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a8a450ce3bbb07cc665affa88cd45a3aa" prot="private" static="no" mutable="no">
        <type>iDynTree::FrameIndex</type>
        <definition>iDynTree::FrameIndex BipedalLocomotion::TSID::SO3Task::m_frameIndex</definition>
        <argsstring></argsstring>
        <name>m_frameIndex</name>
        <briefdescription>
<para>Frame controlled by the task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/SO3Task.h" line="50" column="26" bodyfile="BipedalLocomotion/TSID/SO3Task.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1SO3Task_1aff663ee6832d22c831e7f3ce40093329" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::SO3Task::m_isInitialized</definition>
        <argsstring></argsstring>
        <name>m_isInitialized</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the task has been initialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/SO3Task.h" line="55" column="10" bodyfile="BipedalLocomotion/TSID/SO3Task.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a92d4c751b74ce3ba88ec7ea097a950cd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::SO3Task::m_isValid</definition>
        <argsstring></argsstring>
        <name>m_isValid</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the task is valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/SO3Task.h" line="56" column="10" bodyfile="BipedalLocomotion/TSID/SO3Task.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1SO3Task_1af081a9dbf55dfb0a3f013b2a0ba7eeb6" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; iDynTree::KinDynComputations &gt;</type>
        <definition>std::shared_ptr&lt;iDynTree::KinDynComputations&gt; BipedalLocomotion::TSID::SO3Task::m_kinDyn</definition>
        <argsstring></argsstring>
        <name>m_kinDyn</name>
        <briefdescription>
<para>Pointer to a KinDynComputations object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/SO3Task.h" line="58" column="21" bodyfile="BipedalLocomotion/TSID/SO3Task.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1SO3Task_1af00d3b01eb1cf55e33004ab9dbc4bef0" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd BipedalLocomotion::TSID::SO3Task::m_jacobian</definition>
        <argsstring></argsstring>
        <name>m_jacobian</name>
        <briefdescription>
<para>Jacobian of the frame expressed in mixed representation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/SO3Task.h" line="61" column="21" bodyfile="BipedalLocomotion/TSID/SO3Task.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1SO3Task_1acbc1f6e7e0ca02580424cffcb5b4e06a" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t BipedalLocomotion::TSID::SO3Task::m_angularVelocitySize</definition>
        <argsstring></argsstring>
        <name>m_angularVelocitySize</name>
        <initializer>{3}</initializer>
        <briefdescription>
<para>Size of the angular velocity vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/SO3Task.h" line="52" column="34" bodyfile="BipedalLocomotion/TSID/SO3Task.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a72c456b80feecbe6368b386fc561fb4d" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t BipedalLocomotion::TSID::SO3Task::m_spatialVelocitySize</definition>
        <argsstring></argsstring>
        <name>m_spatialVelocitySize</name>
        <initializer>{6}</initializer>
        <briefdescription>
<para>Size of the spatial velocity vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/SO3Task.h" line="53" column="34" bodyfile="BipedalLocomotion/TSID/SO3Task.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a562a6c8534d91c24166ce5077415e619" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::SO3Task::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; paramHandler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ae8bd038ace5d8bccda37b62c5712f22b">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>paramHandler</declname>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="classBipedalLocomotion_1_1TSID_1_1SO3Task" kindref="compound">SO3Task</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paramHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameters handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="5" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>robot_acceleration_variable_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the variable contained in <computeroutput>VariablesHandler</computeroutput> describing the robot acceleration   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>frame_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the frame controlled by the <ref refid="classBipedalLocomotion_1_1TSID_1_1SO3Task" kindref="compound">SO3Task</ref>   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>kp_angular</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput> or <computeroutput>vector&lt;double&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Gain of the orientation controller   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>kd_angular</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput> or <computeroutput>vector&lt;double&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Gain of the angular velocity controller   </para>
</entry><entry thead="no" align='center'><para>Yes   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/SO3Task.h" line="76" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a8524387ecc72645235f5dfb5f8d70059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::SO3Task::setKinDyn</definition>
        <argsstring>(std::shared_ptr&lt; iDynTree::KinDynComputations &gt; kinDyn)</argsstring>
        <name>setKinDyn</name>
        <param>
          <type>std::shared_ptr&lt; iDynTree::KinDynComputations &gt;</type>
          <declname>kinDyn</declname>
        </param>
        <briefdescription>
<para>Set the kinDynComputations object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kinDyn</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a kinDynComputations object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/SO3Task.h" line="83" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a054c0ac60226444020aee0eabf50d458" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::SO3Task::setVariablesHandler</definition>
        <argsstring>(const System::VariablesHandler &amp;variablesHandler) override</argsstring>
        <name>setVariablesHandler</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a898c2f93e48aeeb41e29d17c17b95437">setVariablesHandler</reimplements>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref> &amp;</type>
          <declname>variablesHandler</declname>
        </param>
        <briefdescription>
<para>Set the set of variables required by the task. </para>
        </briefdescription>
        <detaileddescription>
<para>The variables are stored in the <ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variablesHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to a variables handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The handler must contain a variable named as the parameter <computeroutput>robot_acceleration_variable_name</computeroutput> stored in the parameter handler. The variable represents the generalized acceleration of the robot, where the generalized robot acceleration is a vector containing the base spatial-acceleration (expressed in mixed representation) and the joints acceleration. </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/SO3Task.h" line="96" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a27b500bc5211c31f4d881629b29ec273" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::SO3Task::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1accd4ab19a7e8738abe53b485d8acbf1c">update</reimplements>
        <briefdescription>
<para>Update the content of the element. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/SO3Task.h" line="102" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1SO3Task_1ad30433ca6999d030acd8269f53b17b58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::SO3Task::setSetPoint</definition>
        <argsstring>(const manif::SO3d &amp;I_R_F, const manif::SO3d::Tangent &amp;angularVelocity, const manif::SO3d::Tangent &amp;angularAcceleration)</argsstring>
        <name>setSetPoint</name>
        <param>
          <type>const manif::SO3d &amp;</type>
          <declname>I_R_F</declname>
        </param>
        <param>
          <type>const manif::SO3d::Tangent &amp;</type>
          <declname>angularVelocity</declname>
        </param>
        <param>
          <type>const manif::SO3d::Tangent &amp;</type>
          <declname>angularAcceleration</declname>
        </param>
        <briefdescription>
<para>Set the desired reference point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>I_R_F</parametername>
</parameternamelist>
<parameterdescription>
<para>Rotation between the link and the inertial frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angularVelocity</parametername>
</parameternamelist>
<parameterdescription>
<para>angular velocity of the frame F wr.t. the inertial frame expressed in the inertial frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>angularAcceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>angular acceleration of the frame F wr.t. the inertial frame expressed in the inertial frame. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/SO3Task.h" line="113" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a08f028e5b1f82bc76dd2e452a01e81d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::size_t</type>
        <definition>std::size_t BipedalLocomotion::TSID::SO3Task::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a34621cd88c6d60909f09e95226f2cd67">size</reimplements>
        <briefdescription>
<para>Get the size of the task. </para>
        </briefdescription>
        <detaileddescription>
<para>(I.e the number of rows of the vector b) <simplesect kind="return"><para>the size of the task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/SO3Task.h" line="121" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a0311543cce4e4d11961121cac9b8e8ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2f9d37ec58342f227021c12a4a539748" kindref="member">Type</ref></type>
        <definition>Type BipedalLocomotion::TSID::SO3Task::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ac20d8e993c66663b61f587d9642f3e8a">type</reimplements>
        <briefdescription>
<para>The <ref refid="classBipedalLocomotion_1_1TSID_1_1SO3Task" kindref="compound">SO3Task</ref> is an equality task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the type of the task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/SO3Task.h" line="127" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a9e7068154cfa6f90f6755caf51fe64fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::SO3Task::isValid</definition>
        <argsstring>() const override</argsstring>
        <name>isValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2566bae7a097d11b420b89cdd3f2002f">isValid</reimplements>
        <briefdescription>
<para>Determines the validity of the objects retrieved with <ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad510fff46eb9cbbc65775b1a9490e297" kindref="member">getA()</ref> and <ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a8c65780b85d3927038c3320d3cfca730" kindref="member">getB()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the objects are valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/SO3Task.h" line="133" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1TSID_1_1SO3Task" kindref="compound">SO3Task</ref> is a concrete implementation of the <ref refid="structBipedalLocomotion_1_1TSID_1_1TSIDLinearTask" kindref="compound">TSIDLinearTask</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Please use this element if you want to control the orientation of a given frame rigidly attached to the robot. The task assumes perfect control of the robot acceleration <formula id="157">$\dot{\nu}$</formula> that contains the base linear and angular acceleration expressed in mixed representation and the joints acceleration. The task represents the following equation <formula id="230">\[ J \dot{\nu} + \dot{J} \nu = \dot{\mathrm{v}} ^ * \]</formula> where <formula id="98">$J$</formula> is the robot jacobian and <formula id="231">$\dot{\mathrm{v}} ^ *$</formula> is the desired acceleration. The desired acceleration is chosen such that the frame orientation will asymptotically converge to the desired trajectory. The angular acceleration is computed by a PD controller in <formula id="101">$SO(3)$</formula>. <simplesect kind="note"><para>Please refer to <ulink url="https://github.com/ami-iit/lie-group-controllers">https://github.com/ami-iit/lie-group-controllers</ulink> if you are interested in the implementation of the PD controllers. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BipedalLocomotion::TSID::TSIDLinearTask</label>
        <link refid="structBipedalLocomotion_1_1TSID_1_1TSIDLinearTask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::TSID::SO3Task</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1SO3Task"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::LinearTask</label>
        <link refid="classBipedalLocomotion_1_1System_1_1LinearTask"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>BipedalLocomotion::TSID::TSIDLinearTask</label>
        <link refid="structBipedalLocomotion_1_1TSID_1_1TSIDLinearTask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::TSID::SO3Task</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1SO3Task"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::LinearTask</label>
        <link refid="classBipedalLocomotion_1_1System_1_1LinearTask"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_description</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/TSID/SO3Task.h" line="40" column="1" bodyfile="BipedalLocomotion/TSID/SO3Task.h" bodystart="41" bodyend="134"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad510fff46eb9cbbc65775b1a9490e297" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>getA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a8c65780b85d3927038c3320d3cfca730" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>getB</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a1d152be26f750d933bc07baf1344e97d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>getDescription</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a591be3a0f92c9e1c40ccadf85c21f739" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>getResidual</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a562a6c8534d91c24166ce5077415e619" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a9e7068154cfa6f90f6755caf51fe64fe" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>isValid</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1aa95f6768b7cd98aab6727e2eb729a308" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>m_A</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1SO3Task_1acbc1f6e7e0ca02580424cffcb5b4e06a" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>m_angularVelocitySize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a0e86b8ecde78a0d6e87fcb2c373b2151" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>m_b</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a5efff74f1d43a59376a9c93a0400120a" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>m_description</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a8a450ce3bbb07cc665affa88cd45a3aa" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>m_frameIndex</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1SO3Task_1aff663ee6832d22c831e7f3ce40093329" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>m_isInitialized</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a92d4c751b74ce3ba88ec7ea097a950cd" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>m_isValid</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1SO3Task_1af00d3b01eb1cf55e33004ab9dbc4bef0" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>m_jacobian</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1SO3Task_1af081a9dbf55dfb0a3f013b2a0ba7eeb6" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>m_kinDyn</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a2dc271ea6396f7d3fc2c15a051950fb3" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>m_robotAccelerationVariable</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1SO3Task_1add9230aa4314eeadae242a9b4f26baf4" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>m_SO3Controller</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a72c456b80feecbe6368b386fc561fb4d" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>m_spatialVelocitySize</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a8524387ecc72645235f5dfb5f8d70059" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>setKinDyn</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1SO3Task_1ad30433ca6999d030acd8269f53b17b58" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>setSetPoint</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a054c0ac60226444020aee0eabf50d458" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>setVariablesHandler</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a08f028e5b1f82bc76dd2e452a01e81d3" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>size</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a06fab6bb77dd556a74c76b6e57dc0ba1" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>subA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad6a0743b7902e539d634358b269741b4" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>subA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2f9d37ec58342f227021c12a4a539748" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>Type</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a0311543cce4e4d11961121cac9b8e8ac" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>type</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1SO3Task_1a27b500bc5211c31f4d881629b29ec273" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>update</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a22edf322e7504d1a197b687d265445d7" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>~LinearTask</name></member>
      <member refid="structBipedalLocomotion_1_1TSID_1_1TSIDLinearTask_1a7ba94cb320d7b4c367ed01c14ef29d73" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::SO3Task</scope><name>~TSIDLinearTask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
