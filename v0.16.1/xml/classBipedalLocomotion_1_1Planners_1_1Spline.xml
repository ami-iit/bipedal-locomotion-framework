<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Planners_1_1Spline" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>BipedalLocomotion::Planners::Spline</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1Source" prot="public" virt="non-virtual">BipedalLocomotion::System::Source&lt; SplineState &gt;</basecompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1Planners_1_1CubicSpline" prot="public" virt="non-virtual">BipedalLocomotion::Planners::CubicSpline</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline" prot="public" virt="non-virtual">BipedalLocomotion::Planners::QuinticSpline</derivedcompoundref>
    <includes local="no">BipedalLocomotion/Planners/Spline.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1Spline_1ac8126ebdc66359175dac9597c3bd1830" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual BipedalLocomotion::Planners::Spline::~Spline</definition>
        <argsstring>()=default</argsstring>
        <name>~Spline</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/Spline.h" line="40" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1Spline_1a248e4fa5abcb7d4530baa9bb8ca20a90" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Planners::Spline::setAdvanceTimeStep</definition>
        <argsstring>(const std::chrono::nanoseconds &amp;dt)=0</argsstring>
        <name>setAdvanceTimeStep</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1CubicSpline_1a6c988b07cd8c38cce071c07f2625ff9f">setAdvanceTimeStep</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a239eb416aad7775dadb9c6ca85188759">setAdvanceTimeStep</reimplementedby>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Set the time step of the advance interface. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>if the the time step is not set the user cannot use the advance features. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dt</parametername>
</parameternamelist>
<parameterdescription>
<para>the time step of the advance block. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/Spline.h" line="48" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1Spline_1ad7e193a8a3416130f9546f7dff47be41" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Planners::Spline::setKnots</definition>
        <argsstring>(const std::vector&lt; Eigen::VectorXd &gt; &amp;position, const std::vector&lt; std::chrono::nanoseconds &gt; &amp;time)=0</argsstring>
        <name>setKnots</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1CubicSpline_1aacd3caaf95c23581662af37e630cb0da">setKnots</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a799e942684607bd6350e1af6a260d117">setKnots</reimplementedby>
        <param>
          <type>const std::vector&lt; Eigen::VectorXd &gt; &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::chrono::nanoseconds &gt; &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Set the knots of the spline. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the knots in $f\mathbb{R}^n$f. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>vector containing the time instant of the knots. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/Spline.h" line="56" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1Spline_1a2551f619b85dfd0f728e9b03cf789f8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Planners::Spline::setInitialConditions</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; velocity, Eigen::Ref&lt; const Eigen::VectorXd &gt; acceleration)=0</argsstring>
        <name>setInitialConditions</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1CubicSpline_1a3ffc62e16b2197e769d0fcbea22300f6">setInitialConditions</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a855f70765cc5897ab037dc5e32321336">setInitialConditions</reimplementedby>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>acceleration</declname>
        </param>
        <briefdescription>
<para>Set the initial condition of the spline. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>initial velocity (i.e. first derivative). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>initial acceleration (i.e. second derivative). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/Spline.h" line="66" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1Spline_1a65f6e6d2c5294b562c9aa8e491acd1ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Planners::Spline::setFinalConditions</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; velocity, Eigen::Ref&lt; const Eigen::VectorXd &gt; acceleration)=0</argsstring>
        <name>setFinalConditions</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1CubicSpline_1ae4c21ccbd97d190d54cd9aafc7df2109">setFinalConditions</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a2d51cc453148c20f5e614a24d981fd12">setFinalConditions</reimplementedby>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>acceleration</declname>
        </param>
        <briefdescription>
<para>Set the final condition of the spline. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>final velocity (i.e. first derivative). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>final acceleration (i.e. second derivative). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/Spline.h" line="76" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1Spline_1aabd0871236edf2d8db86a4fba7454e2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Planners::Spline::evaluatePoint</definition>
        <argsstring>(const std::chrono::nanoseconds &amp;t, Eigen::Ref&lt; Eigen::VectorXd &gt; position, Eigen::Ref&lt; Eigen::VectorXd &gt; velocity, Eigen::Ref&lt; Eigen::VectorXd &gt; acceleration)=0</argsstring>
        <name>evaluatePoint</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1CubicSpline_1a9cef867a04d379368454f8a2313b2219">evaluatePoint</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1a00c17e2178d71fefbbe379e1566a9138">evaluatePoint</reimplementedby>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; Eigen::VectorXd &gt;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; Eigen::VectorXd &gt;</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; Eigen::VectorXd &gt;</type>
          <declname>acceleration</declname>
        </param>
        <briefdescription>
<para>Evaluate the spline at a given point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>instant time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>position at time t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>velocity at time t </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>acceleration at time t </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/Spline.h" line="88" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Planners_1_1Spline_1affa6da8e66f27c6f43bea9d9e694724b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Planners::Spline::evaluatePoint</definition>
        <argsstring>(const std::chrono::nanoseconds &amp;t, SplineState &amp;state)=0</argsstring>
        <name>evaluatePoint</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1CubicSpline_1ab4dc6d518863a1ce552a92f3886aa783">evaluatePoint</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline_1ab6de236c8835ae9dea3ef09d0249a835">evaluatePoint</reimplementedby>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="structBipedalLocomotion_1_1Planners_1_1SplineState" kindref="compound">SplineState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Evaluate the spline at a given point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>instant time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>of the system </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Planners/Spline.h" line="100" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>spline implement an interface for a <ref refid="classBipedalLocomotion_1_1Planners_1_1Spline" kindref="compound">Spline</ref> in <formula id="91">$\mathbb{R}^n$</formula> </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="9">
        <label>BipedalLocomotion::Planners::QuinticSpline</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1QuinticSpline"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>BipedalLocomotion::Planners::CubicSpline</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1CubicSpline"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Planners::Spline</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1Spline"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Source&lt; SplineState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; SplineState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Planners::Spline</label>
        <link refid="classBipedalLocomotion_1_1Planners_1_1Spline"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Source&lt; SplineState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; SplineState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/Planners/Spline.h" line="34" column="1" bodyfile="BipedalLocomotion/Planners/Spline.h" bodystart="35" bodyend="101"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a67107e46e831d93f572558b541aab6d2" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a09ee5b41c77c6b626f4d5cb775065325" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1aaeb3eba3073fbc844dea1eba4c9b68f3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ac1549cb26bd896e27370e97b0795ba3f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a618ab786bb43814b3b3012b843fce93b" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>close</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1Spline_1aabd0871236edf2d8db86a4fba7454e2a" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>evaluatePoint</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1Spline_1affa6da8e66f27c6f43bea9d9e694724b" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>evaluatePoint</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a8c089ecf2dd8ff0fb2732233994b6cac" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>getOutput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a6db247d3db83217a16e963d01f6bcb77" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a975a7ecbf38c917c7b72519581fc7dba" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a27c614cb30c1e4b78e64791f4919dfa7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a74d1418613e89a7f2993ea936228a44a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a02ec5c947f1d2d83d2952c3b899cc58f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ac50de29a6160baa2bba195af9d69430a" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>isOutputValid</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1a922e6eec2f74620c49f9fcd1ddf709ae" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1ad63e64dcad4c269263ecd20b2c81352b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ae147cdee9ff9160a9dfe0d3e349a9aad" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::Advanceable::"><scope>BipedalLocomotion::Planners::Spline</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1adf0d9fc07bab0ec5d4db7f3a35816bf2" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::Advanceable::"><scope>BipedalLocomotion::Planners::Spline</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a54f476d3c8d6d003fb714309ea6272aa" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::Planners::Spline</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1adb341b37472241b6da8b552166308d7b" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::Planners::Spline</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1af5e15f5e4962a5c8e0f0c0a49adb9ca1" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::Planners::Spline</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ad5c6ce3ad7d2a064d7bb512fe0bc489e" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::Planners::Spline</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a69603f2c9c608815908425b5b8c2005c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>Output</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a7c0d15e677a1935918fc747ba4c25ec1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a0a39b891749961d34507b4b591886741" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a581340f280eca1890a8a7b2331761b57" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1Spline_1a248e4fa5abcb7d4530baa9bb8ca20a90" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>setAdvanceTimeStep</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1Spline_1a65f6e6d2c5294b562c9aa8e491acd1ef" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>setFinalConditions</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1Spline_1a2551f619b85dfd0f728e9b03cf789f8c" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>setInitialConditions</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1a472624c76d5e02e8ae16991cd77016ce" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ad2637be5c9075a2d8f09fedc6a42d808" prot="public" virt="pure-virtual" ambiguityscope="BipedalLocomotion::System::Advanceable::"><scope>BipedalLocomotion::Planners::Spline</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1Spline_1ad7e193a8a3416130f9546f7dff47be41" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>setKnots</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1aa6af70cc2e04e6a7e011af3d968b3b4b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>Source</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1a1c126531af21d485f09f297cb162c30a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>Source</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1af0cf2abdf10e6594372a0b062fe4a8af" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>Source</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1afae1137cba829874bab4a1d25d559896" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>~Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ac9b58b0d2f6ae8821b873ed6f9817ccb" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>~InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1adcc49c38152c9204dcab4f8e87f68977" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>~OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1acf12427433027de27b18e6e70ba0cae8" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>~Source</name></member>
      <member refid="classBipedalLocomotion_1_1Planners_1_1Spline_1ac8126ebdc66359175dac9597c3bd1830" prot="public" virt="virtual"><scope>BipedalLocomotion::Planners::Spline</scope><name>~Spline</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
