<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1IK_1_1GravityTask" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::IK::GravityTask</compoundname>
    <basecompoundref refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask" prot="public" virt="non-virtual">BipedalLocomotion::IK::IKLinearTask</basecompoundref>
    <includes local="no">BipedalLocomotion/IK/GravityTask.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a60ba99cdf4cbfe0cea05de06e3208076" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler_1_1VariableDescription" kindref="compound">System::VariablesHandler::VariableDescription</ref></type>
        <definition>System::VariablesHandler::VariableDescription BipedalLocomotion::IK::GravityTask::m_robotVelocityVariable</definition>
        <argsstring></argsstring>
        <name>m_robotVelocityVariable</name>
        <briefdescription>
<para>Variable describing the robot velocity (base + joint) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="106" column="51" bodyfile="BipedalLocomotion/IK/GravityTask.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1af73de74172ffb257e8cbdc9bdd515c61" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::GravityTask::m_isInitialized</definition>
        <argsstring></argsstring>
        <name>m_isInitialized</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the task has been initialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="114" column="10" bodyfile="BipedalLocomotion/IK/GravityTask.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1aa483b732f5244b44152a85527b1c35ee" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::GravityTask::m_isValid</definition>
        <argsstring></argsstring>
        <name>m_isValid</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the task is valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="115" column="10" bodyfile="BipedalLocomotion/IK/GravityTask.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a5dcf737e97fa4affc16d9406c2d65379" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; iDynTree::KinDynComputations &gt;</type>
        <definition>std::shared_ptr&lt;iDynTree::KinDynComputations&gt; BipedalLocomotion::IK::GravityTask::m_kinDyn</definition>
        <argsstring></argsstring>
        <name>m_kinDyn</name>
        <briefdescription>
<para>Pointer to a KinDynComputations object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="117" column="21" bodyfile="BipedalLocomotion/IK/GravityTask.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a665d1395ab74c8e7095a27d7e23bf75f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::IK::GravityTask::m_kp</definition>
        <argsstring></argsstring>
        <name>m_kp</name>
        <briefdescription>
<para>Controller gain. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="120" column="12" bodyfile="BipedalLocomotion/IK/GravityTask.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a5f4ece3b300b09589144f85260a8ded4" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd BipedalLocomotion::IK::GravityTask::m_jacobian</definition>
        <argsstring></argsstring>
        <name>m_jacobian</name>
        <briefdescription>
<para>Internal buffer to store the jacobian. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="121" column="21" bodyfile="BipedalLocomotion/IK/GravityTask.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a3ca089aabe4e47f8a763a09541f05c1b" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d BipedalLocomotion::IK::GravityTask::m_desiredZDirectionBody</definition>
        <argsstring></argsstring>
        <name>m_desiredZDirectionBody</name>
        <briefdescription>
<para>Desired gravity direction in the target frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="122" column="21" bodyfile="BipedalLocomotion/IK/GravityTask.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a6c8806dc50d88c615f5ed06c9f8f8a60" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d BipedalLocomotion::IK::GravityTask::m_feedForwardBody</definition>
        <argsstring></argsstring>
        <name>m_feedForwardBody</name>
        <briefdescription>
<para>Feedforward term expressed in body direction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="123" column="21" bodyfile="BipedalLocomotion/IK/GravityTask.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1ac51e9187dad48f54744877884227cbc9" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd BipedalLocomotion::IK::GravityTask::m_Am</definition>
        <argsstring></argsstring>
        <name>m_Am</name>
        <briefdescription>
<para>Matrix filtering jacobian rows. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="124" column="21" bodyfile="BipedalLocomotion/IK/GravityTask.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a6f341d890651d65f00dc3d1dbf731833" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd BipedalLocomotion::IK::GravityTask::m_bm</definition>
        <argsstring></argsstring>
        <name>m_bm</name>
        <briefdescription>
<para>Matrix filtering acceleration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="125" column="21" bodyfile="BipedalLocomotion/IK/GravityTask.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a84d3f7eeb629c5003582c9532a494cbb" prot="private" static="no" mutable="no">
        <type>iDynTree::FrameIndex</type>
        <definition>iDynTree::FrameIndex BipedalLocomotion::IK::GravityTask::m_targetFrameIndex</definition>
        <argsstring></argsstring>
        <name>m_targetFrameIndex</name>
        <briefdescription>
<para>Index of the target frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="127" column="26" bodyfile="BipedalLocomotion/IK/GravityTask.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a42a12581a506565b25021ed3a90658ab" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t BipedalLocomotion::IK::GravityTask::m_spatialVelocitySize</definition>
        <argsstring></argsstring>
        <name>m_spatialVelocitySize</name>
        <initializer>{6}</initializer>
        <briefdescription>
<para>Size of the spatial velocity vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="110" column="34" bodyfile="BipedalLocomotion/IK/GravityTask.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a13fa4e9eeddafe9e57169d230cfcc70b" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t BipedalLocomotion::IK::GravityTask::m_DoFs</definition>
        <argsstring></argsstring>
        <name>m_DoFs</name>
        <initializer>{2}</initializer>
        <briefdescription>
<para>DoFs associated to the task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="112" column="34" bodyfile="BipedalLocomotion/IK/GravityTask.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1ae8399c21288e0a897d320dd64b16b2f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::GravityTask::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; paramHandler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ae8bd038ace5d8bccda37b62c5712f22b">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>paramHandler</declname>
        </param>
        <briefdescription>
<para>Initialize the task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paramHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameters handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="4" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>robot_velocity_variable_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the variable contained in <computeroutput>VariablesHandler</computeroutput> describing the robot velocity   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>kp</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Gain of the distance controller   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>target_frame_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the frame to which apply the gravity task   </para>
</entry><entry thead="no" align='center'><para>Yes   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="144" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a016ae22fd0db3071cada8f090380fd6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::GravityTask::setKinDyn</definition>
        <argsstring>(std::shared_ptr&lt; iDynTree::KinDynComputations &gt; kinDyn) override</argsstring>
        <name>setKinDyn</name>
        <reimplements refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask_1acbafe7a440ba7e7fbd0d174dc994accf">setKinDyn</reimplements>
        <param>
          <type>std::shared_ptr&lt; iDynTree::KinDynComputations &gt;</type>
          <declname>kinDyn</declname>
        </param>
        <briefdescription>
<para>Set the kinDynComputations object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kinDyn</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a kinDynComputations object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="151" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a4e6ee3164136a01c3ba1a1116c7e7eaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::GravityTask::setVariablesHandler</definition>
        <argsstring>(const System::VariablesHandler &amp;variablesHandler) override</argsstring>
        <name>setVariablesHandler</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a898c2f93e48aeeb41e29d17c17b95437">setVariablesHandler</reimplements>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref> &amp;</type>
          <declname>variablesHandler</declname>
        </param>
        <briefdescription>
<para>Set the set of variables required by the task. </para>
        </briefdescription>
        <detaileddescription>
<para>The variables are stored in the <ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variablesHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to a variables handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The handler must contain a variable named as the parameter <computeroutput>robot_velocity_variable_name</computeroutput> stored in the parameter handler. The variable represents the generalized velocity of the robot. Where the generalized robot velocity is a vector containing the base spatial-velocity (expressed in mixed representation) and the joints velocity. </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="164" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a8323548f42b71bca7c94c28859f878bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::GravityTask::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1accd4ab19a7e8738abe53b485d8acbf1c">update</reimplements>
        <briefdescription>
<para>Update the content of the task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="170" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1af3339f6e558d0d6255ac94a5c014d7f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::GravityTask::setDesiredGravityDirectionInTargetFrame</definition>
        <argsstring>(const Eigen::Ref&lt; const Eigen::Vector3d &gt; desiredGravityDirection)</argsstring>
        <name>setDesiredGravityDirectionInTargetFrame</name>
        <param>
          <type>const Eigen::Ref&lt; const Eigen::Vector3d &gt;</type>
          <declname>desiredGravityDirection</declname>
        </param>
        <briefdescription>
<para>Set the desired gravity direction expressed the target frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>desiredGravityDirection</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired gravity direction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise.</para>
</simplesect>
The input is normalized, unless the norm is too small. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="179" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a335e550fcb0be744d5ebb79c1e58eee2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::GravityTask::setFeedForwardVelocityInTargetFrame</definition>
        <argsstring>(const Eigen::Ref&lt; const Eigen::Vector3d &gt; feedforwardVelocity)</argsstring>
        <name>setFeedForwardVelocityInTargetFrame</name>
        <param>
          <type>const Eigen::Ref&lt; const Eigen::Vector3d &gt;</type>
          <declname>feedforwardVelocity</declname>
        </param>
        <briefdescription>
<para>Set the feedforward angular velocity expressed in the target frame. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>feedforwardVelocity</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired feedforward velocity in rad/s. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. Only the first two components are used. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="189" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a0f4fd1f332c001f31f3cd5c9bfebf12b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::GravityTask::setSetPoint</definition>
        <argsstring>(const Eigen::Ref&lt; const Eigen::Vector3d &gt; desiredGravityDirection, const Eigen::Ref&lt; const Eigen::Vector3d &gt; feedforwardVelocity=Eigen::Vector3d::Zero())</argsstring>
        <name>setSetPoint</name>
        <param>
          <type>const Eigen::Ref&lt; const Eigen::Vector3d &gt;</type>
          <declname>desiredGravityDirection</declname>
        </param>
        <param>
          <type>const Eigen::Ref&lt; const Eigen::Vector3d &gt;</type>
          <declname>feedforwardVelocity</declname>
          <defval>Eigen::Vector3d::Zero()</defval>
        </param>
        <briefdescription>
<para>Set the desired gravity direction expressed the target frame and the feedforward velocity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>desiredGravityDirection</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired gravity direction in target frame. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>feedforwardVelocity</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired feedforward velocity in rad/s expressed in the target frame. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise.</para>
</simplesect>
The desiredGravityDirection is normalized, unless the norm is too small. Only the first two components of the feedforwardVelocity are used. This is equivalent of using setDesiredGravityDirectionInTargetFrame and setFeedForwardVelocityInTargetFrame </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="204" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a70bfb7162351fb7e91199fc0c8856833" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::size_t</type>
        <definition>std::size_t BipedalLocomotion::IK::GravityTask::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a34621cd88c6d60909f09e95226f2cd67">size</reimplements>
        <briefdescription>
<para>Get the size of the task. </para>
        </briefdescription>
        <detaileddescription>
<para>(I.e the number of rows of the vector b) <simplesect kind="return"><para>the size of the task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="212" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a317add293f232f4ddbb86139e23c9719" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2f9d37ec58342f227021c12a4a539748" kindref="member">Type</ref></type>
        <definition>Type BipedalLocomotion::IK::GravityTask::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ac20d8e993c66663b61f587d9642f3e8a">type</reimplements>
        <briefdescription>
<para>The <ref refid="classBipedalLocomotion_1_1IK_1_1DistanceTask" kindref="compound">DistanceTask</ref> is an equality task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the size of the task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="218" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1GravityTask_1a48c0daab234e7a81d85c1a32b98ec773" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::GravityTask::isValid</definition>
        <argsstring>() const override</argsstring>
        <name>isValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2566bae7a097d11b420b89cdd3f2002f">isValid</reimplements>
        <briefdescription>
<para>Determines the validity of the objects retrieved with <ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad510fff46eb9cbbc65775b1a9490e297" kindref="member">getA()</ref> and <ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a8c65780b85d3927038c3320d3cfca730" kindref="member">getB()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the objects are valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/GravityTask.h" line="224" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classBipedalLocomotion_1_1IK_1_1GravityTask" kindref="compound">GravityTask</ref> class aligns the z axis of a frame to a desired gravity direction. </para>
    </briefdescription>
    <detaileddescription>
<para>The task assumes perfect control of the robot velocity <formula id="96">$\nu$</formula> that contains the base linear and angular velocity expressed in mixed representation and the joint velocities. The task represents the following equation <formula id="113">\[ \begin{bmatrix} 1 &amp; 0 &amp; 0 \\ 0 &amp; 1 &amp; 0 \end{bmatrix} J_\omega \nu = -k \begin{bmatrix} 0 &amp;-1 &amp; 0 \\ 1 &amp; 0 &amp; 0 \end{bmatrix} {} ^ W R_f {} ^ f g ^ * + {} ^ W R_f {} ^ f \omega_{ff} \]</formula> where <formula id="114">$J_\omega$</formula> is the angular part of the frame jacobian. <formula id="111">$k$</formula> is the controller gain. <formula id="115">${} ^ W R_f$</formula> is the frame rotation. <formula id="116">${} ^ W g ^ *$</formula> is the desired z axis direction expressed in the frame coordinates. <formula id="117">${} ^ W \omega_{ff}$</formula> is the feed-forward velocity expressed in the frame coordinates. The explanation is as follows.</para>
<para>We define ${}^wR_b$ as the orientation of the frame $b$ we want to move, and ${}^b\hat{V}$ as the unitary vector fixed in frame $b$ that we want to align to ${}^wz = e_3 = [0 0 1]^\top$.</para>
<para>We define the following Lyapunov function: <formula id="118">\[ V = 1 - \cos(\theta) \geq 0. \]</formula></para>
<para>Since <formula id="119">$ a^\top b = ||a|| ~||b|| \cos(\theta) $</formula>, we have: <formula id="120">\[ V = 1 - \left({}^wR_b{}^b\hat{V}\right)^\top e_3, \]</formula> given that both vectors are unitary.</para>
<para>The time derivative of the Lyapunov function is as follows: <formula id="121">\[ \dot{V} = - \left({}^w\dot{R}_b{}^b\hat{V}\right)^\top e_3, \]</formula> where <formula id="122">$ {}^w\dot{R}_b = S({}^w\omega){}^w{R}_b $</formula>, with <formula id="123">$ S(\cdot) $</formula> being a skew symmetric matrix, and <formula id="124">$ {}^w\omega \in \mathbb{R}^3 $</formula> is the right-trivialized angular velocity. Hence, <formula id="125">\[ \dot{V} = - \left(S({}^w\omega){}^w{R}_b{}^b\hat{V}\right)^\top e_3. \]</formula></para>
<para>Exploiting <formula id="126">$ S(\cdot)^\top = -S(\cdot) $</formula>, we have: <formula id="127">\[ \dot{V} = {}^b\hat{V}^\top{}^w{R}_b^\top S({}^w\omega) e_3, \]</formula> and <formula id="128">$ S(a)b = -S(b)a $</formula>: <formula id="129">\[ \dot{V} = -{}^b\hat{V}^\top{}^w{R}_b^\top S(e_3){}^w\omega. \]</formula></para>
<para>Then, if we choose: <formula id="130">\[ {}^w\omega = k \left({}^b\hat{V}^\top{}^w{R}_b^\top S(e_3)\right)^\top + \lambda e_3, \]</formula> with <formula id="131">$ k, \lambda \in \mathbb{R}^3 $</formula>, we have that <formula id="132">$ \dot{V} \leq 0 $</formula>. Then, <formula id="133">\[ {}^w\omega = -k S(e_3) {}^w{R}_b{}^b\hat{V} + \lambda e_3. \]</formula></para>
<para>We can introduce the right-trivialized Jacobian <formula id="134">$ {}^wJ $</formula> such that <formula id="135">$ {}^wJ\dot{\nu} = {}^w\omega $</formula>: <formula id="136">\[ {}^wJ\dot{\nu} = -k S(e_3) {}^w{R}_b{}^b\hat{V} + \lambda e_3. \]</formula></para>
<para>We can filter out the rotation around the world Z-axis, thus obtaining: <formula id="137">\[ \begin{bmatrix} e_1 &amp; e_2 \end{bmatrix}^\top {}^wJ\dot{\nu} = -k \begin{bmatrix} 0 &amp; -1 &amp; 0\\ 1 &amp; 0 &amp; 0 \end{bmatrix} {}^w{R}_b{}^b\hat{V}. \]</formula> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BipedalLocomotion::IK::GravityTask</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1GravityTask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::IK::IKLinearTask</label>
        <link refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::LinearTask</label>
        <link refid="classBipedalLocomotion_1_1System_1_1LinearTask"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="1">
        <label>BipedalLocomotion::IK::GravityTask</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1GravityTask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::IK::IKLinearTask</label>
        <link refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::LinearTask</label>
        <link refid="classBipedalLocomotion_1_1System_1_1LinearTask"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_description</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/IK/GravityTask.h" line="103" column="1" bodyfile="BipedalLocomotion/IK/GravityTask.h" bodystart="104" bodyend="225"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad510fff46eb9cbbc65775b1a9490e297" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>getA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a8c65780b85d3927038c3320d3cfca730" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>getB</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a1d152be26f750d933bc07baf1344e97d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>getDescription</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a591be3a0f92c9e1c40ccadf85c21f739" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>getResidual</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1ae8399c21288e0a897d320dd64b16b2f9" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a48c0daab234e7a81d85c1a32b98ec773" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>isValid</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1aa95f6768b7cd98aab6727e2eb729a308" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>m_A</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1ac51e9187dad48f54744877884227cbc9" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>m_Am</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a0e86b8ecde78a0d6e87fcb2c373b2151" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>m_b</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a6f341d890651d65f00dc3d1dbf731833" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>m_bm</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a5efff74f1d43a59376a9c93a0400120a" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>m_description</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a3ca089aabe4e47f8a763a09541f05c1b" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>m_desiredZDirectionBody</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a13fa4e9eeddafe9e57169d230cfcc70b" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>m_DoFs</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a6c8806dc50d88c615f5ed06c9f8f8a60" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>m_feedForwardBody</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1af73de74172ffb257e8cbdc9bdd515c61" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>m_isInitialized</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1aa483b732f5244b44152a85527b1c35ee" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>m_isValid</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a5f4ece3b300b09589144f85260a8ded4" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>m_jacobian</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a5dcf737e97fa4affc16d9406c2d65379" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>m_kinDyn</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a665d1395ab74c8e7095a27d7e23bf75f" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>m_kp</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a60ba99cdf4cbfe0cea05de06e3208076" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>m_robotVelocityVariable</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a42a12581a506565b25021ed3a90658ab" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>m_spatialVelocitySize</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a84d3f7eeb629c5003582c9532a494cbb" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>m_targetFrameIndex</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1af3339f6e558d0d6255ac94a5c014d7f1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>setDesiredGravityDirectionInTargetFrame</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a335e550fcb0be744d5ebb79c1e58eee2" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>setFeedForwardVelocityInTargetFrame</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a016ae22fd0db3071cada8f090380fd6b" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>setKinDyn</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a0f4fd1f332c001f31f3cd5c9bfebf12b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>setSetPoint</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a4e6ee3164136a01c3ba1a1116c7e7eaa" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>setVariablesHandler</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a70bfb7162351fb7e91199fc0c8856833" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>size</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a06fab6bb77dd556a74c76b6e57dc0ba1" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>subA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad6a0743b7902e539d634358b269741b4" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>subA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2f9d37ec58342f227021c12a4a539748" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>Type</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a317add293f232f4ddbb86139e23c9719" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>type</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1GravityTask_1a8323548f42b71bca7c94c28859f878bc" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>update</name></member>
      <member refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask_1ae1ea36d22880e1068c77661eef76ecf0" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>~IKLinearTask</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a22edf322e7504d1a197b687d265445d7" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::GravityTask</scope><name>~LinearTask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
