<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1Advanceable" prot="public" virt="non-virtual">BipedalLocomotion::System::Advanceable&lt; Eigen::VectorXd, Eigen::VectorXd &gt;</basecompoundref>
    <includes local="no">BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a6212eec91e32762e21b46945576ad1bb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother::m_isInitialized</definition>
        <argsstring></argsstring>
        <name>m_isInitialized</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" line="83" column="10" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a38dcb59fa362d718c9369198a65bed32" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother::m_isInitialStateSet</definition>
        <argsstring></argsstring>
        <name>m_isInitialStateSet</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" line="84" column="10" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a93263aa10464873c504af32034e4fdc9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother::m_isOutputValid</definition>
        <argsstring></argsstring>
        <name>m_isOutputValid</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" line="85" column="10" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1ab43ee97c4e3a0578f432014161569613" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother::m_settlingTime</definition>
        <argsstring></argsstring>
        <name>m_settlingTime</name>
        <initializer>{-1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" line="86" column="12" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a3adff369ad94cceba485bf63dc57d0fb" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother::m_output</definition>
        <argsstring></argsstring>
        <name>m_output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" line="87" column="21" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a2fa051571c87307a7569485337b715ac" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1LinearTimeInvariantSystem" kindref="compound">LinearTimeInvariantSystem</ref> &gt;</type>
        <definition>std::shared_ptr&lt;LinearTimeInvariantSystem&gt; BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother::m_linearSystem</definition>
        <argsstring></argsstring>
        <name>m_linearSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" line="89" column="21" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1ad646fb9879a8560a9dc5c687741f0a68" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1ForwardEuler" kindref="compound">ForwardEuler</ref>&lt; <ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1LinearTimeInvariantSystem" kindref="compound">LinearTimeInvariantSystem</ref> &gt;</type>
        <definition>ForwardEuler&lt;LinearTimeInvariantSystem&gt; BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother::m_integrator</definition>
        <argsstring></argsstring>
        <name>m_integrator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" line="90" column="18" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a699553512ac3d76602d9c771f265a2a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; handler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a6db247d3db83217a16e963d01f6bcb77">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize the Dynamical system. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameter handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required <table rows="3" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>sampling_time</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Sampling time used to discrete the linear system   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>settling_time</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>5% settling time (The settling time, <formula id="180">$T_s$</formula>, is the time required for the system output to fall within a certain percentage (i.e. 5%) of the steady-state value for a step input.)   </para>
</entry><entry thead="no" align='center'><para>Yes   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>true in case of success/false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" line="47" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1aff8bbd70af1820483a434fad46665c4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother::reset</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; initialState)</argsstring>
        <name>reset</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>initialState</declname>
        </param>
        <briefdescription>
<para>Set the state of the smoother. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>initialState</parametername>
</parameternamelist>
<parameterdescription>
<para>initial state of the smoother </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" line="54" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a857ecad479baac775759f91b286069c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother::advance</definition>
        <argsstring>() override</argsstring>
        <name>advance</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a67107e46e831d93f572558b541aab6d2">advance</reimplements>
        <briefdescription>
<para>Perform one integration step using the input set by the <ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a885f789466ad422baddcfa2996c23eca" kindref="member">FirstOrderSmoother::setInput</ref> method. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success and false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" line="61" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1ac5914a6768674100165630736548341d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const Eigen::VectorXd &amp;</type>
        <definition>const Eigen::VectorXd&amp; BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother::getOutput</definition>
        <argsstring>() const override</argsstring>
        <name>getOutput</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a8c089ecf2dd8ff0fb2732233994b6cac">getOutput</reimplements>
        <briefdescription>
<para>Get the output of the smoother. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a vector containing the outpur of the smoother </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" line="67" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a885f789466ad422baddcfa2996c23eca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother::setInput</definition>
        <argsstring>(const Eigen::VectorXd &amp;input) override</argsstring>
        <name>setInput</name>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Set the input of the smoother. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector representing the input of the smoother </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success and false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" line="74" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a4abb7565bb83ed84cdf1072d27db171c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother::isOutputValid</definition>
        <argsstring>() const override</argsstring>
        <name>isOutputValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ac50de29a6160baa2bba195af9d69430a">isOutputValid</reimplements>
        <briefdescription>
<para>Determines the validity of the object retrieved with <ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1ac5914a6768674100165630736548341d" kindref="member">getOutput()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the object is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" line="80" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother" kindref="compound">FirstOrderSmoother</ref> smoother implements a simple smoother based on a first order linear system. </para>
    </briefdescription>
    <detaileddescription>
<para>The system is described by the following ode <formula id="176">\[ \dot{x} = a (-x + u) \]</formula> where the <formula id="177">$a$</formula> is given by <formula id="178">$a = 3.0/T_{s_5}$</formula>. <formula id="179">$T_{s_5}$</formula> is the settling time at 5%. The linear system is propagated with a Forward Euler integrator. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; Eigen::VectorXd, Eigen::VectorXd &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; Eigen::VectorXd, Eigen::VectorXd &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</label>
        <link refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; Eigen::VectorXd, Eigen::VectorXd &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; Eigen::VectorXd, Eigen::VectorXd &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</label>
        <link refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" line="33" column="1" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h" bodystart="35" bodyend="91"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a857ecad479baac775759f91b286069c3" prot="public" virt="virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a09ee5b41c77c6b626f4d5cb775065325" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1aaeb3eba3073fbc844dea1eba4c9b68f3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ac1549cb26bd896e27370e97b0795ba3f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a618ab786bb43814b3b3012b843fce93b" prot="public" virt="virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>close</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1ac5914a6768674100165630736548341d" prot="public" virt="virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>getOutput</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a699553512ac3d76602d9c771f265a2a3" prot="public" virt="virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a975a7ecbf38c917c7b72519581fc7dba" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a27c614cb30c1e4b78e64791f4919dfa7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a74d1418613e89a7f2993ea936228a44a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a02ec5c947f1d2d83d2952c3b899cc58f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a4abb7565bb83ed84cdf1072d27db171c" prot="public" virt="virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>isOutputValid</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1ad646fb9879a8560a9dc5c687741f0a68" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>m_integrator</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a6212eec91e32762e21b46945576ad1bb" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>m_isInitialized</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a38dcb59fa362d718c9369198a65bed32" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>m_isInitialStateSet</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a93263aa10464873c504af32034e4fdc9" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>m_isOutputValid</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a2fa051571c87307a7569485337b715ac" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>m_linearSystem</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a3adff369ad94cceba485bf63dc57d0fb" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>m_output</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1ab43ee97c4e3a0578f432014161569613" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>m_settlingTime</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ae147cdee9ff9160a9dfe0d3e349a9aad" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1adf0d9fc07bab0ec5d4db7f3a35816bf2" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a54f476d3c8d6d003fb714309ea6272aa" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1adb341b37472241b6da8b552166308d7b" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1af5e15f5e4962a5c8e0f0c0a49adb9ca1" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ad5c6ce3ad7d2a064d7bb512fe0bc489e" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a69603f2c9c608815908425b5b8c2005c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>Output</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a7c0d15e677a1935918fc747ba4c25ec1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a0a39b891749961d34507b4b591886741" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a581340f280eca1890a8a7b2331761b57" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1aff8bbd70af1820483a434fad46665c4d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>reset</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FirstOrderSmoother_1a885f789466ad422baddcfa2996c23eca" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ad2637be5c9075a2d8f09fedc6a42d808" prot="public" virt="pure-virtual" ambiguityscope="Advanceable&lt; Eigen::VectorXd, Eigen::VectorXd &gt;::"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1afae1137cba829874bab4a1d25d559896" prot="public" virt="virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>~Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ac9b58b0d2f6ae8821b873ed6f9817ccb" prot="public" virt="virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>~InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1adcc49c38152c9204dcab4f8e87f68977" prot="public" virt="virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FirstOrderSmoother</scope><name>~OutputPort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
