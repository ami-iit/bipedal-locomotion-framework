<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel" kind="class" language="C++" prot="public" final="yes">
    <compoundname>BipedalLocomotion::ContactModels::ContinuousContactModel</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel" prot="public" virt="non-virtual">BipedalLocomotion::ContactModels::ContactModel</basecompoundref>
    <includes local="no">BipedalLocomotion/ContactModels/ContinuousContactModel.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a4fc23eac6a42e8d1af29a3164cc3c195" prot="private" static="no" mutable="no">
        <type>iDynTree::Transform</type>
        <definition>iDynTree::Transform BipedalLocomotion::ContactModels::ContinuousContactModel::m_frameTransform</definition>
        <argsstring></argsstring>
        <name>m_frameTransform</name>
        <initializer>{iDynTree::Transform::Identity()}</initializer>
        <briefdescription>
<para>Homogeneous transformation of the frame placed in the center of the contact surface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="44" column="25" bodyfile="BipedalLocomotion/ContactModels/ContinuousContactModel.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a8890170c4cf79f54ddfed8d3c81758c8" prot="private" static="no" mutable="no">
        <type>iDynTree::Transform</type>
        <definition>iDynTree::Transform BipedalLocomotion::ContactModels::ContinuousContactModel::m_nullForceTransform</definition>
        <argsstring></argsstring>
        <name>m_nullForceTransform</name>
        <initializer>{iDynTree::Transform::Identity()}</initializer>
        <briefdescription>
<para>Homogeneous transformation corresponding to a null contact wrench. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="47" column="25" bodyfile="BipedalLocomotion/ContactModels/ContinuousContactModel.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a6273a4064c1934a13a43617efe764b7d" prot="private" static="no" mutable="no">
        <type>iDynTree::Twist</type>
        <definition>iDynTree::Twist BipedalLocomotion::ContactModels::ContinuousContactModel::m_twist</definition>
        <argsstring></argsstring>
        <name>m_twist</name>
        <initializer>{iDynTree::Twist::Zero()}</initializer>
        <briefdescription>
<para>Twist expressed in mixed representation of the frame placed in the center of the contact surface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="51" column="21" bodyfile="BipedalLocomotion/ContactModels/ContinuousContactModel.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a9ae9ba491ed8f9630ccba0d76d4955b5" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::ContactModels::ContinuousContactModel::m_springCoeff</definition>
        <argsstring></argsstring>
        <name>m_springCoeff</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
<para>Spring coefficient associated to the model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="53" column="12" bodyfile="BipedalLocomotion/ContactModels/ContinuousContactModel.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a3e72428be5ac374535bcc25f77ddc5e6" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::ContactModels::ContinuousContactModel::m_damperCoeff</definition>
        <argsstring></argsstring>
        <name>m_damperCoeff</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
<para>Damper coefficient associated to the model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="54" column="12" bodyfile="BipedalLocomotion/ContactModels/ContinuousContactModel.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1aaf2d41a022098a0d9a6700a1cb3c42c7" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::ContactModels::ContinuousContactModel::m_length</definition>
        <argsstring></argsstring>
        <name>m_length</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
<para>Length of the rectangular contact surface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="56" column="12" bodyfile="BipedalLocomotion/ContactModels/ContinuousContactModel.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a35aaa79405433ebc40c6492d6f90c45a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::ContactModels::ContinuousContactModel::m_width</definition>
        <argsstring></argsstring>
        <name>m_width</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
<para>Width of the rectangular contact surface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="57" column="12" bodyfile="BipedalLocomotion/ContactModels/ContinuousContactModel.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a0aa7c047aaf413fbe2b5c3b075f1eb15" prot="private" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ContactModels::ContinuousContactModel::computeContactWrench</definition>
        <argsstring>() final</argsstring>
        <name>computeContactWrench</name>
        <reimplements refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1a31d0abb5a17c4a588fcc44f69e4998d5">computeContactWrench</reimplements>
        <briefdescription>
<para>Evaluate the contact wrench given a specific contact model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="62" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a2b3674034e5a0c6d00f0a3fa9425f7d9" prot="private" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ContactModels::ContinuousContactModel::computeAutonomousDynamics</definition>
        <argsstring>() final</argsstring>
        <name>computeAutonomousDynamics</name>
        <reimplements refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1aad44bef7cb17c9803573180fbc4a920f">computeAutonomousDynamics</reimplements>
        <briefdescription>
<para>Evaluate the Autonomous System Dynamics of the derivative of a specific contact model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="67" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1ab6a0fabd96b6b57fc3a52745d5e1d8d0" prot="private" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ContactModels::ContinuousContactModel::computeControlMatrix</definition>
        <argsstring>() final</argsstring>
        <name>computeControlMatrix</name>
        <reimplements refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1ae986c8d9d443cf8571deda56681550aa">computeControlMatrix</reimplements>
        <briefdescription>
<para>Evaluate the Control Matrix of the derivative of a specific contact model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="72" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a201e73d45ef7cec521d160292abccb3d" prot="private" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ContactModels::ContinuousContactModel::computeRegressor</definition>
        <argsstring>() final</argsstring>
        <name>computeRegressor</name>
        <reimplements refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1abad25d99dd98fd49d1c8178577c69a54">computeRegressor</reimplements>
        <briefdescription>
<para>Evaluate the regressor matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="77" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1adf0c6695e60411663d225b6a74b0cc6f" prot="private" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContactModels::ContinuousContactModel::initializePrivate</definition>
        <argsstring>(std::weak_ptr&lt; ParametersHandler::IParametersHandler &gt; handler) final</argsstring>
        <name>initializePrivate</name>
        <reimplements refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1ad443712019e10ffd779e06cf918f0bbf">initializePrivate</reimplements>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialization of the class. </para>
        </briefdescription>
        <detaileddescription>
<para>Please call this method before evaluating any other function <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>std::weak_ptr to a parameter container. This class does not have the ownership of the container. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The following parameters are required.<itemizedlist>
<listitem><para><emphasis>length</emphasis> (double): length in meters associated to the model</para>
</listitem><listitem><para><emphasis>width</emphasis> (double): width in meters associated to the model</para>
</listitem><listitem><para><emphasis>spring_coeff</emphasis> (double): spring coefficient associated to the model</para>
</listitem><listitem><para><emphasis>damper_coeff</emphasis> (double): damper coefficient associated to the model </para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="90" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1ab62462b3477bd6e1d8c8caa06c0cc234" prot="private" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ContactModels::ContinuousContactModel::setStatePrivate</definition>
        <argsstring>(const iDynTree::Twist &amp;twist, const iDynTree::Transform &amp;transform) final</argsstring>
        <name>setStatePrivate</name>
        <reimplements refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1a2b7748c81a4ab550e1bd9d7d5eee931f">setStatePrivate</reimplements>
        <param>
          <type>const iDynTree::Twist &amp;</type>
          <declname>twist</declname>
        </param>
        <param>
          <type>const iDynTree::Transform &amp;</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
<para>Set the internal state of the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>twist</parametername>
</parameternamelist>
<parameterdescription>
<para>spatial velocity (expressed in mixed representation) of the link </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>transformation between the link and the inertial frame </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="97" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1af714b7acf78e8fa5b22acc8853bac39a" prot="private" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ContactModels::ContinuousContactModel::setNullForceTransformPrivate</definition>
        <argsstring>(const iDynTree::Transform &amp;transform) final</argsstring>
        <name>setNullForceTransformPrivate</name>
        <reimplements refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1a3ee56d7d5d720334943daab1bbce0578">setNullForceTransformPrivate</reimplements>
        <param>
          <type>const iDynTree::Transform &amp;</type>
          <declname>transform</declname>
        </param>
        <briefdescription>
<para>Set the null force transform of the model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>transformation corresponding to a null force expressed w.r.t. the inertial frame </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="105" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a9d563b68ae635417baf30e0b4b2461fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ContactModels::ContinuousContactModel::ContinuousContactModel</definition>
        <argsstring>()</argsstring>
        <name>ContinuousContactModel</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="113" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a195893af1bc299c597793aece21ffc15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>iDynTree::Force</type>
        <definition>iDynTree::Force BipedalLocomotion::ContactModels::ContinuousContactModel::getForceAtPoint</definition>
        <argsstring>(const double &amp;x, const double &amp;y)</argsstring>
        <name>getForceAtPoint</name>
        <param>
          <type>const double &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Compute the contact force applied by the environment on the system in a particular point of the contact surface. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x-coordinate of the point expressed in a frame placed in the contact surface whose origin is the center of the surface [in meters] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>y-coordinate of the point expressed in a frame placed in the contact surface whose origin is the center of the surface [in meters] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="123" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a954186e0f60c6ed2022a0e2ff1478c7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>iDynTree::Torque</type>
        <definition>iDynTree::Torque BipedalLocomotion::ContactModels::ContinuousContactModel::getTorqueGeneratedAtPoint</definition>
        <argsstring>(const double &amp;x, const double &amp;y)</argsstring>
        <name>getTorqueGeneratedAtPoint</name>
        <param>
          <type>const double &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Compute the torque applied by the environment on the system about the origin of the frame place in the contact surface whose origin is the center of the surface generated by the force acting on the point (x, y) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x-coordinate of the point expressed in a frame placed in the contact surface whose origin is the center of the surface [in meters] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>y-coordinate of the point expressed in a frame placed in the contact surface whose origin is the center of the surface [in meters] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="134" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a2b72aaf9be4a1bbf39b9b867ff6a21c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const double &amp;</type>
        <definition>const double&amp; BipedalLocomotion::ContactModels::ContinuousContactModel::springCoeff</definition>
        <argsstring>() const</argsstring>
        <name>springCoeff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="136" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1adb98c17f4c1133885e5924efb84f312f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; BipedalLocomotion::ContactModels::ContinuousContactModel::springCoeff</definition>
        <argsstring>()</argsstring>
        <name>springCoeff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="138" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1ac47b1e61c23837a818c86c151a2cc13d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const double &amp;</type>
        <definition>const double&amp; BipedalLocomotion::ContactModels::ContinuousContactModel::damperCoeff</definition>
        <argsstring>() const</argsstring>
        <name>damperCoeff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="140" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1acdb5dd268dc1e89d2d056242511b9f7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; BipedalLocomotion::ContactModels::ContinuousContactModel::damperCoeff</definition>
        <argsstring>()</argsstring>
        <name>damperCoeff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="142" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel" kindref="compound">ContinuousContactModel</ref> is a model that describe the contact using a continuous representation. </para>
    </briefdescription>
    <detaileddescription>
<para>It is an extension of the brush model used for describing the contact between the tire and the ground. Each point in the contact surface is subjected to an infinitesimal force <formula id="226">$f$</formula> given by <formula id="228">$f=k(x_0 - x)- b x$</formula>, where <formula id="76">$k$</formula> is the spring coefficient and <formula id="82">$b$</formula> is the damper coefficient. <formula id="77">$x$</formula> and <formula id="229">$x_0$</formula> are, respectively, the position of the point placed in the contact surface and the point con corresponding to a null contact force written in the inertial frame. Furthermore, during the contact scenario, we assume the link acts as a rigid body. While the environment will deform. The ground characteristics are isotropic, and it can be approximated as a continuum of springs and dampers. The contact surface is supposed to be <bold>rectangular</bold>. The frame placed on the contact surfaced is centered in the middle of the surface, with the <emphasis>z-axis</emphasis> pointing upwards and the <emphasis>x-axis</emphasis> pointing forward (parallel to one edge of the rectangle). We define <emphasis>length</emphasis> the length of the edge parallel to the \x coordinate and width the length of the edge parallel to the <emphasis>y</emphasis> coordinate. <simplesect kind="warning"><para>This model assumes infinite friction. Please make sure that the friction force between the contact surface and the environment is feasible (i.e. by enforcing a constraint in the controller). </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BipedalLocomotion::ContactModels::ContinuousContactModel</label>
        <link refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::ContactModels::ContactModel</label>
        <link refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BipedalLocomotion::ContactModels::ContinuousContactModel</label>
        <link refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::ContactModels::ContactModel</label>
        <link refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel"/>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/ContactModels/ContinuousContactModel.h" line="41" column="1" bodyfile="BipedalLocomotion/ContactModels/ContinuousContactModel.h" bodystart="42" bodyend="143"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a2b3674034e5a0c6d00f0a3fa9425f7d9" prot="private" virt="virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>computeAutonomousDynamics</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a0aa7c047aaf413fbe2b5c3b075f1eb15" prot="private" virt="virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>computeContactWrench</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1ab6a0fabd96b6b57fc3a52745d5e1d8d0" prot="private" virt="virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>computeControlMatrix</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a201e73d45ef7cec521d160292abccb3d" prot="private" virt="virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>computeRegressor</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a9d563b68ae635417baf30e0b4b2461fd" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>ContinuousContactModel</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1ac47b1e61c23837a818c86c151a2cc13d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>damperCoeff</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1acdb5dd268dc1e89d2d056242511b9f7d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>damperCoeff</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1a628acabb211dbf7337b2252791b63eed" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>getAutonomousDynamics</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1a51c9f098f585b4249784a92163548129" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>getContactWrench</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1a88153915d404be1ad67e1429a4b4bf51" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>getControlMatrix</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a195893af1bc299c597793aece21ffc15" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>getForceAtPoint</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1a1fb37ab2f967c20ceb657543c2bdc550" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>getRegressor</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a954186e0f60c6ed2022a0e2ff1478c7e" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>getTorqueGeneratedAtPoint</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1aec684c55eabd6211a4c178271c641231" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1adf0c6695e60411663d225b6a74b0cc6f" prot="private" virt="virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>initializePrivate</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1ac5726d78eddc09226fca0918ba95a2b3" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>m_autonomousDynamics</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1a5b2a304b21d11aa33fbc142bf3df7a09" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>m_contactWrench</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1aec467e76dcfa86c79a032ac50681e1c2" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>m_controlMatrix</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a3e72428be5ac374535bcc25f77ddc5e6" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>m_damperCoeff</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a4fc23eac6a42e8d1af29a3164cc3c195" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>m_frameTransform</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1aaf2d41a022098a0d9a6700a1cb3c42c7" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>m_length</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a8890170c4cf79f54ddfed8d3c81758c8" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>m_nullForceTransform</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1ae3b910da58e5b45e825ef1a91d09b744" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>m_regressor</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a9ae9ba491ed8f9630ccba0d76d4955b5" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>m_springCoeff</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a6273a4064c1934a13a43617efe764b7d" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>m_twist</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a35aaa79405433ebc40c6492d6f90c45a" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>m_width</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1a5cf86bc458a5fe97a8d75414a894e730" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>setNullForceTransform</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1af714b7acf78e8fa5b22acc8853bac39a" prot="private" virt="virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>setNullForceTransformPrivate</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContactModel_1a69f8339216cb9747cb67dc473e1afc7e" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>setState</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1ab62462b3477bd6e1d8c8caa06c0cc234" prot="private" virt="virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>setStatePrivate</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1a2b72aaf9be4a1bbf39b9b867ff6a21c0" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>springCoeff</name></member>
      <member refid="classBipedalLocomotion_1_1ContactModels_1_1ContinuousContactModel_1adb98c17f4c1133885e5924efb84f312f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContactModels::ContinuousContactModel</scope><name>springCoeff</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
