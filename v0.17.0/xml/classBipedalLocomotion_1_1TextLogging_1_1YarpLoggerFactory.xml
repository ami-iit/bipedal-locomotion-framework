<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1TextLogging_1_1YarpLoggerFactory" kind="class" language="C++" prot="public" final="yes">
    <compoundname>BipedalLocomotion::TextLogging::YarpLoggerFactory</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1TextLogging_1_1LoggerFactory" prot="public" virt="non-virtual">BipedalLocomotion::TextLogging::LoggerFactory</basecompoundref>
    <includes local="no">BipedalLocomotion/TextLogging/YarpLogger.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TextLogging_1_1YarpLoggerFactory_1a19b8820fe3cecbd34fded4854413e06b" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string BipedalLocomotion::TextLogging::YarpLoggerFactory::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TextLogging/YarpLogger.h" line="104" column="23" bodyfile="BipedalLocomotion/TextLogging/YarpLogger.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1TextLogging_1_1YarpLoggerFactory_1a988e800388e62f0501f292dcdcc67fd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::TextLogging::YarpLoggerFactory::YarpLoggerFactory</definition>
        <argsstring>(const std::string_view &amp;name=&quot;blf&quot;)</argsstring>
        <name>YarpLoggerFactory</name>
        <param>
          <type>const std::string_view &amp;</type>
          <declname>name</declname>
          <defval>&quot;blf&quot;</defval>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classBipedalLocomotion_1_1TextLogging_1_1YarpLoggerFactory" kindref="compound">YarpLoggerFactory</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the logger which will be used inside the formatted messages </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TextLogging/YarpLogger.h" line="95" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TextLogging_1_1YarpLoggerFactory_1af18ddfdaaf7608ca32866caf2a9b0eb4" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>std::shared_ptr&lt; TextLogging::Logger &gt; const</type>
        <definition>std::shared_ptr&lt;TextLogging::Logger&gt; const BipedalLocomotion::TextLogging::YarpLoggerFactory::createLogger</definition>
        <argsstring>() final</argsstring>
        <name>createLogger</name>
        <reimplements refid="classBipedalLocomotion_1_1TextLogging_1_1LoggerFactory_1a2f3d127104cc6b38d54ba8e46a126af3">createLogger</reimplements>
        <briefdescription>
<para>Create the YARPLogger as a singleton. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the pointer to TextLogging::Logger that streams the output using YARP </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TextLogging/YarpLogger.h" line="101" column="27"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1TextLogging_1_1YarpLoggerFactory" kindref="compound">YarpLoggerFactory</ref> implements the factory you should use to enable the sink using yaro. </para>
    </briefdescription>
    <detaileddescription>
<para>The YARP logger can be easily used as follows <programlisting filename=".cpp"><codeline><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Logger_8h" kindref="compound">BipedalLocomotion/TextLogging/Logger.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="YarpLogger_8h" kindref="compound">BipedalLocomotion/TextLogging/YarpLogger.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="LoggerBuilder_8h" kindref="compound">BipedalLocomotion/TextLogging/LoggerBuilder.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>logger</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classBipedalLocomotion_1_1TextLogging_1_1LoggerBuilder_1a85a6d1708d66ce941073b49fb2399f47" kindref="member">BipedalLocomotion::TextLogging::LoggerBuilder::setFactory</ref>(std::make_shared&lt;BipedalLocomotion::TextLogging::YarpLoggerFactory&gt;()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespaceBipedalLocomotion_1a0262a6287c9047d721fc7809c2be667c" kindref="member">BipedalLocomotion::log</ref>()-&gt;info(</highlight><highlight class="stringliteral">&quot;My<sp/>info&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BipedalLocomotion::TextLogging::YarpLoggerFactory</label>
        <link refid="classBipedalLocomotion_1_1TextLogging_1_1YarpLoggerFactory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::TextLogging::LoggerFactory</label>
        <link refid="classBipedalLocomotion_1_1TextLogging_1_1LoggerFactory"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BipedalLocomotion::TextLogging::YarpLoggerFactory</label>
        <link refid="classBipedalLocomotion_1_1TextLogging_1_1YarpLoggerFactory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::TextLogging::LoggerFactory</label>
        <link refid="classBipedalLocomotion_1_1TextLogging_1_1LoggerFactory"/>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/TextLogging/YarpLogger.h" line="88" column="1" bodyfile="BipedalLocomotion/TextLogging/YarpLogger.h" bodystart="89" bodyend="105"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1TextLogging_1_1YarpLoggerFactory_1af18ddfdaaf7608ca32866caf2a9b0eb4" prot="public" virt="virtual"><scope>BipedalLocomotion::TextLogging::YarpLoggerFactory</scope><name>createLogger</name></member>
      <member refid="classBipedalLocomotion_1_1TextLogging_1_1YarpLoggerFactory_1a19b8820fe3cecbd34fded4854413e06b" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TextLogging::YarpLoggerFactory</scope><name>m_name</name></member>
      <member refid="classBipedalLocomotion_1_1TextLogging_1_1YarpLoggerFactory_1a988e800388e62f0501f292dcdcc67fd6" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TextLogging::YarpLoggerFactory</scope><name>YarpLoggerFactory</name></member>
      <member refid="classBipedalLocomotion_1_1TextLogging_1_1LoggerFactory_1ac43836e327df2a153d5cddee9a0ed278" prot="public" virt="virtual"><scope>BipedalLocomotion::TextLogging::YarpLoggerFactory</scope><name>~LoggerFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
