<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1TSID_1_1CoMTask" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::TSID::CoMTask</compoundname>
    <basecompoundref refid="structBipedalLocomotion_1_1TSID_1_1TSIDLinearTask" prot="public" virt="non-virtual">BipedalLocomotion::TSID::TSIDLinearTask</basecompoundref>
    <includes local="no">BipedalLocomotion/TSID/CoMTask.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a3cbd9ce108e18ad263c9224b80c299f4" prot="private" static="no" mutable="no">
        <type>LieGroupControllers::ProportionalDerivativeControllerR3d</type>
        <definition>LieGroupControllers::ProportionalDerivativeControllerR3d BipedalLocomotion::TSID::CoMTask::m_R3Controller</definition>
        <argsstring></argsstring>
        <name>m_R3Controller</name>
        <briefdescription>
<para>P Controller in R3. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="43" column="62" bodyfile="BipedalLocomotion/TSID/CoMTask.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a1b46891a07c8931963e69ca5f4ad230f" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler_1_1VariableDescription" kindref="compound">System::VariablesHandler::VariableDescription</ref></type>
        <definition>System::VariablesHandler::VariableDescription BipedalLocomotion::TSID::CoMTask::m_robotAccelerationVariable</definition>
        <argsstring></argsstring>
        <name>m_robotAccelerationVariable</name>
        <briefdescription>
<para>Variable describing the robot acceleration (base + joint) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="46" column="51" bodyfile="BipedalLocomotion/TSID/CoMTask.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a7d11d085ea0b666bb291d8aa939604e4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::CoMTask::m_isInitialized</definition>
        <argsstring></argsstring>
        <name>m_isInitialized</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the task has been initialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="54" column="10" bodyfile="BipedalLocomotion/TSID/CoMTask.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1aa642d8da6bae5013709a456ef8157767" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::CoMTask::m_isValid</definition>
        <argsstring></argsstring>
        <name>m_isValid</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the task is valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="55" column="10" bodyfile="BipedalLocomotion/TSID/CoMTask.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a23ffff245ee7de0d7f2406159abd5b61" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; iDynTree::KinDynComputations &gt;</type>
        <definition>std::shared_ptr&lt;iDynTree::KinDynComputations&gt; BipedalLocomotion::TSID::CoMTask::m_kinDyn</definition>
        <argsstring></argsstring>
        <name>m_kinDyn</name>
        <briefdescription>
<para>Pointer to a KinDynComputations object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="57" column="21" bodyfile="BipedalLocomotion/TSID/CoMTask.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a623c1a5aeb5eb8ae199fafd1f08ba7a6" prot="private" static="no" mutable="no">
        <type>std::array&lt; bool, m_linearVelocitySize &gt;</type>
        <definition>std::array&lt;bool, m_linearVelocitySize&gt; BipedalLocomotion::TSID::CoMTask::m_mask</definition>
        <argsstring></argsstring>
        <name>m_mask</name>
        <initializer>{true, true, true}</initializer>
        <briefdescription>
<para>Mask used to select the DoFs controlled by the task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="61" column="16" bodyfile="BipedalLocomotion/TSID/CoMTask.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1aa26d081131d3ac849ca06270a31a90cb" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t BipedalLocomotion::TSID::CoMTask::m_DoFs</definition>
        <argsstring></argsstring>
        <name>m_DoFs</name>
        <initializer>{m_linearVelocitySize}</initializer>
        <briefdescription>
<para>DoFs associated to the task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="62" column="17" bodyfile="BipedalLocomotion/TSID/CoMTask.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a694f5b3a8e9bb03b48fe92004a470cc5" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd BipedalLocomotion::TSID::CoMTask::m_jacobian</definition>
        <argsstring></argsstring>
        <name>m_jacobian</name>
        <briefdescription>
<para>CoM Jacobian matrix in MIXED representation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="63" column="21" bodyfile="BipedalLocomotion/TSID/CoMTask.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1aede268494a33319a87ef83fe5e554575" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t BipedalLocomotion::TSID::CoMTask::m_linearVelocitySize</definition>
        <argsstring></argsstring>
        <name>m_linearVelocitySize</name>
        <initializer>{3}</initializer>
        <briefdescription>
<para>Size of the linear velocity vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="51" column="34" bodyfile="BipedalLocomotion/TSID/CoMTask.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a7590ca0048132445108daa3d67a0e659" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t BipedalLocomotion::TSID::CoMTask::m_spatialVelocitySize</definition>
        <argsstring></argsstring>
        <name>m_spatialVelocitySize</name>
        <initializer>{6}</initializer>
        <briefdescription>
<para>Size of the spatial velocity vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="52" column="34" bodyfile="BipedalLocomotion/TSID/CoMTask.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1ab2f946ab57ef2f71953512251a307559" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::CoMTask::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; paramHandler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ae8bd038ace5d8bccda37b62c5712f22b">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>paramHandler</declname>
        </param>
        <briefdescription>
<para>Initialize the task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paramHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameters handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="5" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>robot_acceleration_variable_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the variable contained in <computeroutput>VariablesHandler</computeroutput> describing the robot acceleration   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>kp_linear</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput> or <computeroutput>vector&lt;double&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Gain of the position controller   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>kd_linear</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput> or <computeroutput>vector&lt;double&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Gain of the linear velocity controller   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>mask</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector&lt;bool&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Mask representing the DoFs controlled. E.g. [1,0,1] will enable the control on the x and z coordinates only. (Default value, [1,1,1])   </para>
</entry><entry thead="no" align='center'><para>No   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. Where the generalized robot velocity is a vector containing the base spatial-velocity (expressed in mixed representation) and the joint velocities. </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="81" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a2662893646184c5116ca58361769bd45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::CoMTask::setKinDyn</definition>
        <argsstring>(std::shared_ptr&lt; iDynTree::KinDynComputations &gt; kinDyn)</argsstring>
        <name>setKinDyn</name>
        <param>
          <type>std::shared_ptr&lt; iDynTree::KinDynComputations &gt;</type>
          <declname>kinDyn</declname>
        </param>
        <briefdescription>
<para>Set the kinDynComputations object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kinDyn</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a kinDynComputations object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="88" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a9dad79e04ccbb53e994f48261cdfedd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::CoMTask::setVariablesHandler</definition>
        <argsstring>(const System::VariablesHandler &amp;variablesHandler) override</argsstring>
        <name>setVariablesHandler</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a898c2f93e48aeeb41e29d17c17b95437">setVariablesHandler</reimplements>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref> &amp;</type>
          <declname>variablesHandler</declname>
        </param>
        <briefdescription>
<para>Set the set of variables required by the task. </para>
        </briefdescription>
        <detaileddescription>
<para>The variables are stored in the <ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variablesHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to a variables handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The handler must contain a variable named as the parameter <computeroutput>robot_acceleration_variable_name</computeroutput> stored in the parameter handler. The variable represents the generalized acceleration of the robot. Where the generalized robot acceleration is a vector containing the base spatial-acceleration (expressed in mixed representation) and the joints acceleration. </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="101" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a51f32365f6d523620a057332f59cd9ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::CoMTask::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1accd4ab19a7e8738abe53b485d8acbf1c">update</reimplements>
        <briefdescription>
<para>Update the content of the element. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="107" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1afd85b1f23d8e8832794ab3aa70a894de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::CoMTask::setSetPoint</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::Vector3d &gt; position, Eigen::Ref&lt; const Eigen::Vector3d &gt; velocity, Eigen::Ref&lt; const Eigen::Vector3d &gt; acceleration)</argsstring>
        <name>setSetPoint</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::Vector3d &gt;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; const Eigen::Vector3d &gt;</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; const Eigen::Vector3d &gt;</type>
          <declname>acceleration</declname>
        </param>
        <briefdescription>
<para>Set the desired set-point of the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the CoM </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>velocity of the CoM expressed in mixed representation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>acceleration</parametername>
</parameternamelist>
<parameterdescription>
<para>acceleration of the CoM expressed in mixed representation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="116" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a903008ca278ca76560e8e33d92793766" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::size_t</type>
        <definition>std::size_t BipedalLocomotion::TSID::CoMTask::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a34621cd88c6d60909f09e95226f2cd67">size</reimplements>
        <briefdescription>
<para>Get the size of the task. </para>
        </briefdescription>
        <detaileddescription>
<para>(I.e the number of rows of the vector b) <simplesect kind="return"><para>the size of the task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="124" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1afd58f75e69dedcec3085b8ad1a320183" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2f9d37ec58342f227021c12a4a539748" kindref="member">Type</ref></type>
        <definition>Type BipedalLocomotion::TSID::CoMTask::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ac20d8e993c66663b61f587d9642f3e8a">type</reimplements>
        <briefdescription>
<para>The <ref refid="classBipedalLocomotion_1_1TSID_1_1CoMTask" kindref="compound">CoMTask</ref> is an equality task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the size of the task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="130" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1CoMTask_1aa54d65b28cbfc9624c4a98cf7e3a2a30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::CoMTask::isValid</definition>
        <argsstring>() const override</argsstring>
        <name>isValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2566bae7a097d11b420b89cdd3f2002f">isValid</reimplements>
        <briefdescription>
<para>Determines the validity of the objects retrieved with <ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad510fff46eb9cbbc65775b1a9490e297" kindref="member">getA()</ref> and <ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a8c65780b85d3927038c3320d3cfca730" kindref="member">getB()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the objects are valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/CoMTask.h" line="136" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>ComTask is a concrete implementation of the <ref refid="structBipedalLocomotion_1_1TSID_1_1TSIDLinearTask" kindref="compound">TSIDLinearTask</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Please use this element if you want to control the position of the CoM. The task assumes perfect control of the robot acceleration <formula id="161">$\dot{\nu}$</formula> that contains the base linear and angular acceleration expressed in mixed representation and the joints acceleration. The task represents the following equation <formula id="226">\[ J \dot{\nu} + \dot{J} \nu = \dot{v}_{CoM} ^ * \]</formula> where <formula id="101">$J$</formula> is the robot CoM jacobian and <formula id="227">$\dot{v}_{CoM} ^ *$</formula> is the desired acceleration. The desired acceleration is chosen such that the CoM will asymptotically converge to the desired trajectory. <formula id="228">$\dot{v} ^ *$</formula> is computed with a standard PD controller in <formula id="103">$R^3$</formula>. <simplesect kind="note"><para>Please refer to <ulink url="https://github.com/ami-iit/lie-group-controllers">https://github.com/ami-iit/lie-group-controllers</ulink> if you are interested in the implementation of the PD controllers. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BipedalLocomotion::TSID::CoMTask</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1CoMTask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::TSID::TSIDLinearTask</label>
        <link refid="structBipedalLocomotion_1_1TSID_1_1TSIDLinearTask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::LinearTask</label>
        <link refid="classBipedalLocomotion_1_1System_1_1LinearTask"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BipedalLocomotion::TSID::CoMTask</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1CoMTask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>BipedalLocomotion::TSID::TSIDLinearTask</label>
        <link refid="structBipedalLocomotion_1_1TSID_1_1TSIDLinearTask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::LinearTask</label>
        <link refid="classBipedalLocomotion_1_1System_1_1LinearTask"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_description</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/TSID/CoMTask.h" line="41" column="1" bodyfile="BipedalLocomotion/TSID/CoMTask.h" bodystart="42" bodyend="137"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad510fff46eb9cbbc65775b1a9490e297" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>getA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a8c65780b85d3927038c3320d3cfca730" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>getB</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a1d152be26f750d933bc07baf1344e97d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>getDescription</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a591be3a0f92c9e1c40ccadf85c21f739" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>getResidual</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1ab2f946ab57ef2f71953512251a307559" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1aa54d65b28cbfc9624c4a98cf7e3a2a30" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>isValid</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1aa95f6768b7cd98aab6727e2eb729a308" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>m_A</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a0e86b8ecde78a0d6e87fcb2c373b2151" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>m_b</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a5efff74f1d43a59376a9c93a0400120a" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>m_description</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1aa26d081131d3ac849ca06270a31a90cb" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>m_DoFs</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a7d11d085ea0b666bb291d8aa939604e4" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>m_isInitialized</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1aa642d8da6bae5013709a456ef8157767" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>m_isValid</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a694f5b3a8e9bb03b48fe92004a470cc5" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>m_jacobian</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a23ffff245ee7de0d7f2406159abd5b61" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>m_kinDyn</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1aede268494a33319a87ef83fe5e554575" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>m_linearVelocitySize</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a623c1a5aeb5eb8ae199fafd1f08ba7a6" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>m_mask</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a3cbd9ce108e18ad263c9224b80c299f4" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>m_R3Controller</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a1b46891a07c8931963e69ca5f4ad230f" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>m_robotAccelerationVariable</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a7590ca0048132445108daa3d67a0e659" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>m_spatialVelocitySize</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a2662893646184c5116ca58361769bd45" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>setKinDyn</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1afd85b1f23d8e8832794ab3aa70a894de" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>setSetPoint</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a9dad79e04ccbb53e994f48261cdfedd2" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>setVariablesHandler</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a903008ca278ca76560e8e33d92793766" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>size</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a06fab6bb77dd556a74c76b6e57dc0ba1" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>subA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad6a0743b7902e539d634358b269741b4" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>subA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2f9d37ec58342f227021c12a4a539748" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>Type</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1afd58f75e69dedcec3085b8ad1a320183" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>type</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1CoMTask_1a51f32365f6d523620a057332f59cd9ac" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>update</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a22edf322e7504d1a197b687d265445d7" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>~LinearTask</name></member>
      <member refid="structBipedalLocomotion_1_1TSID_1_1TSIDLinearTask_1a7ba94cb320d7b4c367ed01c14ef29d73" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::CoMTask</scope><name>~TSIDLinearTask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
