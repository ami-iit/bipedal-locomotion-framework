<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem" prot="public" virt="non-virtual">BipedalLocomotion::ContinuousDynamicalSystem::DynamicalSystem&lt; FixedBaseDynamics &gt;</basecompoundref>
    <includes local="no">BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a2fe8484fe797a5dd81c666e097418a79" prot="private" static="no" mutable="no">
        <type>iDynTree::KinDynComputations</type>
        <definition>iDynTree::KinDynComputations BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics::m_kinDyn</definition>
        <argsstring></argsstring>
        <name>m_kinDyn</name>
        <briefdescription>
<para>kinDynComputations object </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="74" column="34" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a8ac5575029e45cb0815747c59ec810f7" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics::m_actuatedDoFs</definition>
        <argsstring></argsstring>
        <name>m_actuatedDoFs</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Number of actuated degree of freedom. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="75" column="17" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1aef1c1e9d74ac7eff8a00102b6db6a37a" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics::m_gravity</definition>
        <argsstring></argsstring>
        <name>m_gravity</name>
        <initializer>{0, 0, -Math::StandardAccelerationOfGravitation}</initializer>
        <briefdescription>
<para>Gravity vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="77" column="21" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a8a2016657c6b6c49462cba224c75cbcd" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics::m_massMatrix</definition>
        <argsstring></argsstring>
        <name>m_massMatrix</name>
        <briefdescription>
<para>Floating-base mass matrix <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="80" column="21" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a119cc36daed16171ee43663a268c691b" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics::m_robotBase</definition>
        <argsstring></argsstring>
        <name>m_robotBase</name>
        <briefdescription>
<para>Name of the frame associated to the robot base. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="81" column="17" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1ac5bcf690f5c451ad53f00cf165943d0d" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics::m_knownCoefficent</definition>
        <argsstring></argsstring>
        <name>m_knownCoefficent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="85" column="21" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a465713eb5c34945d8f6072f991d8f7c8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics::m_useMassMatrixRegularizationTerm</definition>
        <argsstring></argsstring>
        <name>m_useMassMatrixRegularizationTerm</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="87" column="10" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a35d7c2ed068f83d1e47114b9b759df28" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics::m_massMatrixReglarizationTerm</definition>
        <argsstring></argsstring>
        <name>m_massMatrixReglarizationTerm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="88" column="21" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a5e7127550078cb160c8542f5f517142c" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1abe9655801c0f0a1391619325e571cd57" kindref="member">State</ref></type>
        <definition>State BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics::m_state</definition>
        <argsstring></argsstring>
        <name>m_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="90" column="11" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a5e7c20e9277cb4142fe8472528d9325e" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1a4c2a4bbac36e26c14571f79bfd6e4fa7" kindref="member">Input</ref></type>
        <definition>Input BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics::m_controlInput</definition>
        <argsstring></argsstring>
        <name>m_controlInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="91" column="11" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a888cb4a4f138daa08e115272572e1603" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>initialize</name>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics" kindref="compound">FixedBaseDynamics</ref> system. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameter handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The following parameters are used <table rows="3" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>gravity</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Value of the Gravity. If not defined Math::StandardAccelerationOfGravitation is used   </para>
</entry><entry thead="no" align='center'><para>No    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>base_link</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the link considered as fixed base in the model. If not defined the default link will be used. Please check <ulink url="https://robotology.github.io/idyntree/master/classiDynTree_1_1Model.html#a1a8dc1c97b99ffc51dbf93ecff20e8c1">here</ulink>   </para>
</entry><entry thead="no" align='center'><para>No   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>true in case of success/false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="105" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a1c9d50c33a6e1476ac05a40b9fe8a025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics::setRobotModel</definition>
        <argsstring>(const iDynTree::Model &amp;model)</argsstring>
        <name>setRobotModel</name>
        <param>
          <type>const iDynTree::Model &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Set the model of the robot. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>an iDynTree robot model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="112" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1ab7c97c7e5aaf7bb504db08932a6f32b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics::setMassMatrixRegularization</definition>
        <argsstring>(const Eigen::Ref&lt; const Eigen::MatrixXd &gt; &amp;matrix)</argsstring>
        <name>setMassMatrixRegularization</name>
        <param>
          <type>const Eigen::Ref&lt; const Eigen::MatrixXd &gt; &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
<para>Set the mass matrix regularization term. </para>
        </briefdescription>
        <detaileddescription>
<para>i.e. <formula id="76">$\bar{M} = M + M _ {reg}$</formula>. Where <formula id="77">$M$</formula> is the mass matrix and <formula id="78">$M_{reg}$</formula> is the matrix regularization term. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>matrix</parametername>
</parameternamelist>
<parameterdescription>
<para>the regularization term for the mass matrix. @notice Calling this function is not mandatory. Call it only if you want to add a regularization term. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="122" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1acdccff38d978985beacaa73e8f8c2d00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics::dynamics</definition>
        <argsstring>(const std::chrono::nanoseconds &amp;time, StateDerivative &amp;stateDerivative)</argsstring>
        <name>dynamics</name>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1a664a4e9ae349c0b14f83d98a90e52022" kindref="member">StateDerivative</ref> &amp;</type>
          <declname>stateDerivative</declname>
        </param>
        <briefdescription>
<para>Computes the floating based system dynamics. </para>
        </briefdescription>
        <detaileddescription>
<para>It return <formula id="69">$f(x, u, t)$</formula>. <simplesect kind="note"><para>The control input and the state have to be set separately with the methods setControlInput and setState. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>the time at witch the dynamics is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stateDynamics</parametername>
</parameternamelist>
<parameterdescription>
<para>tuple containing a reference to the element of the state derivative </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="132" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a14ec9a9d11edde6ef2eb4b979820975a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics::setState</definition>
        <argsstring>(const State &amp;state)</argsstring>
        <name>setState</name>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1abe9655801c0f0a1391619325e571cd57" kindref="member">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Set the state of the dynamical system. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>tuple containing a const reference to the state elements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="139" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1af5182cd7a52710b2780aa6f12b3ec545" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1abe9655801c0f0a1391619325e571cd57" kindref="member">State</ref> &amp;</type>
        <definition>const State&amp; BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics::getState</definition>
        <argsstring>() const</argsstring>
        <name>getState</name>
        <briefdescription>
<para>Get the state to the dynamical system. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the current state of the dynamical system </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="145" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1aa9057a03d97318828a07971b083917cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics::setControlInput</definition>
        <argsstring>(const Input &amp;controlInput)</argsstring>
        <name>setControlInput</name>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1a4c2a4bbac36e26c14571f79bfd6e4fa7" kindref="member">Input</ref> &amp;</type>
          <declname>controlInput</declname>
        </param>
        <briefdescription>
<para>Set the control input to the dynamical system. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controlInput</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the control input used to compute the system dynamics. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="152" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics" kindref="compound">FixedBaseDynamics</ref> describes a the dynamics of a fixed base system The <ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics" kindref="compound">FixedBaseDynamics</ref> inherits from a generic <ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem" kindref="compound">DynamicalSystem</ref> where the State is described by a <ref refid="structBipedalLocomotion_1_1GenericContainer_1_1named__tuple" kindref="compound">BipedalLocomotion::GenericContainer::named_tuple</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><table rows="3" cols="3"><row>
<entry thead="yes" align='center'><para>Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>s</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>Eigen::VectorXd</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Joint positions [in rad]    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>ds</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>Eigen::VectorXd</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Joint velocities [in rad/s]   </para>
</entry></row>
</table>
</para>
<para>The <computeroutput>StateDerivative</computeroutput> is described by a <ref refid="structBipedalLocomotion_1_1GenericContainer_1_1named__tuple" kindref="compound">BipedalLocomotion::GenericContainer::named_tuple</ref> <table rows="3" cols="3"><row>
<entry thead="yes" align='center'><para>Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>ds</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>Eigen::VectorXd</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Joint velocities [in rad]    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para>dds<computeroutput>\ilinebr &lt;/td&gt; &lt;td class=&quot;markdownTableBodyCenter&quot;&gt;</computeroutput>Eigen::VectorXd`   </para>
</entry><entry thead="no" align='center'><para>Joint accelerations [in rad/s^2]   </para>
</entry></row>
</table>
</para>
<para>The <computeroutput>Input</computeroutput> is described by a <ref refid="structBipedalLocomotion_1_1GenericContainer_1_1named__tuple" kindref="compound">BipedalLocomotion::GenericContainer::named_tuple</ref> <table rows="2" cols="3"><row>
<entry thead="yes" align='center'><para>Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>tau</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>Eigen::VectorXd</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Joint torque [in N/m]   </para>
</entry></row>
</table>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</label>
        <link refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::ContinuousDynamicalSystem::DynamicalSystem&lt; _Derived &gt;</label>
        <link refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::ContinuousDynamicalSystem::DynamicalSystem&lt; FixedBaseDynamics &gt;</label>
        <link refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; FixedBaseDynamics &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</label>
        <link refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::ContinuousDynamicalSystem::DynamicalSystem&lt; _Derived &gt;</label>
        <link refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::ContinuousDynamicalSystem::DynamicalSystem&lt; FixedBaseDynamics &gt;</label>
        <link refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; FixedBaseDynamics &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" line="72" column="1" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h" bodystart="73" bodyend="153"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1acdccff38d978985beacaa73e8f8c2d00" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>dynamics</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1af5182cd7a52710b2780aa6f12b3ec545" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>getState</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a888cb4a4f138daa08e115272572e1603" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1a4c2a4bbac36e26c14571f79bfd6e4fa7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a8ac5575029e45cb0815747c59ec810f7" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>m_actuatedDoFs</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a5e7c20e9277cb4142fe8472528d9325e" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>m_controlInput</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1aef1c1e9d74ac7eff8a00102b6db6a37a" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>m_gravity</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a2fe8484fe797a5dd81c666e097418a79" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>m_kinDyn</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1ac5bcf690f5c451ad53f00cf165943d0d" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>m_knownCoefficent</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a8a2016657c6b6c49462cba224c75cbcd" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>m_massMatrix</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a35d7c2ed068f83d1e47114b9b759df28" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>m_massMatrixReglarizationTerm</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a119cc36daed16171ee43663a268c691b" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>m_robotBase</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a5e7127550078cb160c8542f5f517142c" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>m_state</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a465713eb5c34945d8f6072f991d8f7c8" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>m_useMassMatrixRegularizationTerm</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1aa9057a03d97318828a07971b083917cb" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>setControlInput</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1ab7c97c7e5aaf7bb504db08932a6f32b8" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>setMassMatrixRegularization</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a1c9d50c33a6e1476ac05a40b9fe8a025" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>setRobotModel</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FixedBaseDynamics_1a14ec9a9d11edde6ef2eb4b979820975a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>setState</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1abe9655801c0f0a1391619325e571cd57" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>State</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1a664a4e9ae349c0b14f83d98a90e52022" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FixedBaseDynamics</scope><name>StateDerivative</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
