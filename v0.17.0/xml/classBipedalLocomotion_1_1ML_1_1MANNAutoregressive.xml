<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::ML::MANNAutoregressive</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1Advanceable" prot="public" virt="non-virtual">BipedalLocomotion::System::Advanceable&lt; MANNAutoregressiveInput, MANNAutoregressiveOutput &gt;</basecompoundref>
    <includes local="no">BipedalLocomotion/ML/MANNAutoregressive.h</includes>
    <innerclass refid="structBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1_1AutoregressiveState" prot="public">BipedalLocomotion::ML::MANNAutoregressive::AutoregressiveState</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a04a682d07c84fbff9238e6f26f262afb" prot="public" static="no" strong="yes">
        <type></type>
        <name>SupportFoot</name>
        <enumvalue id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a04a682d07c84fbff9238e6f26f262afba945d5e233cf7d6240f6b783b36a374ff" prot="public">
          <name>Left</name>
          <briefdescription>
<para>Left foot. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a04a682d07c84fbff9238e6f26f262afba92b09c7c48c520c3c55e497875da437c" prot="public">
          <name>Right</name>
          <briefdescription>
<para>Right foot. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a04a682d07c84fbff9238e6f26f262afba88183b946cc5f0e8c96b2e66e1c74a7e" prot="public">
          <name>Unknown</name>
          <briefdescription>
<para>This is useful to detect unexpected behaviour. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SupportFoot is an enum that contains the support foot considered by the <ref refid="classBipedalLocomotion_1_1ML_1_1MANN" kindref="compound">MANN</ref> network. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNAutoregressive.h" line="123" column="5" bodyfile="BipedalLocomotion/ML/MANNAutoregressive.h" bodystart="124" bodyend="128"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1ac04971ade0880eff2d722e0134b17270" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; BipedalLocomotion::ML::MANNAutoregressive::m_pimpl</definition>
        <argsstring></argsstring>
        <name>m_pimpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNAutoregressive.h" line="320" column="21" bodyfile="BipedalLocomotion/ML/MANNAutoregressive.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1afa303b39fc0fa8f09d687c08f1402302" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ML::MANNAutoregressive::MANNAutoregressive</definition>
        <argsstring>()</argsstring>
        <name>MANNAutoregressive</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNAutoregressive.h" line="198" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a2c2ab2e81d9f64a45b63402b4e089039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ML::MANNAutoregressive::~MANNAutoregressive</definition>
        <argsstring>()</argsstring>
        <name>~MANNAutoregressive</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNAutoregressive.h" line="203" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1aa15f5d6fcb4a772b3f4d55663bef6fe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ML::MANNAutoregressive::setRobotModel</definition>
        <argsstring>(const iDynTree::Model &amp;model)</argsstring>
        <name>setRobotModel</name>
        <param>
          <type>const iDynTree::Model &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Set the robot model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>model of the robot considered by the network. Please load the very same model with the same joint serialization used to train the <ref refid="classBipedalLocomotion_1_1ML_1_1MANN" kindref="compound">MANN</ref> network. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNAutoregressive.h" line="211" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a589a1932f42faefa31a95ed39dda5523" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ML::MANNAutoregressive::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; paramHandler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a6db247d3db83217a16e963d01f6bcb77">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>paramHandler</declname>
        </param>
        <briefdescription>
<para>Initialize the network. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paramHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameters handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="9" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>sampling_time</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Sampling considered in the inference.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>root_link_frame_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of of the root link frame in the model.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>chest_link_frame_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of of the chest link frame in the model.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>right_foot_frame_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of of the right foot frame in the model.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>left_foot_frame_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of of the left foot frame in the model.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>forward_direction</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>String containing &apos;x&apos;, &apos;y&apos; or &apos;z&apos; representing the foot link forward axis. Currently, only &apos;x&apos; is supported.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>mocap_frame_rate</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>int</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Frame rate of the mocap data.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>past_projected_horizon</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Number of seconds of the past base horizon considered in the neural network.   </para>
</entry><entry thead="no" align='center'><para>Yes   </para>
</entry></row>
</table>
It is also required to define two groups <computeroutput>LEFT_FOOT</computeroutput> and <computeroutput>RIGHT_FOOT</computeroutput> that contains the following parameter <table rows="7" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>number_of_corners</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>int</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Number of corners associated to the foot   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>corner_&lt;i&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector&lt;double&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Position of the corner expressed in the foot frame. It must be from 0 to number_of_corners - 1.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>on_threshold</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Distance between the foot and the ground used as on threshold of the trigger to activate the contact. It must be positive.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>off_threshold</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Distance between the foot and the ground used as off threshold of the trigger to deactivate the contact. It must be positive.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>switch_on_after</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Seconds to wait for before switching to activate from deactivate contact. Ensure it&apos;s greater than sampling time.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>switch_off_after</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Seconds to wait for before switching to deactivate from activate contact. Ensure it&apos;s greater than sampling time.   </para>
</entry><entry thead="no" align='center'><para>Yes   </para>
</entry></row>
</table>
Finally it also required to define a group named <computeroutput><ref refid="classBipedalLocomotion_1_1ML_1_1MANN" kindref="compound">MANN</ref></computeroutput> that contains the following parameter <table rows="3" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>onnx_model_path</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Path to the <computeroutput>onnx</computeroutput> model that will be loaded to perform inference.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>projected_base_datapoints</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>int</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Number of samples of the base horizon considered in the model (It must be an even number).   </para>
</entry><entry thead="no" align='center'><para>Yes   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNAutoregressive.h" line="244" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a6603138dd787213cce454e0e09cf8e92" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ML::MANNAutoregressive::setInput</definition>
        <argsstring>(const Input &amp;input) override</argsstring>
        <name>setInput</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1InputPort_1ad2637be5c9075a2d8f09fedc6a42d808">setInput</reimplements>
        <param>
          <type>const Input &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Set the input to the autoregressive model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>input to the model </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNAutoregressive.h" line="252" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a7b41a89972cc97991a81b6fb45d06b6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ML::MANNAutoregressive::advance</definition>
        <argsstring>() override</argsstring>
        <name>advance</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a67107e46e831d93f572558b541aab6d2">advance</reimplements>
        <briefdescription>
<para>Perform one step of the autoregressive model. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNAutoregressive.h" line="258" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a3ab56390684010eeed1dffcfa31b7760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ML::MANNAutoregressive::reset</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; jointPositions, const manif::SE3d &amp;basePose)</argsstring>
        <name>reset</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>jointPositions</declname>
        </param>
        <param>
          <type>const manif::SE3d &amp;</type>
          <declname>basePose</declname>
        </param>
        <briefdescription>
<para>Reset the autoregressive model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jointPositions</parametername>
</parameternamelist>
<parameterdescription>
<para>joint position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>basePose</parametername>
</parameternamelist>
<parameterdescription>
<para>base pose. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>Please call this function before calling <ref refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a7b41a89972cc97991a81b6fb45d06b6f" kindref="member">MANNAutoregressive::advance</ref> the first time. </para>
</simplesect>
<simplesect kind="warning"><para>This function assumes that both the feet are in contact with the ground, the joint and base velocities equal to zero. </para>
</simplesect>
<simplesect kind="warning"><para>This function reset also the internal time to zero. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNAutoregressive.h" line="270" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a19015274106acc28e92f02d3a45a211c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ML::MANNAutoregressive::reset</definition>
        <argsstring>(const AutoregressiveState &amp;autoregressiveState)</argsstring>
        <name>reset</name>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1_1AutoregressiveState" kindref="compound">AutoregressiveState</ref> &amp;</type>
          <declname>autoregressiveState</declname>
        </param>
        <briefdescription>
<para>Reset the autoregressive model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>autoregressiveState</parametername>
</parameternamelist>
<parameterdescription>
<para>the autoregressive state at which you want to reset your model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>Please call this function the before calling <ref refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a7b41a89972cc97991a81b6fb45d06b6f" kindref="member">MANNAutoregressive::advance</ref> the first time time. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNAutoregressive.h" line="279" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1abb880a57b4158dda1ee86b77a53d3411" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ML::MANNAutoregressive::isOutputValid</definition>
        <argsstring>() const override</argsstring>
        <name>isOutputValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ac50de29a6160baa2bba195af9d69430a">isOutputValid</reimplements>
        <briefdescription>
<para>Check if the output is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the output is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNAutoregressive.h" line="285" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1acf0e665f6dd1d88b339333f1b49ad656" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const Output &amp;</type>
        <definition>const Output&amp; BipedalLocomotion::ML::MANNAutoregressive::getOutput</definition>
        <argsstring>() const override</argsstring>
        <name>getOutput</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a8c089ecf2dd8ff0fb2732233994b6cac">getOutput</reimplements>
        <briefdescription>
<para>Get the output from <ref refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive" kindref="compound">MANNAutoregressive</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the output of the system. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNAutoregressive.h" line="291" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1afe08f2345ce3f8dd9f6b2a0f6d1e0644" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structBipedalLocomotion_1_1ML_1_1MANNInput" kindref="compound">MANNInput</ref> &amp;</type>
        <definition>const MANNInput&amp; BipedalLocomotion::ML::MANNAutoregressive::getMANNInput</definition>
        <argsstring>() const</argsstring>
        <name>getMANNInput</name>
        <briefdescription>
<para>Get the structure that has been used as input for <ref refid="classBipedalLocomotion_1_1ML_1_1MANN" kindref="compound">MANN</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the <ref refid="structBipedalLocomotion_1_1ML_1_1MANNInput" kindref="compound">MANNInput</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNAutoregressive.h" line="297" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1acd530aeb197f36b21fde09a9ad70ee4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1_1AutoregressiveState" kindref="compound">AutoregressiveState</ref> &amp;</type>
        <definition>const AutoregressiveState&amp; BipedalLocomotion::ML::MANNAutoregressive::getAutoregressiveState</definition>
        <argsstring>() const</argsstring>
        <name>getAutoregressiveState</name>
        <briefdescription>
<para>Get the autoregressive state required to rest <ref refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive" kindref="compound">MANNAutoregressive</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the <ref refid="structBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1_1AutoregressiveState" kindref="compound">AutoregressiveState</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNAutoregressive.h" line="303" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1acfc990bb60b5dae71ae019a018105f34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ML::MANNAutoregressive::populateInitialAutoregressiveState</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; jointPositions, const manif::SE3d &amp;basePose, MANNAutoregressive::AutoregressiveState &amp;state)</argsstring>
        <name>populateInitialAutoregressiveState</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>jointPositions</declname>
        </param>
        <param>
          <type>const manif::SE3d &amp;</type>
          <declname>basePose</declname>
        </param>
        <param>
          <type><ref refid="structBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1_1AutoregressiveState" kindref="compound">MANNAutoregressive::AutoregressiveState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Get the autoregressive state required to reset <ref refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive" kindref="compound">MANNAutoregressive</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jointPositions</parametername>
</parameternamelist>
<parameterdescription>
<para>joint position </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>basePose</parametername>
</parameternamelist>
<parameterdescription>
<para>base pose </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>autoregressive state that will be populated </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>This function assumes that both the feet are in contact with the ground, the joint and base velocities equal to zero. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNAutoregressive.h" line="314" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive" kindref="compound">MANNAutoregressive</ref> is a class that allows to perform autoregressive inference with Mode-Adaptive Neural Networks (<ref refid="classBipedalLocomotion_1_1ML_1_1MANN" kindref="compound">MANN</ref>). </para>
    </briefdescription>
    <detaileddescription>
<sect2 id="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1mann_autoregressive">
<title>MANN Autoregressive</title>
<para>The following diagram shows how the <ref refid="classBipedalLocomotion_1_1ML_1_1MANN" kindref="compound">MANN</ref> network is used inside the <ref refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive" kindref="compound">MANNAutoregressive</ref> class. The output of <ref refid="classBipedalLocomotion_1_1ML_1_1MANN" kindref="compound">MANN</ref> is given to two blocks, one computes the kinematically feasible base position, while the other blends it to te input provided by the user <image type="html" name="https://user-images.githubusercontent.com/16744101/237064989-b3d0d62f-2fc9-4ca4-9b11-ecca0c8c378e.png" alt="mann_autoregressive" inline="yes"></image>
 <simplesect kind="note"><para>The implementation of the class follows the work presented in &quot;P. M. Viceconte et al.,
&quot;ADHERENT: Learning Human-like Trajectory Generators for Whole-body Control of Humanoid Robots," in IEEE Robotics and Automation Letters, vol. 7, no. 2, pp. 2779-2786, April 2022, doi: 10.1109/LRA.2022.3141658." <ulink url="https://doi.org/10.1109/LRA.2022.3141658">https://doi.org/10.1109/LRA.2022.3141658</ulink> </para>
</simplesect>
</para>
</sect2>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; MANNAutoregressiveInput, MANNAutoregressiveOutput &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; MANNAutoregressiveInput, MANNAutoregressiveOutput &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::ML::MANNAutoregressive</label>
        <link refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; MANNAutoregressiveInput, MANNAutoregressiveOutput &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; MANNAutoregressiveInput, MANNAutoregressiveOutput &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::ML::MANNAutoregressive</label>
        <link refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/ML/MANNAutoregressive.h" line="116" column="1" bodyfile="BipedalLocomotion/ML/MANNAutoregressive.h" bodystart="118" bodyend="321"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a7b41a89972cc97991a81b6fb45d06b6f" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a09ee5b41c77c6b626f4d5cb775065325" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1aaeb3eba3073fbc844dea1eba4c9b68f3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ac1549cb26bd896e27370e97b0795ba3f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a618ab786bb43814b3b3012b843fce93b" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>close</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1acd530aeb197f36b21fde09a9ad70ee4d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>getAutoregressiveState</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1afe08f2345ce3f8dd9f6b2a0f6d1e0644" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>getMANNInput</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1acf0e665f6dd1d88b339333f1b49ad656" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>getOutput</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a589a1932f42faefa31a95ed39dda5523" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a975a7ecbf38c917c7b72519581fc7dba" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a27c614cb30c1e4b78e64791f4919dfa7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a74d1418613e89a7f2993ea936228a44a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a02ec5c947f1d2d83d2952c3b899cc58f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1abb880a57b4158dda1ee86b77a53d3411" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>isOutputValid</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1ac04971ade0880eff2d722e0134b17270" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>m_pimpl</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1afa303b39fc0fa8f09d687c08f1402302" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>MANNAutoregressive</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ae147cdee9ff9160a9dfe0d3e349a9aad" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1adf0d9fc07bab0ec5d4db7f3a35816bf2" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a54f476d3c8d6d003fb714309ea6272aa" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1adb341b37472241b6da8b552166308d7b" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1af5e15f5e4962a5c8e0f0c0a49adb9ca1" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ad5c6ce3ad7d2a064d7bb512fe0bc489e" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a69603f2c9c608815908425b5b8c2005c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>Output</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a7c0d15e677a1935918fc747ba4c25ec1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a0a39b891749961d34507b4b591886741" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a581340f280eca1890a8a7b2331761b57" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1acfc990bb60b5dae71ae019a018105f34" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>populateInitialAutoregressiveState</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a3ab56390684010eeed1dffcfa31b7760" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>reset</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a19015274106acc28e92f02d3a45a211c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>reset</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a6603138dd787213cce454e0e09cf8e92" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1aa15f5d6fcb4a772b3f4d55663bef6fe3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>setRobotModel</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a04a682d07c84fbff9238e6f26f262afb" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>SupportFoot</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1afae1137cba829874bab4a1d25d559896" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>~Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ac9b58b0d2f6ae8821b873ed6f9817ccb" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>~InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a2c2ab2e81d9f64a45b63402b4e089039" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>~MANNAutoregressive</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1adcc49c38152c9204dcab4f8e87f68977" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNAutoregressive</scope><name>~OutputPort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
