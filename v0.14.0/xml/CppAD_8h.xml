<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="CppAD_8h" kind="file" language="C++">
    <compoundname>CppAD.h</compoundname>
    <includes local="no">Eigen/Dense</includes>
    <includes local="no">cppad/cppad.hpp</includes>
    <includes local="no">cppad/example/cppad_eigen.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>BipedalLocomotion/AutoDiff/CppAD.h</label>
        <link refid="CppAD_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cppad/cppad.hpp</label>
      </node>
      <node id="2">
        <label>Eigen/Dense</label>
      </node>
      <node id="4">
        <label>cppad/example/cppad_eigen.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="structEigen_1_1internal_1_1cast__impl_3_01CppAD_1_1AD_3_01Scalar_01_4_00_01Scalar_01_4" prot="public">Eigen::internal::cast_impl&lt; CppAD::AD&lt; Scalar &gt;, Scalar &gt;</innerclass>
    <innernamespace refid="namespaceEigen">Eigen</innernamespace>
    <innernamespace refid="namespaceEigen_1_1internal">Eigen::internal</innernamespace>
    <innernamespace refid="namespaceBipedalLocomotion">BipedalLocomotion</innernamespace>
    <innernamespace refid="namespaceBipedalLocomotion_1_1AutoDiff">BipedalLocomotion::AutoDiff</innernamespace>
    <innernamespace refid="namespaceBipedalLocomotion_1_1AutoDiff_1_1CppAD">BipedalLocomotion::AutoDiff::CppAD</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="CppAD_8h_1a2213d9d8ff64ff534f3a57c9afa3b924" prot="public" static="no">
        <name>EIGEN_MAKE_TYPEDEFS</name>
        <param><defname>Type</defname></param>
        <param><defname>TypeSuffix</defname></param>
        <param><defname>Size</defname></param>
        <param><defname>SizeSuffix</defname></param>
        <initializer>    typedef Eigen::Matrix&lt;Type, Size, Size&gt; Matrix##SizeSuffix##TypeSuffix; \
    typedef Eigen::Matrix&lt;Type, Size, 1&gt; Vector##SizeSuffix##TypeSuffix;    \
    typedef Eigen::Matrix&lt;Type, 1, Size&gt; RowVector##SizeSuffix##TypeSuffix;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/AutoDiff/CppAD.h" line="46" column="9" bodyfile="BipedalLocomotion/AutoDiff/CppAD.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CppAD_8h_1a892e22c9b467dd1a68caa783b05d15f5" prot="public" static="no">
        <name>EIGEN_MAKE_TYPEDEFS_ALL_SIZES</name>
        <param><defname>Type</defname></param>
        <param><defname>TypeSuffix</defname></param>
        <initializer>    EIGEN_MAKE_TYPEDEFS(Type, TypeSuffix, Eigen::Dynamic, X)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/AutoDiff/CppAD.h" line="51" column="9" bodyfile="BipedalLocomotion/AutoDiff/CppAD.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="authors"><para>Giulio Romualdi </para>
</simplesect>
<simplesect kind="copyright"><para>2020 Istituto Italiano di Tecnologia (IIT). This software may be modified and distributed under the terms of the BSD-3-Clause license. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="BipedalLocomotion/AutoDiff/CppAD.h"/>
  </compounddef>
</doxygen>
