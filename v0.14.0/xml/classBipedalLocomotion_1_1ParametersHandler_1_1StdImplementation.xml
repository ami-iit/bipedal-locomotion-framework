<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::ParametersHandler::StdImplementation</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" prot="public" virt="non-virtual">BipedalLocomotion::ParametersHandler::IParametersHandler</basecompoundref>
    <includes local="no">BipedalLocomotion/ParametersHandler/StdImplementation.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a17923b25d760e92fe8de42070dcbae88" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::any &gt;</type>
        <definition>std::unordered_map&lt;std::string, std::any&gt; BipedalLocomotion::ParametersHandler::StdImplementation::m_map</definition>
        <argsstring></argsstring>
        <name>m_map</name>
        <briefdescription>
<para>Map containing parameters stored in std::any objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="30" column="24" bodyfile="BipedalLocomotion/ParametersHandler/StdImplementation.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1add86bdb033cf4012d76ec85c38240980" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::StdImplementation::getParameterPrivate</definition>
        <argsstring>(const std::string &amp;parameterName, T &amp;parameter) const</argsstring>
        <name>getParameterPrivate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Private implementation of getParameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="41" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1af092e4924c4f31e6febb5165cb8d6e2a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::StdImplementation::setParameterPrivate</definition>
        <argsstring>(const std::string &amp;parameterName, const T &amp;parameter)</argsstring>
        <name>setParameterPrivate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Private implementation of setParameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="50" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a1e287efbbf2cfa4ff7d01b2abbd00ba3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ParametersHandler::StdImplementation::StdImplementation</definition>
        <argsstring>(const std::unordered_map&lt; std::string, std::any &gt; &amp;map)</argsstring>
        <name>StdImplementation</name>
        <param>
          <type>const std::unordered_map&lt; std::string, std::any &gt; &amp;</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to a map object. The object is copied inside the Handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="57" column="5" bodyfile="BipedalLocomotion/ParametersHandler/StdImplementation.h" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a65bcc610f8c586920e26e876577b3dc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ParametersHandler::StdImplementation::StdImplementation</definition>
        <argsstring>()=default</argsstring>
        <name>StdImplementation</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="65" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a0f16cec1df87789da4096d52a3558b33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::StdImplementation::set</definition>
        <argsstring>(const std::unordered_map&lt; std::string, std::any &gt; &amp;searchable)</argsstring>
        <name>set</name>
        <param>
          <type>const std::unordered_map&lt; std::string, std::any &gt; &amp;</type>
          <declname>searchable</declname>
        </param>
        <briefdescription>
<para>Set the handler from an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="71" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1ab28e970cd27385d23bac09aea675ea7d" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::StdImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, int &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1afdb240a10f9cb5345c86574f974d7e5d">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [int]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="79" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a6bdcc4fcbe7d3ba85df91bd6953d08ed" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::StdImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, double &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a309b3e41c285bafc3abfdaa19107a94d">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [double]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="87" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a6fff9373e0c1e4655732b29b55cefee0" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::StdImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, std::string &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a6f70e7ff8d921ddd86b1d787dea31817">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [std::string]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="95" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1abf3da53b0e22b6bc966e0429ffddf050" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::StdImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, bool &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a580f55f92e5113e5e956500a642c334f">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [bool]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="103" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a197c7bf275b55ba2b0a79f5443f0ec56" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::StdImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, std::chrono::nanoseconds &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a32cea1fc7fe065fbd6222b26a4e8e669">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>std::chrono::nanoseconds &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [std::chrono::nanoseconds]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="111" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a0ab67dbbdc2750c18f1fe907f4b59a5f" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::StdImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, std::vector&lt; bool &gt; &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a4b5d92b170d471760070c9b19fcf2355">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>std::vector&lt; bool &gt; &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [std::vector&lt;bool&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="119" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1afe6e81d64f37e1fe4fc47cd6deed1bb8" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::StdImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, GenericContainer::Vector&lt; int &gt;::Ref parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ae2157684e9278364f16d491771db4de8">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; int &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;int&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="127" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a0ec6d7bf5d4b967da3d7952550e81585" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::StdImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, GenericContainer::Vector&lt; double &gt;::Ref parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a3f9f2f10327e8e1f090357ca49fa6149">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; double &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;double&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="135" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1add66ec6c371a21d84e0e965479a56012" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::StdImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, GenericContainer::Vector&lt; std::string &gt;::Ref parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1aaa35d7a32c43c5d75e48ad1228d1d335">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; std::string &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;std::string&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="143" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a6f602667e5c3929dbfd8231717c6bc04" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::StdImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, GenericContainer::Vector&lt; std::chrono::nanoseconds &gt;::Ref parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a9145dbaf1143a1a3da2f415e6c67894a">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; std::chrono::nanoseconds &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;std::chrono::nanoseconds&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="151" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a28f7f90b5a967a03559efffdb88dbf5c" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::StdImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const int &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a6d237be21441ba4ad215955d1e59d78c">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [int]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="159" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1ac4cfaab8b1deee996f4c78eeca6dc57b" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::StdImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const double &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1af3d26ff754203f7ea0c18026299279f5">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [double]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="166" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a30e08ad5b04bd51eb6911ea655d7c111" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::StdImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const std::string &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a676ff31c0f2a523d23115acb820fa8c4">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [std::string]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="173" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a517b6a22ee166c60f09bda0b81d3b79b" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::StdImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const char *parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ac50bdd9d7c54d542979601502aa63724">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [const char*]. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>this is required because of <ulink url="https://www.bfilipek.com/2019/07/surprising-conversions-char-bool.html">https://www.bfilipek.com/2019/07/surprising-conversions-char-bool.html</ulink> </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="182" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a3337d1d53551a453e82c1e3f41b89a90" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::StdImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const bool &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a31e93d8df853c8e714ea0f02b561692d">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [bool]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="189" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a2a53ec58219560ae51aeef6be4a4e06f" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::StdImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const std::chrono::nanoseconds &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1aedd08b1aeedb09aff57a9dbb19dc88c1">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [std::chrono::nanoseconds]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="196" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a7abf3b2e68e819c6aba8c670c083d97b" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::StdImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const std::vector&lt; bool &gt; &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1adbf64417a4c269eea758e895545a05db">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [std::vector&lt;bool&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="204" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1ac6986781f6c43ed8a08b182e7b5cbaed" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::StdImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const GenericContainer::Vector&lt; const int &gt;::Ref parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a99835b09d78671d66f127bb3f2f11a8f">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; const int &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [GenericContainer::Vector&lt;int&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="211" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a6b9bf79b93199e68bce2083047870bed" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::StdImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const GenericContainer::Vector&lt; const double &gt;::Ref parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a6acc040bc256463c628af59033a59863">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; const double &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [GenericContainer::Vector&lt;double&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="219" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1af6e3479a2da7783fbc157601e8daec73" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::StdImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const GenericContainer::Vector&lt; const std::string &gt;::Ref parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ab1cb738f9b06bf45c5f0bb63c87b87eb">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; const std::string &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [GenericContainer::Vector&lt;std::string&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="227" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a6cdb52e049af728d2c820af987b23e1f" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::StdImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const GenericContainer::Vector&lt; const std::chrono::nanoseconds &gt;::Ref parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a8446ca0f4e9028008b73ce6080615e64">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; const std::chrono::nanoseconds &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;std::chrono::nanoseconds&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="235" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1ac7d19a2945a765e3239598b007d45a32" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>weak_ptr</type>
        <definition>weak_ptr BipedalLocomotion::ParametersHandler::StdImplementation::getGroup</definition>
        <argsstring>(const std::string &amp;name) const final</argsstring>
        <name>getGroup</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a8ca1254ab3f157396052b4df3cefc15d">getGroup</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get a Group from the handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the group </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">IParametersHandler</ref>, if the group is not found the weak pointer cannot be locked </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="245" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a4da25fef8c4a501ce481ed4b9aef54ad" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::StdImplementation::setGroup</definition>
        <argsstring>(const std::string &amp;name, shared_ptr newGroup) final</argsstring>
        <name>setGroup</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a78e1afbcb61323fa5d5a105466aa4a1b">setGroup</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>shared_ptr</type>
          <declname>newGroup</declname>
        </param>
        <briefdescription>
<para>Set a new group on the handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the group </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newGroup</parametername>
</parameternamelist>
<parameterdescription>
<para>shared pointer to the new group </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="252" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1aed41af1c7497f57b8a6aa798a2491916" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string BipedalLocomotion::ParametersHandler::StdImplementation::toString</definition>
        <argsstring>() const final</argsstring>
        <name>toString</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a22dd2d7f429a64092bba1e3bdbe29713">toString</reimplements>
        <briefdescription>
<para>Return a standard text representation of the content of the object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a string containing the standard text representation of the content of the object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="258" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1af19873df37726f9f16ef8500e3122f54" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::StdImplementation::isEmpty</definition>
        <argsstring>() const final</argsstring>
        <name>isEmpty</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ab15662ad31c0c5c750a8c0d301bd7033">isEmpty</reimplements>
        <briefdescription>
<para>Check if the handler contains parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the handler does not contain any parameters, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="264" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a7f3459d34a0688a57a1280b2f17ddc45" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::StdImplementation::clear</definition>
        <argsstring>() final</argsstring>
        <name>clear</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a7b1cd95ec96c2ea547d4e1acf5f4c3bd">clear</reimplements>
        <briefdescription>
<para>Clears the handler from all the parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="269" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a37fa6ff92195856b511126c08a326760" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>shared_ptr</type>
        <definition>shared_ptr BipedalLocomotion::ParametersHandler::StdImplementation::clone</definition>
        <argsstring>() const final</argsstring>
        <name>clone</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ad77436eee28c16c2ac6218ee04ec88b5">clone</reimplements>
        <briefdescription>
<para>Clone the content of the content. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a IParametersHandler::shared_ptr clone of the current handler. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="275" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1ab6e5d0501d5bf2a92ceb2ed46e7ab03b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ParametersHandler::StdImplementation::~StdImplementation</definition>
        <argsstring>()=default</argsstring>
        <name>~StdImplementation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="277" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Parameters handler interface. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BipedalLocomotion::ParametersHandler::IParametersHandler</label>
        <link refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::ParametersHandler::StdImplementation</label>
        <link refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BipedalLocomotion::ParametersHandler::IParametersHandler</label>
        <link refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::ParametersHandler::StdImplementation</label>
        <link refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/ParametersHandler/StdImplementation.h" line="28" column="1" bodyfile="BipedalLocomotion/ParametersHandler/StdImplementation.h" bodystart="29" bodyend="278"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a7f3459d34a0688a57a1280b2f17ddc45" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>clear</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a37fa6ff92195856b511126c08a326760" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>clone</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1ac7d19a2945a765e3239598b007d45a32" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>getGroup</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1ab28e970cd27385d23bac09aea675ea7d" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a6bdcc4fcbe7d3ba85df91bd6953d08ed" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a6fff9373e0c1e4655732b29b55cefee0" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1abf3da53b0e22b6bc966e0429ffddf050" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a197c7bf275b55ba2b0a79f5443f0ec56" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a0ab67dbbdc2750c18f1fe907f4b59a5f" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1afe6e81d64f37e1fe4fc47cd6deed1bb8" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a0ec6d7bf5d4b967da3d7952550e81585" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1add66ec6c371a21d84e0e965479a56012" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a6f602667e5c3929dbfd8231717c6bc04" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1add86bdb033cf4012d76ec85c38240980" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>getParameterPrivate</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1af19873df37726f9f16ef8500e3122f54" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>isEmpty</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a17923b25d760e92fe8de42070dcbae88" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>m_map</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a0f16cec1df87789da4096d52a3558b33" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>set</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a4da25fef8c4a501ce481ed4b9aef54ad" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>setGroup</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a28f7f90b5a967a03559efffdb88dbf5c" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1ac4cfaab8b1deee996f4c78eeca6dc57b" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a30e08ad5b04bd51eb6911ea655d7c111" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a517b6a22ee166c60f09bda0b81d3b79b" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a3337d1d53551a453e82c1e3f41b89a90" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a2a53ec58219560ae51aeef6be4a4e06f" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a7abf3b2e68e819c6aba8c670c083d97b" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1ac6986781f6c43ed8a08b182e7b5cbaed" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a6b9bf79b93199e68bce2083047870bed" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1af6e3479a2da7783fbc157601e8daec73" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a6cdb52e049af728d2c820af987b23e1f" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1af092e4924c4f31e6febb5165cb8d6e2a" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>setParameterPrivate</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a8afda2b689337f31a090dabd24df53f3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>shared_ptr</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a1e287efbbf2cfa4ff7d01b2abbd00ba3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>StdImplementation</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a65bcc610f8c586920e26e876577b3dc9" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>StdImplementation</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1aed41af1c7497f57b8a6aa798a2491916" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>toString</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1af52e37b791362f025487212e52256c51" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>unique_ptr</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a03eb908249dcb6c90bd61bdb55bd9aa7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>weak_ptr</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ac2dde38cbb2c531e185a40144b1d98ac" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>~IParametersHandler</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1ab6e5d0501d5bf2a92ceb2ed46e7ab03b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::StdImplementation</scope><name>~StdImplementation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
