<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1System_1_1RosClock" kind="class" language="C++" prot="public" final="yes">
    <compoundname>BipedalLocomotion::System::RosClock</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1IClock" prot="public" virt="non-virtual">BipedalLocomotion::System::IClock</basecompoundref>
    <includes local="no">BipedalLocomotion/System/RosClock.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1System_1_1RosClock_1a3b23aa454ce04b972b292200b59e7ea3" prot="private" static="no" mutable="no">
        <type>rclcpp::Clock</type>
        <definition>rclcpp::Clock BipedalLocomotion::System::RosClock::m_clock</definition>
        <argsstring></argsstring>
        <name>m_clock</name>
        <briefdescription>
<para>Ros2 clock. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/RosClock.h" line="52" column="19" bodyfile="BipedalLocomotion/System/RosClock.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1RosClock_1a012f7ae6a37f527b7503fe8b6dd7c1ef" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>std::chrono::duration&lt; double &gt;</type>
        <definition>std::chrono::duration&lt;double&gt; BipedalLocomotion::System::RosClock::now</definition>
        <argsstring>() final</argsstring>
        <name>now</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1IClock_1a0e89b562a22f1290761787be01084145">now</reimplements>
        <briefdescription>
<para>Get ROS current time. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the current time computed from <computeroutput>rclcpp::Clock::now()</computeroutput> </para>
</simplesect>
<simplesect kind="note"><para><computeroutput><ref refid="namespaceBipedalLocomotion_1a5927a6bb897f521070adfb6ca866668f" kindref="member">BipedalLocomotion::clock()</ref>.<ref refid="classBipedalLocomotion_1_1System_1_1RosClock_1a012f7ae6a37f527b7503fe8b6dd7c1ef" kindref="member">now()</ref>.count()</computeroutput> returns a double containing the seconds since epoch. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/RosClock.h" line="61" column="27"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1RosClock_1a572a7c94b44c3b6bc3f044612c729d6d" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::System::RosClock::sleepFor</definition>
        <argsstring>(const std::chrono::duration&lt; double &gt; &amp;sleepDuration) final</argsstring>
        <name>sleepFor</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1IClock_1a67693d3efb397f36a29a3cd293a3b254">sleepFor</reimplements>
        <param>
          <type>const std::chrono::duration&lt; double &gt; &amp;</type>
          <declname>sleepDuration</declname>
        </param>
        <briefdescription>
<para>Blocks the execution of the current thread for at least the specified sleepDuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>duration to sleep </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/RosClock.h" line="67" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1RosClock_1a703b948c60e1349843412579983683db" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::System::RosClock::sleepUntil</definition>
        <argsstring>(const std::chrono::duration&lt; double &gt; &amp;sleepTime) final</argsstring>
        <name>sleepUntil</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1IClock_1a24adc25ba8b11d0a01bcde4eeb4fd91b">sleepUntil</reimplements>
        <param>
          <type>const std::chrono::duration&lt; double &gt; &amp;</type>
          <declname>sleepTime</declname>
        </param>
        <briefdescription>
<para>Blocks the execution of the current thread until specified sleepTime has been reached. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>to block until </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/RosClock.h" line="73" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1RosClock_1a962c94da417af69dd731a193acdc0f26" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::System::RosClock::yield</definition>
        <argsstring>() final</argsstring>
        <name>yield</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1IClock_1a220afc1ddc1f19474cb0da08a3cd3640">yield</reimplements>
        <briefdescription>
<para>Provides a hint to the implementation to reschedule the execution of threads, allowing other threads to run. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/RosClock.h" line="79" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1System_1_1RosClock" kindref="compound">RosClock</ref> implements the <ref refid="classBipedalLocomotion_1_1System_1_1IClock" kindref="compound">IClock</ref> interface using ros functions. </para>
    </briefdescription>
    <detaileddescription>
<para>The clock can be easily used as follows <programlisting filename=".cpp"><codeline><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Clock_8h" kindref="compound">BipedalLocomotion/System/Clock.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="RosClock_8h" kindref="compound">BipedalLocomotion/System/RosClock.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><ref refid="classBipedalLocomotion_1_1System_1_1ClockBuilder_1a77ee6a0ac739edfbb9fecc64d16ebf0a" kindref="member">BipedalLocomotion::System::ClockBuilder::setFactory</ref>(std::make_shared&lt;BipedalLocomotion::System::RosClockFactory&gt;(argc,<sp/>argv));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>sleep</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><ref refid="namespaceBipedalLocomotion_1a5927a6bb897f521070adfb6ca866668f" kindref="member">BipedalLocomotion::clock</ref>().<ref refid="classBipedalLocomotion_1_1System_1_1IClock_1a67693d3efb397f36a29a3cd293a3b254" kindref="member">sleepFor</ref>(2000ms);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start<sp/>=<sp/><ref refid="namespaceBipedalLocomotion_1a5927a6bb897f521070adfb6ca866668f" kindref="member">BipedalLocomotion::clock</ref>().<ref refid="classBipedalLocomotion_1_1System_1_1IClock_1a0e89b562a22f1290761787be01084145" kindref="member">now</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>foo();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end<sp/>=<sp/><ref refid="namespaceBipedalLocomotion_1a5927a6bb897f521070adfb6ca866668f" kindref="member">BipedalLocomotion::clock</ref>().<ref refid="classBipedalLocomotion_1_1System_1_1IClock_1a0e89b562a22f1290761787be01084145" kindref="member">now</ref>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>std::chrono::duration&lt;double,<sp/>std::milli&gt;<sp/>elapsed<sp/>=<sp/>end<sp/>-<sp/>start;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BipedalLocomotion::System::IClock</label>
        <link refid="classBipedalLocomotion_1_1System_1_1IClock"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::System::RosClock</label>
        <link refid="classBipedalLocomotion_1_1System_1_1RosClock"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BipedalLocomotion::System::IClock</label>
        <link refid="classBipedalLocomotion_1_1System_1_1IClock"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::System::RosClock</label>
        <link refid="classBipedalLocomotion_1_1System_1_1RosClock"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/System/RosClock.h" line="49" column="1" bodyfile="BipedalLocomotion/System/RosClock.h" bodystart="50" bodyend="80"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1IClock_1a99a28837fb84b2a1df959890ec561f82" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::System::RosClock</scope><name>IClock</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1RosClock_1a3b23aa454ce04b972b292200b59e7ea3" prot="private" virt="non-virtual"><scope>BipedalLocomotion::System::RosClock</scope><name>m_clock</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1RosClock_1a012f7ae6a37f527b7503fe8b6dd7c1ef" prot="public" virt="virtual"><scope>BipedalLocomotion::System::RosClock</scope><name>now</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1RosClock_1a572a7c94b44c3b6bc3f044612c729d6d" prot="public" virt="virtual"><scope>BipedalLocomotion::System::RosClock</scope><name>sleepFor</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1RosClock_1a703b948c60e1349843412579983683db" prot="public" virt="virtual"><scope>BipedalLocomotion::System::RosClock</scope><name>sleepUntil</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1RosClock_1a962c94da417af69dd731a193acdc0f26" prot="public" virt="virtual"><scope>BipedalLocomotion::System::RosClock</scope><name>yield</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1IClock_1a77e56163bf5079bd23380849f69266aa" prot="public" virt="virtual"><scope>BipedalLocomotion::System::RosClock</scope><name>~IClock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
