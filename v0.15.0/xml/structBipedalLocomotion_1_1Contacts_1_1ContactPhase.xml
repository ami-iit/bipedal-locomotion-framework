<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structBipedalLocomotion_1_1Contacts_1_1ContactPhase" kind="struct" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Contacts::ContactPhase</compoundname>
    <includes local="no">BipedalLocomotion/Contacts/ContactPhase.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structBipedalLocomotion_1_1Contacts_1_1ContactPhase_1a3fe51d74a527de43cb198d91e801652f" prot="public" static="no" mutable="no">
        <type>std::chrono::nanoseconds</type>
        <definition>std::chrono::nanoseconds BipedalLocomotion::Contacts::ContactPhase::beginTime</definition>
        <argsstring></argsstring>
        <name>beginTime</name>
        <initializer>{std::chrono::nanoseconds::zero()}</initializer>
        <briefdescription>
<para>The phase initial time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactPhase.h" line="38" column="30" bodyfile="BipedalLocomotion/Contacts/ContactPhase.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structBipedalLocomotion_1_1Contacts_1_1ContactPhase_1a979ff853067cbeb11a85188d6373c09c" prot="public" static="no" mutable="no">
        <type>std::chrono::nanoseconds</type>
        <definition>std::chrono::nanoseconds BipedalLocomotion::Contacts::ContactPhase::endTime</definition>
        <argsstring></argsstring>
        <name>endTime</name>
        <initializer>{std::chrono::nanoseconds::zero()}</initializer>
        <briefdescription>
<para>The phase end time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactPhase.h" line="43" column="30" bodyfile="BipedalLocomotion/Contacts/ContactPhase.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structBipedalLocomotion_1_1Contacts_1_1ContactPhase_1adfd2902578bc798418a6434829c0f979" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, ContactList::const_iterator &gt;</type>
        <definition>std::unordered_map&lt;std::string, ContactList::const_iterator&gt; BipedalLocomotion::Contacts::ContactPhase::activeContacts</definition>
        <argsstring></argsstring>
        <name>activeContacts</name>
        <briefdescription>
<para>The set of contacts active during the phase. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactPhase.h" line="48" column="24" bodyfile="BipedalLocomotion/Contacts/ContactPhase.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structBipedalLocomotion_1_1Contacts_1_1ContactPhase_1afca6b914a564cfcd1ba9372c6347642e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::ContactPhase::isListIncluded</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>isListIncluded</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Utility function to check if a list is present amongst the active contacts. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The label of the list to be checked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if key is present amongst the active contacts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Contacts/ContactPhase.h" line="55" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Struct defining a contact phase. </para>
    </briefdescription>
    <detaileddescription>
<para>Each phase is characterized by a set of contacts which remain active for the entirety of the phase. <simplesect kind="note"><para>Mathematically speaking the interval of the phase is defined as following <formula id="185">\[ I = [t_b \; t_e) \]</formula> where <formula id="186">$t_b$</formula> is the <ref refid="structBipedalLocomotion_1_1Contacts_1_1ContactPhase_1a3fe51d74a527de43cb198d91e801652f" kindref="member">ContactPhase::beginTime</ref> and <formula id="187">$t_e$</formula> is the <ref refid="structBipedalLocomotion_1_1Contacts_1_1ContactPhase_1a979ff853067cbeb11a85188d6373c09c" kindref="member">ContactPhase::endTime</ref>. The end time is not included in the phase. </para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="7">
        <label>K</label>
      </node>
      <node id="8">
        <label>T</label>
      </node>
      <node id="6">
        <label>std::unordered_map&lt; K, T &gt;</label>
        <childnode refid="7" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="3">
        <label>std::set&lt; K &gt;::const_iterator</label>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Contacts::ContactPhase</label>
        <link refid="structBipedalLocomotion_1_1Contacts_1_1ContactPhase"/>
        <childnode refid="2" relation="usage">
          <edgelabel>activeContacts</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::unordered_map&lt; std::string, ContactList::const_iterator &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; std::string, ContactList::const_iterator &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/Contacts/ContactPhase.h" line="33" column="1" bodyfile="BipedalLocomotion/Contacts/ContactPhase.h" bodystart="34" bodyend="56"/>
    <listofallmembers>
      <member refid="structBipedalLocomotion_1_1Contacts_1_1ContactPhase_1adfd2902578bc798418a6434829c0f979" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactPhase</scope><name>activeContacts</name></member>
      <member refid="structBipedalLocomotion_1_1Contacts_1_1ContactPhase_1a3fe51d74a527de43cb198d91e801652f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactPhase</scope><name>beginTime</name></member>
      <member refid="structBipedalLocomotion_1_1Contacts_1_1ContactPhase_1a979ff853067cbeb11a85188d6373c09c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactPhase</scope><name>endTime</name></member>
      <member refid="structBipedalLocomotion_1_1Contacts_1_1ContactPhase_1afca6b914a564cfcd1ba9372c6347642e" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::ContactPhase</scope><name>isListIncluded</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
