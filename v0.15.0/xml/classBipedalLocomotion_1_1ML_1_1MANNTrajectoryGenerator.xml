<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::ML::MANNTrajectoryGenerator</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1Advanceable" prot="public" virt="non-virtual">BipedalLocomotion::System::Advanceable&lt; MANNTrajectoryGeneratorInput, MANNTrajectoryGeneratorOutput &gt;</basecompoundref>
    <includes local="no">BipedalLocomotion/ML/MANNTrajectoryGenerator.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1a62b24e34994e17325e915db2700f365f" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; BipedalLocomotion::ML::MANNTrajectoryGenerator::m_pimpl</definition>
        <argsstring></argsstring>
        <name>m_pimpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNTrajectoryGenerator.h" line="168" column="21" bodyfile="BipedalLocomotion/ML/MANNTrajectoryGenerator.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1a885987a83ce5a4d07a4a861cbc3e789f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ML::MANNTrajectoryGenerator::MANNTrajectoryGenerator</definition>
        <argsstring>()</argsstring>
        <name>MANNTrajectoryGenerator</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNTrajectoryGenerator.h" line="84" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1a45814a870f307e40ed8bcb5b9a5609d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ML::MANNTrajectoryGenerator::~MANNTrajectoryGenerator</definition>
        <argsstring>()</argsstring>
        <name>~MANNTrajectoryGenerator</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNTrajectoryGenerator.h" line="89" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1a68600891a27c4c05d98c8ec59015c37f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ML::MANNTrajectoryGenerator::setRobotModel</definition>
        <argsstring>(const iDynTree::Model &amp;model)</argsstring>
        <name>setRobotModel</name>
        <param>
          <type>const iDynTree::Model &amp;</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>Set the robot model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>model</parametername>
</parameternamelist>
<parameterdescription>
<para>model of the robot considered by the network. Please load the very same model with the same joint serialization used to train the <ref refid="classBipedalLocomotion_1_1ML_1_1MANN" kindref="compound">MANN</ref> network. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNTrajectoryGenerator.h" line="97" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1aebbf74a6a0e2cd2891671bb1f25ffd39" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ML::MANNTrajectoryGenerator::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; paramHandler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a6db247d3db83217a16e963d01f6bcb77">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>paramHandler</declname>
        </param>
        <briefdescription>
<para>Initialize the trajectory planner. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paramHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameters handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="9" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>time_horizon</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Horizon of the planner.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>sampling_time</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Sampling considered in the inference.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>root_link_frame_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of of the root link frame in the model.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>chest_link_frame_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of of the chest link frame in the model.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>right_foot_frame_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of of the right foot frame in the model.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>left_foot_frame_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of of the left foot frame in the model.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>forward_direction</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>String cointaining &apos;x&apos;, &apos;y&apos; or &apos;z&apos; representing the foot link forward axis. Currently, only &apos;x&apos; is supported.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>slow_down_factor</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>int</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>The <computeroutput>horizon</computeroutput> will be <computeroutput>horizon * slow_down_factor</computeroutput>. Same for the <computeroutput>sampling_time</computeroutput> (default value 1).   </para>
</entry><entry thead="no" align='center'><para>No   </para>
</entry></row>
</table>
It is also required to define two groups <computeroutput>LEFT_FOOT</computeroutput> and <computeroutput>RIGHT_FOOT</computeroutput> that contains the following parameter <table rows="3" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>number_of_corners</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>int</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Number of corners associated to the foot   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>corner_&lt;i&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector&lt;double&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Position of the corner expressed in the foot frame. I must be from 0 to number_of_corners - 1   </para>
</entry><entry thead="no" align='center'><para>Yes   </para>
</entry></row>
</table>
Finally it also required to define a group named <computeroutput><ref refid="classBipedalLocomotion_1_1ML_1_1MANN" kindref="compound">MANN</ref></computeroutput> that contains the following parameter <table rows="3" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>onnx_model_path</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Path to the <computeroutput>onnx</computeroutput> model that will be loaded to perform inference   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>projected_base_horizon</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>int</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Number of samples of the base horizon considered in the model   </para>
</entry><entry thead="no" align='center'><para>Yes   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNTrajectoryGenerator.h" line="125" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1af4a074d953c17ccb6b6e206e9fab053e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ML::MANNTrajectoryGenerator::setInput</definition>
        <argsstring>(const Input &amp;input) override</argsstring>
        <name>setInput</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1InputPort_1ad2637be5c9075a2d8f09fedc6a42d808">setInput</reimplements>
        <param>
          <type>const Input &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Set the input to the planner model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>input to the model </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNTrajectoryGenerator.h" line="132" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1a4ae5b3df87a949fafb05aa3cf85ea7b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ML::MANNTrajectoryGenerator::advance</definition>
        <argsstring>() override</argsstring>
        <name>advance</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a67107e46e831d93f572558b541aab6d2">advance</reimplements>
        <briefdescription>
<para>Generate the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNTrajectoryGenerator.h" line="138" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1a2668eaaa1fa2e56703c5509a9de55a4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ML::MANNTrajectoryGenerator::isOutputValid</definition>
        <argsstring>() const override</argsstring>
        <name>isOutputValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ac50de29a6160baa2bba195af9d69430a">isOutputValid</reimplements>
        <briefdescription>
<para>Check if the output is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the output is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNTrajectoryGenerator.h" line="144" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1ab89f4fe820bcced8805275758290ba48" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const Output &amp;</type>
        <definition>const Output&amp; BipedalLocomotion::ML::MANNTrajectoryGenerator::getOutput</definition>
        <argsstring>() const override</argsstring>
        <name>getOutput</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a8c089ecf2dd8ff0fb2732233994b6cac">getOutput</reimplements>
        <briefdescription>
<para>Get the output from trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the output of the system. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNTrajectoryGenerator.h" line="150" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1a917e9761f255f3b58f5183d826ddfde9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ML::MANNTrajectoryGenerator::setInitialState</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; jointPositions, const Contacts::EstimatedContact &amp;leftFoot, const Contacts::EstimatedContact &amp;rightFoot, const manif::SE3d &amp;basePose, const std::chrono::nanoseconds &amp;time)</argsstring>
        <name>setInitialState</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>jointPositions</declname>
        </param>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Contacts_1_1EstimatedContact" kindref="compound">Contacts::EstimatedContact</ref> &amp;</type>
          <declname>leftFoot</declname>
        </param>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Contacts_1_1EstimatedContact" kindref="compound">Contacts::EstimatedContact</ref> &amp;</type>
          <declname>rightFoot</declname>
        </param>
        <param>
          <type>const manif::SE3d &amp;</type>
          <declname>basePose</declname>
        </param>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Set the initial state of the planner. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jointPositions</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the joints. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lefFoot</parametername>
</parameternamelist>
<parameterdescription>
<para>status of the left foot. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lefFoot</parametername>
</parameternamelist>
<parameterdescription>
<para>status of the right foot. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>basePose</parametername>
</parameternamelist>
<parameterdescription>
<para>pose of the base. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>initial time of the planner. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ML/MANNTrajectoryGenerator.h" line="160" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator" kindref="compound">MANNTrajectoryGenerator</ref> is a class that uses <ref refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive" kindref="compound">MANNAutoregressive</ref> to generate a kinematically feasible trajectory for humanoid robots. </para>
    </briefdescription>
    <detaileddescription>
<para>The planner will generate a trajectory which duration is equal to <computeroutput>slow_down_factor * time_horizon</computeroutput> seconds. </para>
<sect2 id="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1mann_trajectory_generator">
<title>MANN trajectory generator</title>
<para>The diagram illustrates the utilization of the <ref refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive" kindref="compound">MANNAutoregressive</ref> within the <ref refid="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator" kindref="compound">MANNTrajectoryGenerator</ref> class. <image type="html" name="https://user-images.githubusercontent.com/16744101/239922103-1f23e08b-0091-475a-8879-61af66399c62.png" alt="mann_trajectory_generator" inline="yes"></image>
 To initialize the generator, the user needs to set the initial state using the <ref refid="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1a917e9761f255f3b58f5183d826ddfde9" kindref="member">MANNTrajectoryGenerator::setInitialState</ref> method. The <ref refid="structBipedalLocomotion_1_1ML_1_1MANNTrajectoryGeneratorInput" kindref="compound">MANNTrajectoryGeneratorInput</ref>, provided by the user, serves as the input for the <ref refid="structBipedalLocomotion_1_1ML_1_1MANNAutoregressiveInput" kindref="compound">MANNAutoregressiveInput</ref>, along with the &apos;mergePointIndex.&apos; The <ref refid="structBipedalLocomotion_1_1ML_1_1MANNAutoregressiveInput" kindref="compound">MANNAutoregressiveInput</ref> is assumed to remain constant within the trajectory horizon. The &apos;mergePointIndex&apos; indicates the index at which the new trajectory will be attached. For example, when the <ref refid="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator" kindref="compound">MANNTrajectoryGenerator</ref> generates a trajectory consisting of &apos;N&apos; points, if the &apos;mergePointIndex&apos; is set to 3, the first three elements of the new trajectory will be derived from the previously computed trajectory by <ref refid="structBipedalLocomotion_1_1ML_1_1MANNTrajectoryGeneratorOutput" kindref="compound">MANNTrajectoryGeneratorOutput</ref>, utilizing the previous <ref refid="structBipedalLocomotion_1_1ML_1_1MANNAutoregressiveInput" kindref="compound">MANNAutoregressiveInput</ref>. Subsequently, all points from 3 to N will be evaluated using the current <ref refid="structBipedalLocomotion_1_1ML_1_1MANNAutoregressiveInput" kindref="compound">MANNAutoregressiveInput</ref>. This behavior is facilitated by a mechanism that stores the autoregressive state required for resetting the <ref refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive" kindref="compound">MANNAutoregressive</ref> at the designated merge point. Every time the <ref refid="classBipedalLocomotion_1_1ML_1_1MANNAutoregressive_1a7b41a89972cc97991a81b6fb45d06b6f" kindref="member">MANNAutoregressive::advance()</ref> function is invoked by the <ref refid="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator" kindref="compound">MANNTrajectoryGenerator</ref>, the autoregressive state is stored for future reference. <simplesect kind="note"><para>The implementation of the class follows the work presented in "P. M. Viceconte et al., ADHERENT: Learning Human-like Trajectory Generators for Whole-body Control of Humanoid Robots, in IEEE Robotics and Automation Letters, vol. 7, no. 2, pp. 2779-2786, April 2022, doi: 10.1109/LRA.2022.3141658." <ulink url="https://doi.org/10.1109/LRA.2022.3141658">https://doi.org/10.1109/LRA.2022.3141658</ulink> </para>
</simplesect>
</para>
</sect2>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; MANNTrajectoryGeneratorInput, MANNTrajectoryGeneratorOutput &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; MANNTrajectoryGeneratorInput, MANNTrajectoryGeneratorOutput &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::ML::MANNTrajectoryGenerator</label>
        <link refid="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; MANNTrajectoryGeneratorInput, MANNTrajectoryGeneratorOutput &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; MANNTrajectoryGeneratorInput, MANNTrajectoryGeneratorOutput &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::ML::MANNTrajectoryGenerator</label>
        <link refid="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/ML/MANNTrajectoryGenerator.h" line="77" column="1" bodyfile="BipedalLocomotion/ML/MANNTrajectoryGenerator.h" bodystart="79" bodyend="169"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1a4ae5b3df87a949fafb05aa3cf85ea7b8" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a09ee5b41c77c6b626f4d5cb775065325" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1aaeb3eba3073fbc844dea1eba4c9b68f3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ac1549cb26bd896e27370e97b0795ba3f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a618ab786bb43814b3b3012b843fce93b" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>close</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1ab89f4fe820bcced8805275758290ba48" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>getOutput</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1aebbf74a6a0e2cd2891671bb1f25ffd39" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a975a7ecbf38c917c7b72519581fc7dba" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a27c614cb30c1e4b78e64791f4919dfa7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a74d1418613e89a7f2993ea936228a44a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a02ec5c947f1d2d83d2952c3b899cc58f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1a2668eaaa1fa2e56703c5509a9de55a4d" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>isOutputValid</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1a62b24e34994e17325e915db2700f365f" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>m_pimpl</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1a885987a83ce5a4d07a4a861cbc3e789f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>MANNTrajectoryGenerator</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ae147cdee9ff9160a9dfe0d3e349a9aad" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1adf0d9fc07bab0ec5d4db7f3a35816bf2" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a54f476d3c8d6d003fb714309ea6272aa" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1adb341b37472241b6da8b552166308d7b" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1af5e15f5e4962a5c8e0f0c0a49adb9ca1" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ad5c6ce3ad7d2a064d7bb512fe0bc489e" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a69603f2c9c608815908425b5b8c2005c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>Output</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a7c0d15e677a1935918fc747ba4c25ec1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a0a39b891749961d34507b4b591886741" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a581340f280eca1890a8a7b2331761b57" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1a917e9761f255f3b58f5183d826ddfde9" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>setInitialState</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1af4a074d953c17ccb6b6e206e9fab053e" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1a68600891a27c4c05d98c8ec59015c37f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>setRobotModel</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1afae1137cba829874bab4a1d25d559896" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>~Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ac9b58b0d2f6ae8821b873ed6f9817ccb" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>~InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1ML_1_1MANNTrajectoryGenerator_1a45814a870f307e40ed8bcb5b9a5609d3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>~MANNTrajectoryGenerator</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1adcc49c38152c9204dcab4f8e87f68977" prot="public" virt="virtual"><scope>BipedalLocomotion::ML::MANNTrajectoryGenerator</scope><name>~OutputPort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
