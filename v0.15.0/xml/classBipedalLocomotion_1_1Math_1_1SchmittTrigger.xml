<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Math::SchmittTrigger</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1Advanceable" prot="public" virt="non-virtual">BipedalLocomotion::System::Advanceable&lt; SchmittTriggerInput, SchmittTriggerOutput &gt;</basecompoundref>
    <includes local="no">BipedalLocomotion/Math/SchmittTrigger.h</includes>
    <innerclass refid="structBipedalLocomotion_1_1Math_1_1SchmittTrigger_1_1Params" prot="public">BipedalLocomotion::Math::SchmittTrigger::Params</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1aaf7ee2273e0fa9a7dbe50ea12eea54f5" prot="private" static="no" strong="yes">
        <type></type>
        <name>FSM</name>
        <enumvalue id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1aaf7ee2273e0fa9a7dbe50ea12eea54f5ae599161956d626eda4cb0a5ffb85271c" prot="private">
          <name>Idle</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1aaf7ee2273e0fa9a7dbe50ea12eea54f5a59d87a4758a9d35fbaf6b204341bb399" prot="private">
          <name>Initialized</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1aaf7ee2273e0fa9a7dbe50ea12eea54f5a526d688f37a86d3c3f27d0c5016eb71d" prot="private">
          <name>Reset</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1aaf7ee2273e0fa9a7dbe50ea12eea54f5a5395b713f09574931da391d49d8e7ce7" prot="private">
          <name>OutputInvalid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1aaf7ee2273e0fa9a7dbe50ea12eea54f5a07d94a1654f53217a634a49d8cd31ede" prot="private">
          <name>OutputValid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/SchmittTrigger.h" line="156" column="5" bodyfile="BipedalLocomotion/Math/SchmittTrigger.h" bodystart="157" bodyend="163"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1abdfedef770360e9cfb5834ffb228eb69" prot="private" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Math_1_1SchmittTriggerInput" kindref="compound">SchmittTriggerInput</ref></type>
        <definition>SchmittTriggerInput BipedalLocomotion::Math::SchmittTrigger::m_input</definition>
        <argsstring></argsstring>
        <name>m_input</name>
        <briefdescription>
<para>Last input stored in the trigger. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/SchmittTrigger.h" line="152" column="25" bodyfile="BipedalLocomotion/Math/SchmittTrigger.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1aa6199c770e68dfbb3a672d9ed45bd6f1" prot="private" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Math_1_1SchmittTriggerState" kindref="compound">SchmittTriggerState</ref></type>
        <definition>SchmittTriggerState BipedalLocomotion::Math::SchmittTrigger::m_state</definition>
        <argsstring></argsstring>
        <name>m_state</name>
        <briefdescription>
<para>Current state stored in the trigger. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/SchmittTrigger.h" line="153" column="25" bodyfile="BipedalLocomotion/Math/SchmittTrigger.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1a59743be60af2802202cfe7ff8b5c576c" prot="private" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Math_1_1SchmittTrigger_1_1Params" kindref="compound">Params</ref></type>
        <definition>Params BipedalLocomotion::Math::SchmittTrigger::m_params</definition>
        <argsstring></argsstring>
        <name>m_params</name>
        <briefdescription>
<para>Set of switching parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/SchmittTrigger.h" line="154" column="12" bodyfile="BipedalLocomotion/Math/SchmittTrigger.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1ab9dfc56d43e393a4ef3d62074cd53f4f" prot="private" static="no" mutable="no">
        <type>FSM</type>
        <definition>FSM BipedalLocomotion::Math::SchmittTrigger::m_fsm</definition>
        <argsstring></argsstring>
        <name>m_fsm</name>
        <initializer>{FSM::Idle}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/SchmittTrigger.h" line="165" column="9" bodyfile="BipedalLocomotion/Math/SchmittTrigger.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1acb2f276e248cadb9d2d51c24ff57dcc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Math::SchmittTrigger::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; handler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a6db247d3db83217a16e963d01f6bcb77">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger" kindref="compound">SchmittTrigger</ref> block. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameter handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The following parameters are required <table rows="5" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>on_threshold</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>High value threshold to initiate an ON state switch after switchOnAfter   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>off_threshold</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Low value threshold to initiate an OFF state switch after switchOffAfter   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>switch_on_after</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>chrono:nanoseconds</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Nano seconds to wait for before switching to ON state from OFF state. Ensure it&apos;s greater than sampling time.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>switch_off_after</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>chrono:nanoseconds</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Nano seconds to wait for before switching to OFF state from ON state. Ensure it&apos;s greater than sampling time.   </para>
</entry><entry thead="no" align='center'><para>Yes   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>true in case of success/false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/SchmittTrigger.h" line="101" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1a24e1ed4970b0e45ccf2a95bb51a25991" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Math::SchmittTrigger::initialize</definition>
        <argsstring>(const Params &amp;parameters)</argsstring>
        <name>initialize</name>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Math_1_1SchmittTrigger_1_1Params" kindref="compound">Params</ref> &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger" kindref="compound">SchmittTrigger</ref> block. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter required to initialize the block. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success/false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/SchmittTrigger.h" line="108" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1a55ae088ae16dfc5d723d5f3bd45782a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Math::SchmittTrigger::setState</definition>
        <argsstring>(const SchmittTriggerState &amp;state)</argsstring>
        <name>setState</name>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Math_1_1SchmittTriggerState" kindref="compound">SchmittTriggerState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Set the state of the <ref refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger" kindref="compound">SchmittTrigger</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired state of the <ref refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger" kindref="compound">SchmittTrigger</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the state is successfully set, false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>This function should only be called when the user intends to manually control the system state. In this case, all internal variables required by the trigger will be forcefully updated to the provided <ref refid="structBipedalLocomotion_1_1Math_1_1SchmittTriggerState" kindref="compound">SchmittTriggerState</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/SchmittTrigger.h" line="118" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1a813cd39542e7150c44060a7238a88046" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structBipedalLocomotion_1_1Math_1_1SchmittTriggerState" kindref="compound">SchmittTriggerState</ref> &amp;</type>
        <definition>const SchmittTriggerState&amp; BipedalLocomotion::Math::SchmittTrigger::getState</definition>
        <argsstring>() const</argsstring>
        <name>getState</name>
        <briefdescription>
<para>Get the state of the <ref refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger" kindref="compound">SchmittTrigger</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the internal state of the <ref refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger" kindref="compound">SchmittTrigger</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/SchmittTrigger.h" line="124" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1a80da3b3f093e4370cd6216e9a0d7eeef" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Math::SchmittTrigger::advance</definition>
        <argsstring>() override</argsstring>
        <name>advance</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a67107e46e831d93f572558b541aab6d2">advance</reimplements>
        <briefdescription>
<para>Perform one step of the trigger. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/SchmittTrigger.h" line="130" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1aa2a4f2527741ee1e5d6e2b147b9751cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Math::SchmittTrigger::isOutputValid</definition>
        <argsstring>() const override</argsstring>
        <name>isOutputValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ac50de29a6160baa2bba195af9d69430a">isOutputValid</reimplements>
        <briefdescription>
<para>Check if the output of the trigger is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/SchmittTrigger.h" line="136" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1afec69a815c8333fc8a62db84916d269f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="structBipedalLocomotion_1_1Math_1_1SchmittTriggerOutput" kindref="compound">SchmittTriggerOutput</ref> &amp;</type>
        <definition>const SchmittTriggerOutput&amp; BipedalLocomotion::Math::SchmittTrigger::getOutput</definition>
        <argsstring>() const override</argsstring>
        <name>getOutput</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a8c089ecf2dd8ff0fb2732233994b6cac">getOutput</reimplements>
        <briefdescription>
<para>Get the internal state of the <ref refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger" kindref="compound">SchmittTrigger</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a const reference to the state of the trigger. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/SchmittTrigger.h" line="142" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1ae692d745e0ec26632774af963e551784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Math::SchmittTrigger::setInput</definition>
        <argsstring>(const SchmittTriggerInput &amp;input) override</argsstring>
        <name>setInput</name>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Math_1_1SchmittTriggerInput" kindref="compound">SchmittTriggerInput</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Set the input of the trigger. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>the input of the system. It contains the raw value and the current time instant. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/SchmittTrigger.h" line="149" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger" kindref="compound">SchmittTrigger</ref> implements a discrete version of a <ref refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger" kindref="compound">SchmittTrigger</ref> See <ulink url="https://en.wikipedia.org/wiki/Schmitt_trigger">here</ulink> for further details. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BipedalLocomotion::Math::SchmittTrigger</label>
        <link refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; SchmittTriggerInput, SchmittTriggerOutput &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; SchmittTriggerInput, SchmittTriggerOutput &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BipedalLocomotion::Math::SchmittTrigger</label>
        <link refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; SchmittTriggerInput, SchmittTriggerOutput &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; SchmittTriggerInput, SchmittTriggerOutput &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/Math/SchmittTrigger.h" line="66" column="1" bodyfile="BipedalLocomotion/Math/SchmittTrigger.h" bodystart="68" bodyend="166"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1a80da3b3f093e4370cd6216e9a0d7eeef" prot="public" virt="virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a09ee5b41c77c6b626f4d5cb775065325" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1aaeb3eba3073fbc844dea1eba4c9b68f3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ac1549cb26bd896e27370e97b0795ba3f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a618ab786bb43814b3b3012b843fce93b" prot="public" virt="virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>close</name></member>
      <member refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1aaf7ee2273e0fa9a7dbe50ea12eea54f5" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>FSM</name></member>
      <member refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1afec69a815c8333fc8a62db84916d269f" prot="public" virt="virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>getOutput</name></member>
      <member refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1a813cd39542e7150c44060a7238a88046" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>getState</name></member>
      <member refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1acb2f276e248cadb9d2d51c24ff57dcc9" prot="public" virt="virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1a24e1ed4970b0e45ccf2a95bb51a25991" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a975a7ecbf38c917c7b72519581fc7dba" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a27c614cb30c1e4b78e64791f4919dfa7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a74d1418613e89a7f2993ea936228a44a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a02ec5c947f1d2d83d2952c3b899cc58f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1aa2a4f2527741ee1e5d6e2b147b9751cc" prot="public" virt="virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>isOutputValid</name></member>
      <member refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1ab9dfc56d43e393a4ef3d62074cd53f4f" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>m_fsm</name></member>
      <member refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1abdfedef770360e9cfb5834ffb228eb69" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>m_input</name></member>
      <member refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1a59743be60af2802202cfe7ff8b5c576c" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>m_params</name></member>
      <member refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1aa6199c770e68dfbb3a672d9ed45bd6f1" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>m_state</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ae147cdee9ff9160a9dfe0d3e349a9aad" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1adf0d9fc07bab0ec5d4db7f3a35816bf2" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a54f476d3c8d6d003fb714309ea6272aa" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1adb341b37472241b6da8b552166308d7b" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1af5e15f5e4962a5c8e0f0c0a49adb9ca1" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ad5c6ce3ad7d2a064d7bb512fe0bc489e" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a69603f2c9c608815908425b5b8c2005c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>Output</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a7c0d15e677a1935918fc747ba4c25ec1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a0a39b891749961d34507b4b591886741" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a581340f280eca1890a8a7b2331761b57" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1ae692d745e0ec26632774af963e551784" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ad2637be5c9075a2d8f09fedc6a42d808" prot="public" virt="pure-virtual" ambiguityscope="Advanceable&lt; SchmittTriggerInput, SchmittTriggerOutput &gt;::"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1Math_1_1SchmittTrigger_1a55ae088ae16dfc5d723d5f3bd45782a1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>setState</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1afae1137cba829874bab4a1d25d559896" prot="public" virt="virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>~Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ac9b58b0d2f6ae8821b873ed6f9817ccb" prot="public" virt="virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>~InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1adcc49c38152c9204dcab4f8e87f68977" prot="public" virt="virtual"><scope>BipedalLocomotion::Math::SchmittTrigger</scope><name>~OutputPort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
