<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics" prot="public" virt="non-virtual">BipedalLocomotion::Estimators::RobotDynamicsEstimator::Dynamics</basecompoundref>
    <includes local="no">BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a57657dc901fc7b7b6bfa0b8b4fbabc4d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_useBias</definition>
        <argsstring></argsstring>
        <name>m_useBias</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>If true the dynamics depends on a bias additively. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="35" column="10" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1ae8a5507a24e5a76a9ca9fcdbb6daae04" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_bias</definition>
        <argsstring></argsstring>
        <name>m_bias</name>
        <briefdescription>
<para>The bias is initialized and used only if m_useBias is true. </para>
        </briefdescription>
        <detaileddescription>
<para>False if not specified. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="36" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a635b4f02523f7f13b47ded86a48936e0" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_biasVariableName</definition>
        <argsstring></argsstring>
        <name>m_biasVariableName</name>
        <briefdescription>
<para>Name of the variable containing the bias in the variable handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="38" column="17" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1abc42a61c18ce4b3b8e7caf0fb5c7b95b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> &gt;</type>
        <definition>std::vector&lt;SubModel&gt; BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_subModelList</definition>
        <argsstring></argsstring>
        <name>m_subModelList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="40" column="17" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a9662dc365d0a86f7248837881a358782" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelKinDynWrapper" kindref="compound">SubModelKinDynWrapper</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;SubModelKinDynWrapper&gt; &gt; BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_kinDynWrapperList</definition>
        <argsstring></argsstring>
        <name>m_kinDynWrapperList</name>
        <briefdescription>
<para>List of <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
<para>List of pointers to <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelKinDynWrapper" kindref="compound">SubModelKinDynWrapper</ref> objects. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="41" column="17" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a095805b39cf6e20006c942a783589f4b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_isSubModelListSet</definition>
        <argsstring></argsstring>
        <name>m_isSubModelListSet</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>Boolean flag saying if the sub-model list has been set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="45" column="10" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1ab58e04a67afee16292a92cf199651df5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Eigen::VectorXd &gt;</type>
        <definition>std::vector&lt;Eigen::VectorXd&gt; BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_subModelJointAcc</definition>
        <argsstring></argsstring>
        <name>m_subModelJointAcc</name>
        <briefdescription>
<para>Updated joint acceleration of each sub-model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="46" column="17" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1aafc39763dc288a01d7ce0049b90d3677" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_gravity</definition>
        <argsstring></argsstring>
        <name>m_gravity</name>
        <briefdescription>
<para>Gravitational acceleration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="48" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1aff3857c7402b148b4df808154b9d913f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::size_t &gt;</type>
        <definition>std::vector&lt;std::size_t&gt; BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_subModelsWithAccelerometer</definition>
        <argsstring></argsstring>
        <name>m_subModelsWithAccelerometer</name>
        <briefdescription>
<para>List of indeces saying which sub-model in the m_subDynamics list containa the accelerometer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="49" column="17" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a219ca24bd2d84d579e053aaf889aef60" prot="private" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1UKFInput" kindref="compound">UKFInput</ref></type>
        <definition>UKFInput BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_ukfInput</definition>
        <argsstring></argsstring>
        <name>m_ukfInput</name>
        <briefdescription>
<para>Input of the UKF used to update the dynamics. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="52" column="14" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a76f252ea0c1bf35d900e040a6cf3da0b" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
<para>Name of dynamics. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="53" column="17" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1aadafa52a332ca551d0d7273079d588a5" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref></type>
        <definition>System::VariablesHandler BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_stateVariableHandler</definition>
        <argsstring></argsstring>
        <name>m_stateVariableHandler</name>
        <briefdescription>
<para>Variable handler describing the variables and the sizes in the ukf state vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="54" column="30" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1ac935cd44d408e5c82762ebd9327b7126" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_covSingleVar</definition>
        <argsstring></argsstring>
        <name>m_covSingleVar</name>
        <briefdescription>
<para>Covariance of the accelerometer measurement from configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="56" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a199020b133e316a5b8aae6d99a1d7e08" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_JdotNu</definition>
        <argsstring></argsstring>
        <name>m_JdotNu</name>
        <briefdescription>
<para>Jdot nu. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="58" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a3dc06c9140900c768b98958b93d36f69" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_JvdotBase</definition>
        <argsstring></argsstring>
        <name>m_JvdotBase</name>
        <briefdescription>
<para>Jacobian times the base acceleration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="59" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1aaa641bb3411ee6802d24e875d51b9f10" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_Jsdotdot</definition>
        <argsstring></argsstring>
        <name>m_Jsdotdot</name>
        <briefdescription>
<para>Jacobian times the joint acceleration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="60" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a4cdff4c12716bef6e7707b16ab41f9d8" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_accRg</definition>
        <argsstring></argsstring>
        <name>m_accRg</name>
        <briefdescription>
<para>Gravity rotated in the accelerometer frame. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="61" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a33dd8464f0c03a3cc49412845670026d" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_vCrossW</definition>
        <argsstring></argsstring>
        <name>m_vCrossW</name>
        <briefdescription>
<para>Accelerometer linear velocity cross accelerometer angular velocity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="62" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1ab9896ea75cfc9a43b84566549c20d45b" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_linVel</definition>
        <argsstring></argsstring>
        <name>m_linVel</name>
        <briefdescription>
<para>Accelerometer linear velocity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="64" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a96ab656e9d09db1c19692227a25f9274" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::m_angVel</definition>
        <argsstring></argsstring>
        <name>m_angVel</name>
        <briefdescription>
<para>Accelerometer angular velocity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="65" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a3d8db53a89a3d5e53a369547d60f3f40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::AccelerometerMeasurementDynamics</definition>
        <argsstring>()</argsstring>
        <name>AccelerometerMeasurementDynamics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="71" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1ae71091efb6948ed66cdfcf4bd672f203" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::~AccelerometerMeasurementDynamics</definition>
        <argsstring>()</argsstring>
        <name>~AccelerometerMeasurementDynamics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="76" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1af3eed0c7fa4319eab35a32dc52c98ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; paramHandler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a8c24850ae58c6cdd1d4534e65ca24c7d">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>paramHandler</declname>
        </param>
        <briefdescription>
<para>Initialize the state dynamics. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paramHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameters handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="5" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the state contained in the <computeroutput>VariablesHandler</computeroutput> describing the state associated to this dynamics   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>covariance</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Process covariances   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>dynamic_model</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Type of dynamic model describing the state dynamics.   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>use_bias</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>boolean</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Boolean saying if the dynamics depends on a bias. False if not specified.   </para>
</entry><entry thead="no" align='center'><para>No   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="91" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1aef3f707d1e8fd37079c8fa506012e84c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::finalize</definition>
        <argsstring>(const System::VariablesHandler &amp;stateVariableHandler) override</argsstring>
        <name>finalize</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a09e7ef24e05c4aaca536cc019810e0c5">finalize</reimplements>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref> &amp;</type>
          <declname>stateVariableHandler</declname>
        </param>
        <briefdescription>
<para>Finalize the <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics" kindref="compound">Dynamics</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stateVariableHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>object describing the variables in the state vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>You should call this method after you add ALL the state dynamics to the state variable handler. </para>
</simplesect>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="100" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a49867c92d4a27555f8207a71cd260863" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::setSubModels</definition>
        <argsstring>(const std::vector&lt; SubModel &gt; &amp;subModelList, const std::vector&lt; std::shared_ptr&lt; SubModelKinDynWrapper &gt;&gt; &amp;kinDynWrapperList) override</argsstring>
        <name>setSubModels</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a5eebce9bf3502af823458bbbcfc38133">setSubModels</reimplements>
        <param>
          <type>const std::vector&lt; <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> &gt; &amp;</type>
          <declname>subModelList</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelKinDynWrapper" kindref="compound">SubModelKinDynWrapper</ref> &gt;&gt; &amp;</type>
          <declname>kinDynWrapperList</declname>
        </param>
        <briefdescription>
<para>Set the <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelKinDynWrapper" kindref="compound">SubModelKinDynWrapper</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>subModelList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> objects </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kinDynWrapperList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of pointers to <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelKinDynWrapper" kindref="compound">SubModelKinDynWrapper</ref> objects. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="108" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a101828f13c55b3a7a55ce17f172bc8fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::checkStateVariableHandler</definition>
        <argsstring>() override</argsstring>
        <name>checkStateVariableHandler</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a4272a944fe6a88c70a2ec198851ae18c">checkStateVariableHandler</reimplements>
        <briefdescription>
<para>Controls whether the variable handler contains the variables on which the dynamics depend. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case all the dependencies are contained in the variable handler, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="117" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1aac83a55f7a01a6620da30a479894a4a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1aafd426248fbbf4a93405b9f4b321d821">update</reimplements>
        <briefdescription>
<para>Update the content of the element. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="123" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a9ea35db69e1605d40708c6dd3368f2bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::setState</definition>
        <argsstring>(const Eigen::Ref&lt; const Eigen::VectorXd &gt; ukfState) override</argsstring>
        <name>setState</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a3874e314d326424d9f9514e218badb86">setState</reimplements>
        <param>
          <type>const Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>ukfState</declname>
        </param>
        <briefdescription>
<para>Set the state of the ukf needed to update the dynamics of the measurement variable associated to ths object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ukfState</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the ukf state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="130" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a6a6b5287ed77a89885d16e0e792b7267" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics::setInput</definition>
        <argsstring>(const UKFInput &amp;ukfInput) override</argsstring>
        <name>setInput</name>
        <reimplements refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a53c4861a09cd78e7c7548cd46a28b6e3">setInput</reimplements>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1UKFInput" kindref="compound">UKFInput</ref> &amp;</type>
          <declname>ukfInput</declname>
        </param>
        <briefdescription>
<para>Set a <computeroutput><ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1UKFInput" kindref="compound">UKFInput</ref></computeroutput> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ukfInput</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to the <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1UKFInput" kindref="compound">UKFInput</ref> struct. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="136" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics" kindref="compound">AccelerometerMeasurementDynamics</ref> class is a concrete implementation of the <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics" kindref="compound">Dynamics</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Please use this element if you want to use the model dynamics of an accelerometer defined, using the kinematics, as the time derivative of the frame linear velocity: <formula id="197">\[ v = J \nu \]</formula> The <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics" kindref="compound">AccelerometerMeasurementDynamics</ref> represents the following equation in the continuous time: <formula id="198">\[ \dot{v}^{accelerometer} = \dot{J} \nu + J \dot{\nu} = \dot{J} \nu + J^{base} \dot{v}^{base} + J^{joints} \ddot{s} \]</formula> where the joint acceleration is given by the forward dynamics equation. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BipedalLocomotion::Estimators::RobotDynamicsEstimator::Dynamics</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>BipedalLocomotion::Estimators::RobotDynamicsEstimator::Dynamics</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_description</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::string</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" line="33" column="1" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/AccelerometerMeasurementDynamics.h" bodystart="34" bodyend="138"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a3d8db53a89a3d5e53a369547d60f3f40" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>AccelerometerMeasurementDynamics</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a101828f13c55b3a7a55ce17f172bc8fb" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>checkStateVariableHandler</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1aef3f707d1e8fd37079c8fa506012e84c" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>finalize</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a518aaf5ff8b96345b34fdba009fc2ce5" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>getCovariance</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a1ff246934d62ec52decf6a4df46150c1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>getInitialStateCovariance</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1ac7ad9601f0f1b7f6516e1117e4845ae2" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>getUpdatedVariable</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1af3eed0c7fa4319eab35a32dc52c98ba6" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a4cdff4c12716bef6e7707b16ab41f9d8" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_accRg</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a96ab656e9d09db1c19692227a25f9274" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_angVel</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1ae8a5507a24e5a76a9ca9fcdbb6daae04" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_bias</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a635b4f02523f7f13b47ded86a48936e0" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_biasVariableName</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1adda3fb21d2afc618efa3b5da736f8a65" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_covariances</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1ac935cd44d408e5c82762ebd9327b7126" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_covSingleVar</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1acbab99c51da6ecc85731da9e410a943b" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_description</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1aafc39763dc288a01d7ce0049b90d3677" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_gravity</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1ac80148fa7320566717a83ca303a40057" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_initialCovariances</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a57fe02624c1ae50c1d839b6ad0e67d8a" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_isInitialized</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a095805b39cf6e20006c942a783589f4b" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_isSubModelListSet</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a199020b133e316a5b8aae6d99a1d7e08" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_JdotNu</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1aaa641bb3411ee6802d24e875d51b9f10" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_Jsdotdot</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a3dc06c9140900c768b98958b93d36f69" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_JvdotBase</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a9662dc365d0a86f7248837881a358782" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_kinDynWrapperList</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1ab9896ea75cfc9a43b84566549c20d45b" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_linVel</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a76f252ea0c1bf35d900e040a6cf3da0b" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_name</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a6f6ab82393f65792c50a2f267e2d2235" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_size</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1aadafa52a332ca551d0d7273079d588a5" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_stateVariableHandler</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1ab58e04a67afee16292a92cf199651df5" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_subModelJointAcc</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1abc42a61c18ce4b3b8e7caf0fb5c7b95b" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_subModelList</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1aff3857c7402b148b4df808154b9d913f" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_subModelsWithAccelerometer</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a219ca24bd2d84d579e053aaf889aef60" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_ukfInput</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1af79b12fb9a01f2eb05db0c59a639bad9" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_updatedVariable</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a57657dc901fc7b7b6bfa0b8b4fbabc4d" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_useBias</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a33dd8464f0c03a3cc49412845670026d" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>m_vCrossW</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a6a6b5287ed77a89885d16e0e792b7267" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a9ea35db69e1605d40708c6dd3368f2bf" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>setState</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1a49867c92d4a27555f8207a71cd260863" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>setSubModels</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1a7570b0d3691c7838e5108b13d36196f8" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>size</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1aac83a55f7a01a6620da30a479894a4a6" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>update</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1AccelerometerMeasurementDynamics_1ae71091efb6948ed66cdfcf4bd672f203" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>~AccelerometerMeasurementDynamics</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Dynamics_1aa21073a31262bbbc161f0f36130e8273" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::AccelerometerMeasurementDynamics</scope><name>~Dynamics</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
