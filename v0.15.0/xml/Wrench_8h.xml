<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="Wrench_8h" kind="file" language="C++">
    <compoundname>Wrench.h</compoundname>
    <includes local="no">Eigen/Dense</includes>
    <includes local="no">manif/SE3.h</includes>
    <includes local="no">manif/SO3.h</includes>
    <includedby refid="JointVelocityStateDynamics_8h" local="no">BipedalLocomotion/RobotDynamicsEstimator/JointVelocityStateDynamics.h</includedby>
    <includedby refid="Contact_8h" local="no">BipedalLocomotion/Contacts/Contact.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>BipedalLocomotion/Math/Wrench.h</label>
        <link refid="Wrench_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>manif/SE3.h</label>
      </node>
      <node id="2">
        <label>Eigen/Dense</label>
      </node>
      <node id="4">
        <label>manif/SO3.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10">
        <label>BipedalLocomotion/ML/MANNTrajectoryGenerator.h</label>
        <link refid="MANNTrajectoryGenerator_8h"/>
      </node>
      <node id="8">
        <label>BipedalLocomotion/ML/MANNAutoregressive.h</label>
        <link refid="MANNAutoregressive_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>BipedalLocomotion/ContactDetectors/FixedFootDetector.h</label>
        <link refid="FixedFootDetector_8h"/>
      </node>
      <node id="3">
        <label>BipedalLocomotion/Contacts/Contact.h</label>
        <link refid="Contact_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimatorIO.h</label>
        <link refid="FloatingBaseEstimatorIO_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion/Math/Wrench.h</label>
        <link refid="Wrench_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>BipedalLocomotion/Contacts/ContactPhase.h</label>
        <link refid="ContactPhase_8h"/>
      </node>
      <node id="11">
        <label>BipedalLocomotion/ContactDetectors/ContactDetector.h</label>
        <link refid="ContactDetector_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion/FloatingBaseEstimators/LeggedOdometry.h</label>
        <link refid="LeggedOdometry_8h"/>
      </node>
      <node id="19">
        <label>BipedalLocomotion/ReducedModelControllers/CentroidalMPC.h</label>
        <link refid="CentroidalMPC_8h"/>
      </node>
      <node id="6">
        <label>BipedalLocomotion/FloatingBaseEstimators/InvariantEKFBaseEstimator.h</label>
        <link refid="InvariantEKFBaseEstimator_8h"/>
      </node>
      <node id="23">
        <label>BipedalLocomotion/TSID/QPFixedBaseTSID.h</label>
        <link refid="QPFixedBaseTSID_8h"/>
      </node>
      <node id="22">
        <label>BipedalLocomotion/TSID/QPTSID.h</label>
        <link refid="QPTSID_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h</label>
        <link refid="FloatingBaseEstimator_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/CentroidalDynamics.h</label>
        <link refid="CentroidalDynamics_8h"/>
      </node>
      <node id="13">
        <label>BipedalLocomotion/ContactDetectors/SchmittTriggerDetector.h</label>
        <link refid="SchmittTriggerDetector_8h"/>
      </node>
      <node id="15">
        <label>BipedalLocomotion/Contacts/ContactListJsonParser.h</label>
        <link refid="ContactListJsonParser_8h"/>
      </node>
      <node id="14">
        <label>BipedalLocomotion/Contacts/ContactList.h</label>
        <link refid="ContactList_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>BipedalLocomotion/ML/MANNAutoregressiveInputBuilder.h</label>
        <link refid="MANNAutoregressiveInputBuilder_8h"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion/RobotDynamicsEstimator/JointVelocityStateDynamics.h</label>
        <link refid="JointVelocityStateDynamics_8h"/>
      </node>
      <node id="17">
        <label>BipedalLocomotion/Planners/SwingFootPlanner.h</label>
        <link refid="SwingFootPlanner_8h"/>
      </node>
      <node id="18">
        <label>BipedalLocomotion/Planners/UnicyclePlanner.h</label>
        <link refid="UnicyclePlanner_8h"/>
      </node>
      <node id="21">
        <label>BipedalLocomotion/TSID/TaskSpaceInverseDynamics.h</label>
        <link refid="TaskSpaceInverseDynamics_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classBipedalLocomotion_1_1Math_1_1Wrench" prot="public">BipedalLocomotion::Math::Wrench</innerclass>
    <innernamespace refid="namespaceBipedalLocomotion">BipedalLocomotion</innernamespace>
    <innernamespace refid="namespaceBipedalLocomotion_1_1Math">BipedalLocomotion::Math</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="Wrench_8h_1a45559f66740448bbc8253a9816dbef05" prot="public" static="no">
        <type>Wrench&lt; double &gt;</type>
        <definition>using BipedalLocomotion::Math::Wrenchd = typedef Wrench&lt;double&gt;</definition>
        <argsstring></argsstring>
        <name>Wrenchd</name>
        <briefdescription>
<para>A wrench of double. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/Wrench.h" line="169" column="1" bodyfile="BipedalLocomotion/Math/Wrench.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="Wrench_8h_1ab4a25ba86637fb8d91b30827c776d934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Scalar</type>
          </param>
        </templateparamlist>
        <type>Wrench&lt; Scalar &gt;</type>
        <definition>Wrench&lt;Scalar&gt; BipedalLocomotion::Math::operator*</definition>
        <argsstring>(const manif::SE3&lt; Scalar &gt; &amp;transform, const Wrench&lt; Scalar &gt; &amp;wrench)</argsstring>
        <name>operator*</name>
        <param>
          <type>const manif::SE3&lt; Scalar &gt; &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>const Wrench&lt; Scalar &gt; &amp;</type>
          <declname>wrench</declname>
        </param>
        <briefdescription>
<para>Change the frame in which the <ref refid="classBipedalLocomotion_1_1Math_1_1Wrench" kindref="compound">Wrench</ref> is expressed. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tranform is <formula id="202">$H$</formula> is <formula id="203">\[ (p,R) = ( {}^{\texttt{refOrient}} p_{\texttt{refPoint},\texttt{point}} , {}^{\texttt{refOrient}} R_{\texttt{orient}} ) \]</formula></para>
<para>And the wrench is: <formula id="204">\[ {}_{\texttt{frame}} F = \begin{bmatrix} f \\ \tau \end{bmatrix} \]</formula></para>
<para>The result of this operation is : <formula id="205">\[ {}_{\texttt{refFrame}} F = {}_{\texttt{refFrame}}X^{\texttt{frame}} {}_{\texttt{frame}} F = \begin{bmatrix} R &amp; 0_{3\times3} \\ p \times R &amp; R \end{bmatrix} \begin{bmatrix} f \\ \tau \end{bmatrix} = \begin{bmatrix} Rf \\ p \times R f + R\tau \end{bmatrix} \]</formula> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>transform</parametername>
</parameternamelist>
<parameterdescription>
<para>a manif::SE3 object representing a homogeneous transformation that changes the coordinates of a vector expressed in the frame A into the coordinates in the frame B </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wrench</parametername>
</parameternamelist>
<parameterdescription>
<para>expressed in the frame A </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the vector expressed in the frame B </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/Wrench.h" line="110" column="8" bodyfile="BipedalLocomotion/Math/Wrench.h" bodystart="110" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="Wrench_8h_1ad07cd1eb9f2b00e87f9c8c5ddeaeecfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Scalar</type>
          </param>
        </templateparamlist>
        <type>Wrench&lt; Scalar &gt;</type>
        <definition>Wrench&lt;Scalar&gt; BipedalLocomotion::Math::operator*</definition>
        <argsstring>(const manif::SO3&lt; Scalar &gt; &amp;rotation, const Wrench&lt; Scalar &gt; &amp;wrench)</argsstring>
        <name>operator*</name>
        <param>
          <type>const manif::SO3&lt; Scalar &gt; &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const Wrench&lt; Scalar &gt; &amp;</type>
          <declname>wrench</declname>
        </param>
        <briefdescription>
<para>Change the frame in which the <ref refid="classBipedalLocomotion_1_1Math_1_1Wrench" kindref="compound">Wrench</ref> is expressed. </para>
        </briefdescription>
        <detaileddescription>
<para>If the tranform is <formula id="202">$H$</formula> is <formula id="206">\[ (p,R) = ( O _ {3 \times 1} , {}^{\texttt{refOrient}} R_{\texttt{orient}} ) \]</formula></para>
<para>And the wrench is: <formula id="204">\[ {}_{\texttt{frame}} F = \begin{bmatrix} f \\ \tau \end{bmatrix} \]</formula></para>
<para>The result of this operation is : <formula id="207">\[ {}_{\texttt{refFrame}} F = {}_{\texttt{refFrame}}X^{\texttt{frame}} {}_{\texttt{frame}} F = \begin{bmatrix} R &amp; 0_{3\times3} \\ 0_{3\times3} &amp; R \end{bmatrix} \begin{bmatrix} f \\ \tau \end{bmatrix} = \begin{bmatrix} Rf \\ R\tau \end{bmatrix} \]</formula> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>a manif::SO3 object representing a rotation that changes the coordinates of a vector expressed in the frame A into the coordinates in the frame B </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wrench</parametername>
</parameternamelist>
<parameterdescription>
<para>expressed in the frame A </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the vector expressed in the frame B </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/Wrench.h" line="158" column="8" bodyfile="BipedalLocomotion/Math/Wrench.h" bodystart="158" bodyend="164"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="authors"><para>Giulio Romualdi </para>
</simplesect>
<simplesect kind="copyright"><para>2021 Istituto Italiano di Tecnologia (IIT). This software may be modified and distributed under the terms of the BSD-3-Clause license. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="BipedalLocomotion/Math/Wrench.h"/>
  </compounddef>
</doxygen>
