<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1System_1_1StdClock" kind="class" language="C++" prot="public" final="yes">
    <compoundname>BipedalLocomotion::System::StdClock</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1IClock" prot="public" virt="non-virtual">BipedalLocomotion::System::IClock</basecompoundref>
    <includes local="no">BipedalLocomotion/System/StdClock.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1StdClock_1a5471595a2f6413c2728266960de8335b" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>std::chrono::nanoseconds</type>
        <definition>std::chrono::nanoseconds BipedalLocomotion::System::StdClock::now</definition>
        <argsstring>() final</argsstring>
        <name>now</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1IClock_1abed28e22693ceef75f3b4815e5e8b161">now</reimplements>
        <briefdescription>
<para>Get the system current time. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the current time since epoch computed with std::chrono::system_clock </para>
</simplesect>
<simplesect kind="note"><para><computeroutput><ref refid="namespaceBipedalLocomotion_1a5927a6bb897f521070adfb6ca866668f" kindref="member">BipedalLocomotion::clock()</ref>.<ref refid="classBipedalLocomotion_1_1System_1_1StdClock_1a5471595a2f6413c2728266960de8335b" kindref="member">now()</ref>.count()</computeroutput> returns a double containing the seconds since epoch </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/StdClock.h" line="42" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1StdClock_1a88fcacd5a6be8e802f58224dcd4600e8" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::System::StdClock::sleepFor</definition>
        <argsstring>(const std::chrono::nanoseconds &amp;sleepDuration) final</argsstring>
        <name>sleepFor</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1IClock_1a763f3c55d3f4f7a5dd25bb8e7617aa15">sleepFor</reimplements>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>sleepDuration</declname>
        </param>
        <briefdescription>
<para>Blocks the execution of the current thread for at least the specified sleepDuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>duration to sleep </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>std::this_tread::sleep_for() function is used. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/StdClock.h" line="49" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1StdClock_1a0559fc93c09b6add2ed2e264c9be81fd" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::System::StdClock::sleepUntil</definition>
        <argsstring>(const std::chrono::nanoseconds &amp;sleepTime) final</argsstring>
        <name>sleepUntil</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1IClock_1a674205e7d1abc851e26f165b5e14b7f9">sleepUntil</reimplements>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>sleepTime</declname>
        </param>
        <briefdescription>
<para>Blocks the execution of the current thread until specified sleepTime has been reached. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>to block until </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>sleepTime is the duration since epoch </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/StdClock.h" line="56" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1StdClock_1abb868d54c2b5daff1970ad552a4536f4" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::System::StdClock::yield</definition>
        <argsstring>() final</argsstring>
        <name>yield</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1IClock_1a220afc1ddc1f19474cb0da08a3cd3640">yield</reimplements>
        <briefdescription>
<para>Provides a hint to the implementation to reschedule the execution of threads, allowing other threads to run. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/StdClock.h" line="62" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1System_1_1StdClock" kindref="compound">StdClock</ref> implements the <ref refid="classBipedalLocomotion_1_1System_1_1IClock" kindref="compound">IClock</ref> interface using <computeroutput>&lt;chrono&gt;</computeroutput> from c++std library. </para>
    </briefdescription>
    <detaileddescription>
<para>The clock can be easily used as follows <programlisting filename=".cpp"><codeline><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Clock_8h" kindref="compound">BipedalLocomotion/System/Clock.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start<sp/>=<sp/><ref refid="namespaceBipedalLocomotion_1a5927a6bb897f521070adfb6ca866668f" kindref="member">BipedalLocomotion::clock</ref>().<ref refid="classBipedalLocomotion_1_1System_1_1IClock_1abed28e22693ceef75f3b4815e5e8b161" kindref="member">now</ref>();</highlight></codeline>
<codeline><highlight class="normal">foo();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end<sp/>=<sp/><ref refid="namespaceBipedalLocomotion_1a5927a6bb897f521070adfb6ca866668f" kindref="member">BipedalLocomotion::clock</ref>().<ref refid="classBipedalLocomotion_1_1System_1_1IClock_1abed28e22693ceef75f3b4815e5e8b161" kindref="member">now</ref>();</highlight></codeline>
<codeline><highlight class="normal">std::chrono::duration&lt;double,<sp/>std::milli&gt;<sp/>elapsed<sp/>=<sp/>end-start;</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BipedalLocomotion::System::IClock</label>
        <link refid="classBipedalLocomotion_1_1System_1_1IClock"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::System::StdClock</label>
        <link refid="classBipedalLocomotion_1_1System_1_1StdClock"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BipedalLocomotion::System::IClock</label>
        <link refid="classBipedalLocomotion_1_1System_1_1IClock"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::System::StdClock</label>
        <link refid="classBipedalLocomotion_1_1System_1_1StdClock"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/System/StdClock.h" line="33" column="1" bodyfile="BipedalLocomotion/System/StdClock.h" bodystart="34" bodyend="63"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1IClock_1a99a28837fb84b2a1df959890ec561f82" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::System::StdClock</scope><name>IClock</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1StdClock_1a5471595a2f6413c2728266960de8335b" prot="public" virt="virtual"><scope>BipedalLocomotion::System::StdClock</scope><name>now</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1StdClock_1a88fcacd5a6be8e802f58224dcd4600e8" prot="public" virt="virtual"><scope>BipedalLocomotion::System::StdClock</scope><name>sleepFor</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1StdClock_1a0559fc93c09b6add2ed2e264c9be81fd" prot="public" virt="virtual"><scope>BipedalLocomotion::System::StdClock</scope><name>sleepUntil</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1StdClock_1abb868d54c2b5daff1970ad552a4536f4" prot="public" virt="virtual"><scope>BipedalLocomotion::System::StdClock</scope><name>yield</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1IClock_1a77e56163bf5079bd23380849f69266aa" prot="public" virt="virtual"><scope>BipedalLocomotion::System::StdClock</scope><name>~IClock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
