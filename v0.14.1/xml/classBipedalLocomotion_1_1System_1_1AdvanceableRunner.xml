<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::System::AdvanceableRunner</compoundname>
    <includes local="no">BipedalLocomotion/System/AdvanceableRunner.h</includes>
    <innerclass refid="structBipedalLocomotion_1_1System_1_1AdvanceableRunner_1_1Info" prot="private">BipedalLocomotion::System::AdvanceableRunner::Info</innerclass>
    <templateparamlist>
      <param>
        <type>class _Advanceable</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1ab8c0fcc548344a3a24e1b02cfa9001f1" prot="public" static="no">
        <type>typename _Advanceable::Input</type>
        <definition>using BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::Input =  typename _Advanceable::Input</definition>
        <argsstring></argsstring>
        <name>Input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="48" column="5" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1aaa44595f1b0aeb91c084b9d9c9e732e2" prot="public" static="no">
        <type>typename _Advanceable::Output</type>
        <definition>using BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::Output =  typename _Advanceable::Output</definition>
        <argsstring></argsstring>
        <name>Output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="49" column="5" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1aeafea8568191190a6d326ce5de57f4e6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::m_isInitialized</definition>
        <argsstring></argsstring>
        <name>m_isInitialized</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the runner is initialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="52" column="10" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a7092cb2b64b25c5f58700d109d480831" prot="private" static="no" mutable="no">
        <type>std::chrono::duration&lt; double &gt;</type>
        <definition>std::chrono::duration&lt;double&gt; BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::m_dT</definition>
        <argsstring></argsstring>
        <name>m_dT</name>
        <initializer>{std::chrono::duration_values&lt;double&gt;::zero()}</initializer>
        <briefdescription>
<para>Period of the runner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="53" column="27" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a3c04c2ef54987b3a9ca47eaa30ce0205" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; bool &gt;</type>
        <definition>std::atomic&lt;bool&gt; BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::m_isRunning</definition>
        <argsstring></argsstring>
        <name>m_isRunning</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="56" column="17" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a64c5013701d957c58f9db8f0244d30f2" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; _Advanceable &gt;</type>
        <definition>std::unique_ptr&lt;_Advanceable&gt; BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::m_advanceable</definition>
        <argsstring></argsstring>
        <name>m_advanceable</name>
        <briefdescription>
<para><blockquote><para>If True the runner is running </para>
</blockquote></para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classBipedalLocomotion_1_1System_1_1Advanceable" kindref="compound">Advanceable</ref> contained in the runner </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="58" column="21" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1ad76aa77723280099e887de1569bb9a70" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1System_1_1SharedResource" kindref="compound">SharedResource</ref>&lt; Input &gt;::Ptr</type>
        <definition>SharedResource&lt;Input&gt;::Ptr BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::m_input</definition>
        <argsstring></argsstring>
        <name>m_input</name>
        <briefdescription>
<para>Input shared resource. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="59" column="35" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a64ab2872819c0cbb9bbad389780eb8e1" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1System_1_1SharedResource" kindref="compound">SharedResource</ref>&lt; Output &gt;::Ptr</type>
        <definition>SharedResource&lt;Output&gt;::Ptr BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::m_output</definition>
        <argsstring></argsstring>
        <name>m_output</name>
        <briefdescription>
<para>Output shared resource. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="60" column="35" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a2bd11ddd94e1f70a1184cc845fda93a6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::m_isTelemetryEnabled</definition>
        <argsstring></argsstring>
        <name>m_isTelemetryEnabled</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>If true some additional information will be stored. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="62" column="10" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a29f9ec0419a2e41694d00aaf7410a493" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::m_infoMutex</definition>
        <argsstring></argsstring>
        <name>m_infoMutex</name>
        <briefdescription>
<para>Mutex used to protect the information struct. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="69" column="16" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a6331d923d5411c659f3db0d5f68b1021" prot="private" static="no" mutable="no">
        <type>Info</type>
        <definition>Info BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::m_info</definition>
        <argsstring></argsstring>
        <name>m_info</name>
        <briefdescription>
<para>Information struct. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="70" column="10" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1aad337626fe1769b56e334e2cb27ea300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>initialize</name>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner" kindref="compound">AdvanceableRunner</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a parameter handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The following parameters are required | Parameter Name | Type | Description | Mandatory | |:---------------<mdash/>:|:-----<mdash/>:|:------------------------------------------------------------------<mdash/>:|:------<mdash/>:| | <computeroutput>sampling_time</computeroutput> | <computeroutput>double</computeroutput> | Strictly positive number rapresenting the sampling time in seconds | Yes | | <computeroutput>enable_telemetry</computeroutput> | <computeroutput>bool</computeroutput> | If True some additional information are stored. Default value <computeroutput>false</computeroutput> | No | </para>
</simplesect>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="84" column="10" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="137" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a2b043ef9689e24f903c8e0610eb300b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::setAdvanceable</definition>
        <argsstring>(std::unique_ptr&lt; _Advanceable &gt; advanceable)</argsstring>
        <name>setAdvanceable</name>
        <param>
          <type>std::unique_ptr&lt; _Advanceable &gt;</type>
          <declname>advanceable</declname>
        </param>
        <briefdescription>
<para>Set the advanceable inside the runner. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>advanceable</parametername>
</parameternamelist>
<parameterdescription>
<para>an unique pointer representing the advanceable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="91" column="10" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="188" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a3d739a55360825588ef53480b166dd51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::setInputResource</definition>
        <argsstring>(std::shared_ptr&lt; SharedResource&lt; Input &gt;&gt; resource)</argsstring>
        <name>setInputResource</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classBipedalLocomotion_1_1System_1_1SharedResource" kindref="compound">SharedResource</ref>&lt; Input &gt;&gt;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
<para>Set the input resource. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resource</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer representing the input resource </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="98" column="10" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="203" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1afc486d5f4d2c2ff5c4aae4c5037394ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::setOutputResource</definition>
        <argsstring>(std::shared_ptr&lt; SharedResource&lt; Output &gt;&gt; resource)</argsstring>
        <name>setOutputResource</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classBipedalLocomotion_1_1System_1_1SharedResource" kindref="compound">SharedResource</ref>&lt; Output &gt;&gt;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
<para>Set the output resource. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resource</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer representing the output resource </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="105" column="10" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="219" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a0e209f5ebd347e033ccf5e911e80cfc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Info</type>
        <definition>AdvanceableRunner&lt; _Advanceable &gt;::Info BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::getInfo</definition>
        <argsstring>()</argsstring>
        <name>getInfo</name>
        <briefdescription>
<para>Get some info of the runner,. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A copy of the Info struct </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="111" column="10" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="381" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1aff152663082cfa9ee3bf24fdeb6ae7ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::thread</type>
        <definition>std::thread BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::run</definition>
        <argsstring>(std::optional&lt; std::reference_wrapper&lt; Barrier &gt;&gt; barrier={})</argsstring>
        <name>run</name>
        <param>
          <type>std::optional&lt; std::reference_wrapper&lt; <ref refid="classBipedalLocomotion_1_1System_1_1Barrier" kindref="compound">Barrier</ref> &gt;&gt;</type>
          <declname>barrier</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Run the advanceable runner. </para>
        </briefdescription>
        <detaileddescription>
<para>The function create a periodic thread running with a period of m_dT seconds. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>barrier</parametername>
</parameternamelist>
<parameterdescription>
<para>is an optional parameter that can be used to synchronize the startup of all the <ref refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner" kindref="compound">AdvanceableRunner</ref> spawned by the process. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a thread of containing the running process. If the runner was not correctly initialized the thread is invalid. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="121" column="17" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="237" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a884b552a1c6a2c74db297a48aeb7aeba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
<para>Stop the thread. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true in case of success, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="127" column="10" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="368" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a1bec614ffe0fb148df00eb76c8bbeec9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::System::AdvanceableRunner&lt; _Advanceable &gt;::isRunning</definition>
        <argsstring>() const</argsstring>
        <name>isRunning</name>
        <briefdescription>
<para>Check if the <ref refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner" kindref="compound">AdvanceableRunner</ref> is running. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the thread is running, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="133" column="10" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="374" bodyend="378"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner" kindref="compound">AdvanceableRunner</ref> is an helper class that can be used to run a advanceable at a given period. </para>
    </briefdescription>
    <detaileddescription>
<para>Different AdvanceableRunners can communicate trough the <ref refid="classBipedalLocomotion_1_1System_1_1SharedResource" kindref="compound">SharedResource</ref> class. The <ref refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner" kindref="compound">AdvanceableRunner</ref> can be used only with <ref refid="classBipedalLocomotion_1_1System_1_1Advanceable" kindref="compound">Advanceable</ref>. Do not try to use if with a class that does not inherit from advanceable, a compile time assert will be thrown. This is a visual example of usage <linebreak/>
 <image type="html" name="https://user-images.githubusercontent.com/16744101/112768882-7c137280-901e-11eb-8c24-05b7cc3fa5e5.png" alt="AdvanceableRunner" inline="yes"></image>
 Here we want to run two advanceables in parallel with a different sampling time. The <ref refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner" kindref="compound">AdvanceableRunner</ref> is a class that helps you in creating a periodic thread. The <ref refid="classBipedalLocomotion_1_1System_1_1SharedResource" kindref="compound">SharedResource</ref> is the way that can be used to communicate between two advanceables running in separate threads (i.e. the wired between two AdvanceableRunners) </para>
    </detaileddescription>
    <location file="BipedalLocomotion/System/AdvanceableRunner.h" line="42" column="12" bodyfile="BipedalLocomotion/System/AdvanceableRunner.h" bodystart="43" bodyend="134"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a0e209f5ebd347e033ccf5e911e80cfc3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>getInfo</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1aad337626fe1769b56e334e2cb27ea300" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1ab8c0fcc548344a3a24e1b02cfa9001f1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a1bec614ffe0fb148df00eb76c8bbeec9" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>isRunning</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a64c5013701d957c58f9db8f0244d30f2" prot="private" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>m_advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a7092cb2b64b25c5f58700d109d480831" prot="private" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>m_dT</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a6331d923d5411c659f3db0d5f68b1021" prot="private" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>m_info</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a29f9ec0419a2e41694d00aaf7410a493" prot="private" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>m_infoMutex</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1ad76aa77723280099e887de1569bb9a70" prot="private" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>m_input</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1aeafea8568191190a6d326ce5de57f4e6" prot="private" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>m_isInitialized</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a3c04c2ef54987b3a9ca47eaa30ce0205" prot="private" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>m_isRunning</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a2bd11ddd94e1f70a1184cc845fda93a6" prot="private" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>m_isTelemetryEnabled</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a64ab2872819c0cbb9bbad389780eb8e1" prot="private" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>m_output</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1aaa44595f1b0aeb91c084b9d9c9e732e2" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>Output</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1aff152663082cfa9ee3bf24fdeb6ae7ea" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>run</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a2b043ef9689e24f903c8e0610eb300b2" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>setAdvanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a3d739a55360825588ef53480b166dd51" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>setInputResource</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1afc486d5f4d2c2ff5c4aae4c5037394ce" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>setOutputResource</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1AdvanceableRunner_1a884b552a1c6a2c74db297a48aeb7aeba" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::AdvanceableRunner</scope><name>stop</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
