<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</compoundname>
    <includes local="no">BipedalLocomotion/RobotDynamicsEstimator/SubModel.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a595b523f377029b5f07ccd2d9f7ae3ca" prot="private" static="no" mutable="no">
        <type>iDynTree::Model</type>
        <definition>iDynTree::Model BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::m_model</definition>
        <argsstring></argsstring>
        <name>m_model</name>
        <briefdescription>
<para>Model to split. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="226" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a4f8c62da3f591fa866d0d440fbd6405f" prot="private" static="no" mutable="no">
        <type>iDynTree::SensorsList</type>
        <definition>iDynTree::SensorsList BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::m_sensorList</definition>
        <argsstring></argsstring>
        <name>m_sensorList</name>
        <briefdescription>
<para>List of sensors in the model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="227" column="27" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a29e7abbf2606612b6510ae21c587a3ae" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; iDynTree::KinDynComputations &gt;</type>
        <definition>std::shared_ptr&lt;iDynTree::KinDynComputations&gt; BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::m_kinDyn</definition>
        <argsstring></argsstring>
        <name>m_kinDyn</name>
        <briefdescription>
<para>Pointer to a KinDynComputations object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="228" column="21" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a7feb7a16d53a832c7f16f46479bc6ded" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> &gt;</type>
        <definition>std::vector&lt;SubModel&gt; BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::m_subModelList</definition>
        <argsstring></argsstring>
        <name>m_subModelList</name>
        <briefdescription>
<para>List of <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="230" column="17" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a38838648d6f81600071d4a513cebfb8d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::splitModel</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;ftFrameList, std::vector&lt; iDynTree::Model &gt; &amp;idynSubModels)</argsstring>
        <name>splitModel</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>ftFrameList</declname>
        </param>
        <param>
          <type>std::vector&lt; iDynTree::Model &gt; &amp;</type>
          <declname>idynSubModels</declname>
        </param>
        <briefdescription>
<para>splitModel splits the model objects in many submodel objects cutting the model at the ft sensors. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftFrameList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of strings containing the force/torque sensor names used to split the model into sub-models </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idynSubModels</parametername>
</parameternamelist>
<parameterdescription>
<para>list of iDynTree Model objects.. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a boolean value saying if the list of submodels is created correctly. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="240" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a6fff943b649d08bdeabff77207e820ed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref></type>
        <definition>SubModel BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::populateSubModel</definition>
        <argsstring>(iDynTree::Model &amp;idynSubModel, const std::vector&lt; FTSensor &gt; &amp;ftList, const std::vector&lt; Sensor &gt; &amp;accList, const std::vector&lt; Sensor &gt; &amp;gyroList, const std::vector&lt; Sensor &gt; &amp;contactList)</argsstring>
        <name>populateSubModel</name>
        <param>
          <type>iDynTree::Model &amp;</type>
          <declname>idynSubModel</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1FTSensor" kindref="compound">FTSensor</ref> &gt; &amp;</type>
          <declname>ftList</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> &gt; &amp;</type>
          <declname>accList</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> &gt; &amp;</type>
          <declname>gyroList</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> &gt; &amp;</type>
          <declname>contactList</declname>
        </param>
        <briefdescription>
<para>populateSubModel populate a submodel struct. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idynSubModel</parametername>
</parameternamelist>
<parameterdescription>
<para>iDynTree Model describing one of the sub-models. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ftList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1FTSensor" kindref="compound">FTSensor</ref> structs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>accList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> structs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gyroList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> structs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contactList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> structs describing the external contact frames. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a subModel structure containing all the information about joint mapping, ft sensors, accelerometers, gyroscopes, external contacts. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="253" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1ae4bbff815f0b48183060c771d2a83d6f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; std::string, <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1FTSensor" kindref="compound">FTSensor</ref> &gt;</type>
        <definition>std::unordered_map&lt;std::string, FTSensor&gt; BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::attachFTsToSubModel</definition>
        <argsstring>(const std::vector&lt; FTSensor &gt; &amp;ftListFromConfig, iDynTree::Model &amp;idynSubModel)</argsstring>
        <name>attachFTsToSubModel</name>
        <param>
          <type>const std::vector&lt; <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1FTSensor" kindref="compound">FTSensor</ref> &gt; &amp;</type>
          <declname>ftListFromConfig</declname>
        </param>
        <param>
          <type>iDynTree::Model &amp;</type>
          <declname>idynSubModel</declname>
        </param>
        <briefdescription>
<para>attachFTsToSubModel finds all the ft sensors connected to the specified model analyzing the sensorList from the full model. </para>
        </briefdescription>
        <detaileddescription>
<para>Per each FT sensor creates a FT struct. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftListFromConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>list of FT structs built from configuration parameters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idynSubModel</parametername>
</parameternamelist>
<parameterdescription>
<para>iDynTree Model describing one of the sub-models. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an unordered map containing the FT structs where each FT is connected to the model (idynSubModel input param) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="268" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a1d8dccf1c06c8f6bc899766509cad310" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; std::string, <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> &gt;</type>
        <definition>std::unordered_map&lt;std::string, Sensor&gt; BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::attachAccelerometersToSubModel</definition>
        <argsstring>(const std::vector&lt; Sensor &gt; &amp;accListFromConfig, const iDynTree::Model &amp;subModel)</argsstring>
        <name>attachAccelerometersToSubModel</name>
        <param>
          <type>const std::vector&lt; <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> &gt; &amp;</type>
          <declname>accListFromConfig</declname>
        </param>
        <param>
          <type>const iDynTree::Model &amp;</type>
          <declname>subModel</declname>
        </param>
        <briefdescription>
<para>attachAccelerometersToSubModel finds all the accelerometer sensors connected to the specified model analyzing the accListFromConfig list. </para>
        </briefdescription>
        <detaileddescription>
<para>Per each accelerometer sensor creates a <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> struct. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>accListFromConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>list of <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> structs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subModel</parametername>
</parameternamelist>
<parameterdescription>
<para>iDynTree Model object describing one of the sub-models. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an unordered map of <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> structs. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="278" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a412e1a0745fd7eca587807d610e76603" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; std::string, <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> &gt;</type>
        <definition>std::unordered_map&lt;std::string, Sensor&gt; BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::attachGyroscopesToSubModel</definition>
        <argsstring>(const std::vector&lt; Sensor &gt; &amp;gyroListFromConfig, const iDynTree::Model &amp;subModel)</argsstring>
        <name>attachGyroscopesToSubModel</name>
        <param>
          <type>const std::vector&lt; <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> &gt; &amp;</type>
          <declname>gyroListFromConfig</declname>
        </param>
        <param>
          <type>const iDynTree::Model &amp;</type>
          <declname>subModel</declname>
        </param>
        <briefdescription>
<para>attachGyroscopesToSubModel finds all the gyroscope sensors connected to the specified model analyzing the gyroListFromConfig list. </para>
        </briefdescription>
        <detaileddescription>
<para>Per each gyroscope sensor creates a <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> struct. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gyroListFromConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>list of <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> structs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subModel</parametername>
</parameternamelist>
<parameterdescription>
<para>iDynTree Model object describing one of the sub-models. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an unordered map of <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> structs. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="289" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a9d4e42b2852373eb74c17d26f1dbe023" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; std::string, <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> &gt;</type>
        <definition>std::unordered_map&lt;std::string, Sensor&gt; BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::attachExternalContactsToSubModel</definition>
        <argsstring>(const std::vector&lt; Sensor &gt; &amp;contactsFromConfig, const iDynTree::Model &amp;subModel)</argsstring>
        <name>attachExternalContactsToSubModel</name>
        <param>
          <type>const std::vector&lt; <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> &gt; &amp;</type>
          <declname>contactsFromConfig</declname>
        </param>
        <param>
          <type>const iDynTree::Model &amp;</type>
          <declname>subModel</declname>
        </param>
        <briefdescription>
<para>attachExternalContactsToSubModel finds all the contact frames on the specified model analyzing. </para>
        </briefdescription>
        <detaileddescription>
<para>the contactsFromConfig list <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>contactsFromConfig</parametername>
</parameternamelist>
<parameterdescription>
<para>list of <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> structs describing the external contact frames. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>subModel</parametername>
</parameternamelist>
<parameterdescription>
<para>iDynTree Model object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a vector of <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> structs describing the contact frame names. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="300" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a149cb98c99eb1ee6beae25c04f07f528" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::createJointMapping</definition>
        <argsstring>(const iDynTree::Model &amp;subModel)</argsstring>
        <name>createJointMapping</name>
        <param>
          <type>const iDynTree::Model &amp;</type>
          <declname>subModel</declname>
        </param>
        <briefdescription>
<para>createJointMapping creates a map between the joint indeces in the submodel and the same joints in the full model. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>subModel</parametername>
</parameternamelist>
<parameterdescription>
<para>iDynTree Model describing one of the sub-models. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a vector of integers where the positions of an element represents the joint index in the sub-model and the value of the element represents the joint index in the model. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="310" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1af2574ccdd46cdf568a4fbf3938159c0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::createSubModels</definition>
        <argsstring>(const std::vector&lt; FTSensor &gt; &amp;ftSensorList, const std::vector&lt; Sensor &gt; &amp;accList, const std::vector&lt; Sensor &gt; &amp;gyroList, const std::vector&lt; Sensor &gt; &amp;contactList)</argsstring>
        <name>createSubModels</name>
        <param>
          <type>const std::vector&lt; <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1FTSensor" kindref="compound">FTSensor</ref> &gt; &amp;</type>
          <declname>ftSensorList</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> &gt; &amp;</type>
          <declname>accList</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> &gt; &amp;</type>
          <declname>gyroList</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> &gt; &amp;</type>
          <declname>contactList</declname>
        </param>
        <briefdescription>
<para>createSubModels splits the model in <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> objects cutting the model at the force/torque sensors specified by the parameterHandler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ftSensorList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1FTSensor" kindref="compound">FTSensor</ref> structs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>accList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> structs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gyroList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> structs. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>contactList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of <ref refid="structBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1Sensor" kindref="compound">Sensor</ref> structs describing the external contact frames. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a boolean value saying if the subModelList has been created correctly. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="322" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a73828f2a439573513bf7954926b4d233" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::createSubModels</definition>
        <argsstring>(std::weak_ptr&lt; const BipedalLocomotion::ParametersHandler::IParametersHandler &gt; parameterHandler)</argsstring>
        <name>createSubModels</name>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>parameterHandler</declname>
        </param>
        <briefdescription>
<para>createSubModels splits the model in <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> objects cutting the model at the force/torque sensors specified by the parameterHandler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>IParametersHandler object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a boolean value saying if the subModelList has been created correctly. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="334" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1afab781b0d7011b64fb7b19bd88c60431" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::setModelAndSensors</definition>
        <argsstring>(const iDynTree::Model &amp;model, const iDynTree::SensorsList &amp;sensors)</argsstring>
        <name>setModelAndSensors</name>
        <param>
          <type>const iDynTree::Model &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const iDynTree::SensorsList &amp;</type>
          <declname>sensors</declname>
        </param>
        <briefdescription>
<para>Setter. </para>
        </briefdescription>
        <detaileddescription>
<para>Set model which is an instance of <computeroutput>iDynTree::ModelLoader</computeroutput> and the sensor list which is an instance of <computeroutput>iDynTree::SensorList</computeroutput> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>modelLoader</parametername>
</parameternamelist>
<parameterdescription>
<para>is an iDynTree ModelLoader object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sensors</parametername>
</parameternamelist>
<parameterdescription>
<para>is an iDynTree SensorList object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="346" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a73a29919131da15e0ce5d98160b3de62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::setKinDyn</definition>
        <argsstring>(std::shared_ptr&lt; iDynTree::KinDynComputations &gt; kinDyn)</argsstring>
        <name>setKinDyn</name>
        <param>
          <type>std::shared_ptr&lt; iDynTree::KinDynComputations &gt;</type>
          <declname>kinDyn</declname>
        </param>
        <briefdescription>
<para>set kinDyn </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kinDyn</parametername>
</parameternamelist>
<parameterdescription>
<para>is an iDynTree KinDynComputation object handling the kinematics and the dynamics of the model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a boolean value saying if the input pointer is valid </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="354" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1abaaa04118553c52cbb448dd19972cf22" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::getNrOfSubModels</definition>
        <argsstring>() const</argsstring>
        <name>getNrOfSubModels</name>
        <briefdescription>
<para>Getter. </para>
        </briefdescription>
        <detaileddescription>
<para>access the length of the list std::vector&lt;SubModel&gt;. <simplesect kind="return"><para>the number of sub-models composing the model </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="364" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1adc775628561c65af1c0267f9abd03eca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;SubModel&gt;&amp; BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::getSubModelList</definition>
        <argsstring>() const</argsstring>
        <name>getSubModelList</name>
        <briefdescription>
<para>get the <computeroutput>std::vector&lt;<ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref>&gt;</computeroutput> list. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the list of <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> objects. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="370" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1ab7647e9a3165857e29d4fe923d214ade" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> &amp;</type>
        <definition>const SubModel&amp; BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator::getSubModel</definition>
        <argsstring>(int index) const</argsstring>
        <name>getSubModel</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>get a <computeroutput><ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref></computeroutput> instance of the list of <computeroutput><ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the <ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModel" kindref="compound">SubModel</ref> at the position index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="376" column="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator" kindref="compound">SubModelCreator</ref> is a concrete class and splits a model into sub-models along the force/torque sensors specified as configuration parameters. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" line="224" column="1" bodyfile="BipedalLocomotion/RobotDynamicsEstimator/SubModel.h" bodystart="225" bodyend="377"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a1d8dccf1c06c8f6bc899766509cad310" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>attachAccelerometersToSubModel</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a9d4e42b2852373eb74c17d26f1dbe023" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>attachExternalContactsToSubModel</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1ae4bbff815f0b48183060c771d2a83d6f" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>attachFTsToSubModel</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a412e1a0745fd7eca587807d610e76603" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>attachGyroscopesToSubModel</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a149cb98c99eb1ee6beae25c04f07f528" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>createJointMapping</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1af2574ccdd46cdf568a4fbf3938159c0e" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>createSubModels</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a73828f2a439573513bf7954926b4d233" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>createSubModels</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1abaaa04118553c52cbb448dd19972cf22" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>getNrOfSubModels</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1ab7647e9a3165857e29d4fe923d214ade" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>getSubModel</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1adc775628561c65af1c0267f9abd03eca" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>getSubModelList</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a29e7abbf2606612b6510ae21c587a3ae" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>m_kinDyn</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a595b523f377029b5f07ccd2d9f7ae3ca" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>m_model</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a4f8c62da3f591fa866d0d440fbd6405f" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>m_sensorList</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a7feb7a16d53a832c7f16f46479bc6ded" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>m_subModelList</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a6fff943b649d08bdeabff77207e820ed" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>populateSubModel</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a73a29919131da15e0ce5d98160b3de62" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>setKinDyn</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1afab781b0d7011b64fb7b19bd88c60431" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>setModelAndSensors</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1SubModelCreator_1a38838648d6f81600071d4a513cebfb8d" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::RobotDynamicsEstimator::SubModelCreator</scope><name>splitModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
