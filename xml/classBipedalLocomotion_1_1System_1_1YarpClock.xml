<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1System_1_1YarpClock" kind="class" language="C++" prot="public" final="yes">
    <compoundname>BipedalLocomotion::System::YarpClock</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1IClock" prot="public" virt="non-virtual">BipedalLocomotion::System::IClock</basecompoundref>
    <includes local="no">BipedalLocomotion/System/YarpClock.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1System_1_1YarpClock_1a972d871317528763d2a8db37803c5e67" prot="private" static="no" mutable="no">
        <type>yarp::os::Network</type>
        <definition>yarp::os::Network BipedalLocomotion::System::YarpClock::m_network</definition>
        <argsstring></argsstring>
        <name>m_network</name>
        <briefdescription>
<para>A yarp network instance. </para>
        </briefdescription>
        <detaileddescription>
<para>This automatically call some function required by yarp::os::Time </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/YarpClock.h" line="43" column="23" bodyfile="BipedalLocomotion/System/YarpClock.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1YarpClock_1aa4b3eafecc3bb1de45f91af47849b8c4" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>std::chrono::nanoseconds</type>
        <definition>std::chrono::nanoseconds BipedalLocomotion::System::YarpClock::now</definition>
        <argsstring>() final</argsstring>
        <name>now</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1IClock_1abed28e22693ceef75f3b4815e5e8b161">now</reimplements>
        <briefdescription>
<para>Get YARP current time. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the current time computed from <computeroutput>yarp::os::Time::now()</computeroutput> </para>
</simplesect>
<simplesect kind="note"><para><computeroutput><ref refid="namespaceBipedalLocomotion_1a5927a6bb897f521070adfb6ca866668f" kindref="member">BipedalLocomotion::clock()</ref>.<ref refid="classBipedalLocomotion_1_1System_1_1YarpClock_1aa4b3eafecc3bb1de45f91af47849b8c4" kindref="member">now()</ref>.count()</computeroutput> returns a double containing the seconds since epoch. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/YarpClock.h" line="52" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1YarpClock_1aa5c194f89f9d0f6ea39a69e1c981b76a" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::System::YarpClock::sleepFor</definition>
        <argsstring>(const std::chrono::nanoseconds &amp;sleepDuration) final</argsstring>
        <name>sleepFor</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1IClock_1a763f3c55d3f4f7a5dd25bb8e7617aa15">sleepFor</reimplements>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>sleepDuration</declname>
        </param>
        <briefdescription>
<para>Blocks the execution of the current thread for at least the specified sleepDuration. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>duration to sleep </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/YarpClock.h" line="58" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1YarpClock_1a7dd493f2e9c1ac2fa8856fafeaeacab9" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::System::YarpClock::sleepUntil</definition>
        <argsstring>(const std::chrono::nanoseconds &amp;sleepTime) final</argsstring>
        <name>sleepUntil</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1IClock_1a674205e7d1abc851e26f165b5e14b7f9">sleepUntil</reimplements>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>sleepTime</declname>
        </param>
        <briefdescription>
<para>Blocks the execution of the current thread until specified sleepTime has been reached. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>to block until </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/YarpClock.h" line="64" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1YarpClock_1a1223985052e0b22e18f2ce3851c2e884" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::System::YarpClock::yield</definition>
        <argsstring>() final</argsstring>
        <name>yield</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1IClock_1a220afc1ddc1f19474cb0da08a3cd3640">yield</reimplements>
        <briefdescription>
<para>Provides a hint to the implementation to reschedule the execution of threads, allowing other threads to run. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/YarpClock.h" line="70" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1System_1_1YarpClock" kindref="compound">YarpClock</ref> implements the <ref refid="classBipedalLocomotion_1_1System_1_1IClock" kindref="compound">IClock</ref> interface using yarp functions. </para>
    </briefdescription>
    <detaileddescription>
<para>The clock can be easily used as follows <programlisting filename=".cpp"><codeline><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Clock_8h" kindref="compound">BipedalLocomotion/System/Clock.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="YarpClock_8h" kindref="compound">BipedalLocomotion/System/YarpClock.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="classBipedalLocomotion_1_1System_1_1ClockBuilder_1a77ee6a0ac739edfbb9fecc64d16ebf0a" kindref="member">BipedalLocomotion::System::ClockBuilder::setFactory</ref>(std::make_shared&lt;BipedalLocomotion::System::YarpClockFactory&gt;()));</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start<sp/>=<sp/><ref refid="namespaceBipedalLocomotion_1a5927a6bb897f521070adfb6ca866668f" kindref="member">BipedalLocomotion::clock</ref>().<ref refid="classBipedalLocomotion_1_1System_1_1IClock_1abed28e22693ceef75f3b4815e5e8b161" kindref="member">now</ref>();</highlight></codeline>
<codeline><highlight class="normal">foo();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end<sp/>=<sp/><ref refid="namespaceBipedalLocomotion_1a5927a6bb897f521070adfb6ca866668f" kindref="member">BipedalLocomotion::clock</ref>().<ref refid="classBipedalLocomotion_1_1System_1_1IClock_1abed28e22693ceef75f3b4815e5e8b161" kindref="member">now</ref>();</highlight></codeline>
<codeline><highlight class="normal">std::chrono::duration&lt;double,<sp/>std::milli&gt;<sp/>elapsed<sp/>=<sp/>end-start;</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BipedalLocomotion::System::IClock</label>
        <link refid="classBipedalLocomotion_1_1System_1_1IClock"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::System::YarpClock</label>
        <link refid="classBipedalLocomotion_1_1System_1_1YarpClock"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BipedalLocomotion::System::IClock</label>
        <link refid="classBipedalLocomotion_1_1System_1_1IClock"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::System::YarpClock</label>
        <link refid="classBipedalLocomotion_1_1System_1_1YarpClock"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/System/YarpClock.h" line="38" column="1" bodyfile="BipedalLocomotion/System/YarpClock.h" bodystart="39" bodyend="71"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1IClock_1a99a28837fb84b2a1df959890ec561f82" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::System::YarpClock</scope><name>IClock</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1YarpClock_1a972d871317528763d2a8db37803c5e67" prot="private" virt="non-virtual"><scope>BipedalLocomotion::System::YarpClock</scope><name>m_network</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1YarpClock_1aa4b3eafecc3bb1de45f91af47849b8c4" prot="public" virt="virtual"><scope>BipedalLocomotion::System::YarpClock</scope><name>now</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1YarpClock_1aa5c194f89f9d0f6ea39a69e1c981b76a" prot="public" virt="virtual"><scope>BipedalLocomotion::System::YarpClock</scope><name>sleepFor</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1YarpClock_1a7dd493f2e9c1ac2fa8856fafeaeacab9" prot="public" virt="virtual"><scope>BipedalLocomotion::System::YarpClock</scope><name>sleepUntil</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1YarpClock_1a1223985052e0b22e18f2ce3851c2e884" prot="public" virt="virtual"><scope>BipedalLocomotion::System::YarpClock</scope><name>yield</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1IClock_1a77e56163bf5079bd23380849f69266aa" prot="public" virt="virtual"><scope>BipedalLocomotion::System::YarpClock</scope><name>~IClock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
