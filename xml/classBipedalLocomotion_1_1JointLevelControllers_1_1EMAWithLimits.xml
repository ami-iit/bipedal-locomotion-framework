<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::JointLevelControllers::EMAWithLimits</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1Advanceable" prot="public" virt="non-virtual">BipedalLocomotion::System::Advanceable&lt; Eigen::VectorXd, Eigen::VectorXd &gt;</basecompoundref>
    <includes local="no">BipedalLocomotion/JointLevelControllers/EMAWithLimits.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1afa228b96a891ab63181e0632a2af8b21" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; BipedalLocomotion::JointLevelControllers::EMAWithLimits::m_pimpl</definition>
        <argsstring></argsstring>
        <name>m_pimpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/JointLevelControllers/EMAWithLimits.h" line="99" column="21" bodyfile="BipedalLocomotion/JointLevelControllers/EMAWithLimits.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1ac2b0bcfd12e3e691d8e5b671f77bcba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::JointLevelControllers::EMAWithLimits::EMAWithLimits</definition>
        <argsstring>()</argsstring>
        <name>EMAWithLimits</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/JointLevelControllers/EMAWithLimits.h" line="40" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1a72bf40051f57088bdd00109fb6575679" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::JointLevelControllers::EMAWithLimits::~EMAWithLimits</definition>
        <argsstring>()</argsstring>
        <name>~EMAWithLimits</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>It is required by the pimpl implementation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/JointLevelControllers/EMAWithLimits.h" line="45" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1a3cf4fe07104d9bc450af274a727bedad" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::JointLevelControllers::EMAWithLimits::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const BipedalLocomotion::ParametersHandler::IParametersHandler &gt; paramHandler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a6db247d3db83217a16e963d01f6bcb77">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>paramHandler</declname>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits" kindref="compound">EMAWithLimits</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paramHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameters handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="6" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>scale</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Scaling factor applied to some computation   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>alpha</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Weighting factor or coefficient for adjustments   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>lower_limit</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Array specifying the lower limits for the joints   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>upper_limit</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Array specifying the upper limits for the joints   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>soft_limit_factor</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Factor to soften or scale the limits (default is 1.0)   </para>
</entry><entry thead="no" align='center'><para>No   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/JointLevelControllers/EMAWithLimits.h" line="61" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1add07d3de481da1ba8f8a82939a824177" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::JointLevelControllers::EMAWithLimits::setInput</definition>
        <argsstring>(const EMAWithLimits::Input &amp;input) override</argsstring>
        <name>setInput</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1InputPort_1ad2637be5c9075a2d8f09fedc6a42d808">setInput</reimplements>
        <param>
          <type>const EMAWithLimits::Input &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Set the input of the <ref refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits" kindref="compound">EMAWithLimits</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>the struct containing all the inputs of the <ref refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits" kindref="compound">EMAWithLimits</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/JointLevelControllers/EMAWithLimits.h" line="69" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1aa2dbae1697ea7abba0f2130d4e869919" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::JointLevelControllers::EMAWithLimits::advance</definition>
        <argsstring>() override</argsstring>
        <name>advance</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a67107e46e831d93f572558b541aab6d2">advance</reimplements>
        <briefdescription>
<para>Perform one step of the inference given the input set. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/JointLevelControllers/EMAWithLimits.h" line="75" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1a7d339350cfc05e6ae4ca566dbba82538" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const EMAWithLimits::Output &amp;</type>
        <definition>const EMAWithLimits::Output&amp; BipedalLocomotion::JointLevelControllers::EMAWithLimits::getOutput</definition>
        <argsstring>() const override</argsstring>
        <name>getOutput</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a8c089ecf2dd8ff0fb2732233994b6cac">getOutput</reimplements>
        <briefdescription>
<para>Get the output of the <ref refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits" kindref="compound">EMAWithLimits</ref> once advance has been called. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the output of the <ref refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits" kindref="compound">EMAWithLimits</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/JointLevelControllers/EMAWithLimits.h" line="81" column="33"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1afb97797df35b4faa9d38b6ac0584c935" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::JointLevelControllers::EMAWithLimits::isOutputValid</definition>
        <argsstring>() const override</argsstring>
        <name>isOutputValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ac50de29a6160baa2bba195af9d69430a">isOutputValid</reimplements>
        <briefdescription>
<para>Check if the output of the <ref refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits" kindref="compound">EMAWithLimits</ref> is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if it is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/JointLevelControllers/EMAWithLimits.h" line="87" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1a768bc331a13d8d900c2f5bf79c8a8c07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::JointLevelControllers::EMAWithLimits::reset</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::VectorXd &gt; input)</argsstring>
        <name>reset</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Reset the <ref refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits" kindref="compound">EMAWithLimits</ref> with a new input. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>the new input to reset the <ref refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits" kindref="compound">EMAWithLimits</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the reset was successful, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/JointLevelControllers/EMAWithLimits.h" line="94" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Exponential Moving Average (EMA) with Joint Limits. </para>
    </briefdescription>
    <detaileddescription>
<para>This class implements an Exponential Moving Average (EMA) controller that applies limits to the joint values. The EMA is computed based on the input reference and feedback signals, and the output is adjusted to respect the specified joint limits. The controller applies a scaling factor to the input signals and has options for softening the limits. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; Eigen::VectorXd, Eigen::VectorXd &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; Eigen::VectorXd, Eigen::VectorXd &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::JointLevelControllers::EMAWithLimits</label>
        <link refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Advanceable&lt; Eigen::VectorXd, Eigen::VectorXd &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; Eigen::VectorXd, Eigen::VectorXd &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::JointLevelControllers::EMAWithLimits</label>
        <link refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/JointLevelControllers/EMAWithLimits.h" line="33" column="1" bodyfile="BipedalLocomotion/JointLevelControllers/EMAWithLimits.h" bodystart="35" bodyend="100"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1aa2dbae1697ea7abba0f2130d4e869919" prot="public" virt="virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a09ee5b41c77c6b626f4d5cb775065325" prot="public" virt="non-virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1aaeb3eba3073fbc844dea1eba4c9b68f3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ac1549cb26bd896e27370e97b0795ba3f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a618ab786bb43814b3b3012b843fce93b" prot="public" virt="virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>close</name></member>
      <member refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1ac2b0bcfd12e3e691d8e5b671f77bcba9" prot="public" virt="non-virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>EMAWithLimits</name></member>
      <member refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1a7d339350cfc05e6ae4ca566dbba82538" prot="public" virt="virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>getOutput</name></member>
      <member refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1a3cf4fe07104d9bc450af274a727bedad" prot="public" virt="virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a975a7ecbf38c917c7b72519581fc7dba" prot="public" virt="non-virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a27c614cb30c1e4b78e64791f4919dfa7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a74d1418613e89a7f2993ea936228a44a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a02ec5c947f1d2d83d2952c3b899cc58f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1afb97797df35b4faa9d38b6ac0584c935" prot="public" virt="virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>isOutputValid</name></member>
      <member refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1afa228b96a891ab63181e0632a2af8b21" prot="private" virt="non-virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>m_pimpl</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ae147cdee9ff9160a9dfe0d3e349a9aad" prot="public" virt="non-virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1adf0d9fc07bab0ec5d4db7f3a35816bf2" prot="public" virt="non-virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a54f476d3c8d6d003fb714309ea6272aa" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1adb341b37472241b6da8b552166308d7b" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1af5e15f5e4962a5c8e0f0c0a49adb9ca1" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ad5c6ce3ad7d2a064d7bb512fe0bc489e" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a69603f2c9c608815908425b5b8c2005c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>Output</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a7c0d15e677a1935918fc747ba4c25ec1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a0a39b891749961d34507b4b591886741" prot="public" virt="non-virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a581340f280eca1890a8a7b2331761b57" prot="public" virt="non-virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1a768bc331a13d8d900c2f5bf79c8a8c07" prot="public" virt="non-virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>reset</name></member>
      <member refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1add07d3de481da1ba8f8a82939a824177" prot="public" virt="virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1afae1137cba829874bab4a1d25d559896" prot="public" virt="virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>~Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1JointLevelControllers_1_1EMAWithLimits_1a72bf40051f57088bdd00109fb6575679" prot="public" virt="non-virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>~EMAWithLimits</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ac9b58b0d2f6ae8821b873ed6f9817ccb" prot="public" virt="virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>~InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1adcc49c38152c9204dcab4f8e87f68977" prot="public" virt="virtual"><scope>BipedalLocomotion::JointLevelControllers::EMAWithLimits</scope><name>~OutputPort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
