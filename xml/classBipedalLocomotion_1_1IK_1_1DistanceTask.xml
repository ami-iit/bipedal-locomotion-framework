<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1IK_1_1DistanceTask" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::IK::DistanceTask</compoundname>
    <basecompoundref refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask" prot="public" virt="non-virtual">BipedalLocomotion::IK::IKLinearTask</basecompoundref>
    <includes local="no">BipedalLocomotion/IK/DistanceTask.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a04f796a5f53f7c856882ce1d43d81d12" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler_1_1VariableDescription" kindref="compound">System::VariablesHandler::VariableDescription</ref></type>
        <definition>System::VariablesHandler::VariableDescription BipedalLocomotion::IK::DistanceTask::m_robotVelocityVariable</definition>
        <argsstring></argsstring>
        <name>m_robotVelocityVariable</name>
        <briefdescription>
<para>Variable describing the robot velocity (base + joint) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="40" column="51" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1aa2a8b281631ed8de5da235b85e1482f3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::DistanceTask::m_isInitialized</definition>
        <argsstring></argsstring>
        <name>m_isInitialized</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the task has been initialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="48" column="10" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1ae12b5cd5bdb761ed0709304761ed95ac" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::DistanceTask::m_isValid</definition>
        <argsstring></argsstring>
        <name>m_isValid</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the task is valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="49" column="10" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1ad504a29fb379dc3cd7fe4266ff4741c2" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; iDynTree::KinDynComputations &gt;</type>
        <definition>std::shared_ptr&lt;iDynTree::KinDynComputations&gt; BipedalLocomotion::IK::DistanceTask::m_kinDyn</definition>
        <argsstring></argsstring>
        <name>m_kinDyn</name>
        <briefdescription>
<para>Pointer to a KinDynComputations object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="51" column="21" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1ab396ab25d6b8078266b05b21e4e1c879" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd BipedalLocomotion::IK::DistanceTask::m_jacobian</definition>
        <argsstring></argsstring>
        <name>m_jacobian</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="54" column="21" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a87dcf452d947ea831e6f78db9c01a9c2" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd BipedalLocomotion::IK::DistanceTask::m_relativeJacobian</definition>
        <argsstring></argsstring>
        <name>m_relativeJacobian</name>
        <briefdescription>
<para>Internal buffers to store the jacobian. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="54" column="32" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a57d08e2be501c4f148839d9759327691" prot="private" static="no" mutable="no">
        <type>Eigen::Vector3d</type>
        <definition>Eigen::Vector3d BipedalLocomotion::IK::DistanceTask::m_framePosition</definition>
        <argsstring></argsstring>
        <name>m_framePosition</name>
        <briefdescription>
<para>Internal buffer to store the frame position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="55" column="21" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a250fa3c8460b3adccd905754351e465e" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::IK::DistanceTask::m_kp</definition>
        <argsstring></argsstring>
        <name>m_kp</name>
        <briefdescription>
<para>Controller gain. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="56" column="12" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1aca405a4fc6cb81727a414f14511db042" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::IK::DistanceTask::m_desiredDistance</definition>
        <argsstring></argsstring>
        <name>m_desiredDistance</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
<para>Desired distance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="57" column="12" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1ac247ca83a9c1ce64b6af5a025fc88f5a" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BipedalLocomotion::IK::DistanceTask::m_referenceName</definition>
        <argsstring></argsstring>
        <name>m_referenceName</name>
        <briefdescription>
<para>Reference frame name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="59" column="17" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a5c19b34ab77346742bc5224597cac090" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BipedalLocomotion::IK::DistanceTask::m_targetFrameName</definition>
        <argsstring></argsstring>
        <name>m_targetFrameName</name>
        <briefdescription>
<para>Target frame name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="60" column="17" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a53ae795974ae8f75af5978ede2cfd2dc" prot="private" static="no" mutable="no">
        <type>iDynTree::FrameIndex</type>
        <definition>iDynTree::FrameIndex BipedalLocomotion::IK::DistanceTask::m_referenceFrameIndex</definition>
        <argsstring></argsstring>
        <name>m_referenceFrameIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="61" column="26" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1ab5d3f476a9d2d8dae2395ec412e74f2f" prot="private" static="no" mutable="no">
        <type>iDynTree::FrameIndex</type>
        <definition>iDynTree::FrameIndex BipedalLocomotion::IK::DistanceTask::m_targetFrameIndex</definition>
        <argsstring></argsstring>
        <name>m_targetFrameIndex</name>
        <briefdescription>
<para>Base and target frame name indexes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="61" column="48" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a9d783195f72121a909513ae1da96ce39" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::IK::DistanceTask::m_computedDistance</definition>
        <argsstring></argsstring>
        <name>m_computedDistance</name>
        <initializer>{0.0}</initializer>
        <briefdescription>
<para>Computed distance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="64" column="12" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a5523e96c07b9d0405ff87c9438b76c0d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::IK::DistanceTask::m_distanceNumericThreshold</definition>
        <argsstring></argsstring>
        <name>m_distanceNumericThreshold</name>
        <initializer>{0.001}</initializer>
        <briefdescription>
<para>Numeric threshold when inverting the computed distance in the Jacobian computation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="65" column="12" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1aa4dbed0db2135579039cec2eb2a51f4e" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t BipedalLocomotion::IK::DistanceTask::m_spatialVelocitySize</definition>
        <argsstring></argsstring>
        <name>m_spatialVelocitySize</name>
        <initializer>{6}</initializer>
        <briefdescription>
<para>Size of the spatial velocity vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="44" column="34" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a81d729b24e27011c23671c24fc4afab9" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t BipedalLocomotion::IK::DistanceTask::m_DoFs</definition>
        <argsstring></argsstring>
        <name>m_DoFs</name>
        <initializer>{1}</initializer>
        <briefdescription>
<para>DoFs associated to the task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="46" column="34" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a43145d1c78a3ecd118cc94758b3e0ca0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::DistanceTask::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; paramHandler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ae8bd038ace5d8bccda37b62c5712f22b">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>paramHandler</declname>
        </param>
        <briefdescription>
<para>Initialize the task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paramHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameters handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="6" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>robot_velocity_variable_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the variable contained in <computeroutput>VariablesHandler</computeroutput> describing the robot velocity   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>kp</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Gain of the distance controller   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>target_frame_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the frame of which computing the distance   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>reference_frame_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the frame with respect to which computing the distance. If empty, the world frame will be used (Default = &quot;&quot;)   </para>
</entry><entry thead="no" align='center'><para>No    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>distance_numeric_threshold</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Lowerbound for the computed distance when inverting it in the task Jacobian (Default = 0.001)   </para>
</entry><entry thead="no" align='center'><para>No   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="85" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a37d5ce15f2ffc3ea8f46a4a05b935cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::DistanceTask::setKinDyn</definition>
        <argsstring>(std::shared_ptr&lt; iDynTree::KinDynComputations &gt; kinDyn) override</argsstring>
        <name>setKinDyn</name>
        <reimplements refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask_1acbafe7a440ba7e7fbd0d174dc994accf">setKinDyn</reimplements>
        <param>
          <type>std::shared_ptr&lt; iDynTree::KinDynComputations &gt;</type>
          <declname>kinDyn</declname>
        </param>
        <briefdescription>
<para>Set the kinDynComputations object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kinDyn</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a kinDynComputations object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="92" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a8365912c55099acb5061a876f2b386e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::DistanceTask::setVariablesHandler</definition>
        <argsstring>(const System::VariablesHandler &amp;variablesHandler) override</argsstring>
        <name>setVariablesHandler</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a898c2f93e48aeeb41e29d17c17b95437">setVariablesHandler</reimplements>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref> &amp;</type>
          <declname>variablesHandler</declname>
        </param>
        <briefdescription>
<para>Set the set of variables required by the task. </para>
        </briefdescription>
        <detaileddescription>
<para>The variables are stored in the <ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variablesHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to a variables handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The handler must contain a variable named as the parameter <computeroutput>robot_velocity_variable_name</computeroutput> stored in the parameter handler. The variable represents the generalized velocity of the robot. Where the generalized robot velocity is a vector containing the base spatial-velocity (expressed in mixed representation) and the joints velocity. </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="105" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a2458c120729223e110e76ece8344e8d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::DistanceTask::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1accd4ab19a7e8738abe53b485d8acbf1c">update</reimplements>
        <briefdescription>
<para>Update the content of the task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="111" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1aa3cc5b03e7935cee91287a79089c6972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::DistanceTask::setDesiredDistance</definition>
        <argsstring>(double desiredDistance)</argsstring>
        <name>setDesiredDistance</name>
        <param>
          <type>double</type>
          <declname>desiredDistance</declname>
        </param>
        <briefdescription>
<para>setDesiredDistance Set the desired distance between the target and the reference frame </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>desiredDistance</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired distance expressed in meters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The desired distance is considered without sign. </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="119" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a1efde120dccb1eebc59fc0e10f482823" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::DistanceTask::setSetPoint</definition>
        <argsstring>(double desiredDistance)</argsstring>
        <name>setSetPoint</name>
        <param>
          <type>double</type>
          <declname>desiredDistance</declname>
        </param>
        <briefdescription>
<para>setSetPoint Set the desired distance between the target and the reference frame </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>desiredDistance</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired distance expressed in meters</para>
</parameterdescription>
</parameteritem>
</parameterlist>
It is equivalent to setDesiredDistance</para>
<para><simplesect kind="note"><para>The desired distance is considered without sign. </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="130" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a64bc311b8ca41c302a5cdca56a6975bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double BipedalLocomotion::IK::DistanceTask::getDistance</definition>
        <argsstring>() const</argsstring>
        <name>getDistance</name>
        <briefdescription>
<para>Get the computed distance between the target frame and either the world origin, or the base origin. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The computed distance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="137" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a1bb91a55a081577bfeb7eef6cb869b59" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::size_t</type>
        <definition>std::size_t BipedalLocomotion::IK::DistanceTask::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a34621cd88c6d60909f09e95226f2cd67">size</reimplements>
        <briefdescription>
<para>Get the size of the task. </para>
        </briefdescription>
        <detaileddescription>
<para>(I.e the number of rows of the vector b) <simplesect kind="return"><para>the size of the task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="143" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1afc4afe6cc7d8ce530c82ddc6395bce61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2f9d37ec58342f227021c12a4a539748" kindref="member">Type</ref></type>
        <definition>Type BipedalLocomotion::IK::DistanceTask::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ac20d8e993c66663b61f587d9642f3e8a">type</reimplements>
        <briefdescription>
<para>The <ref refid="classBipedalLocomotion_1_1IK_1_1DistanceTask" kindref="compound">DistanceTask</ref> is an equality task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the size of the task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="149" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1DistanceTask_1ae20fef4d74c4745dfd513db1557e41a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::DistanceTask::isValid</definition>
        <argsstring>() const override</argsstring>
        <name>isValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2566bae7a097d11b420b89cdd3f2002f">isValid</reimplements>
        <briefdescription>
<para>Determines the validity of the objects retrieved with <ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad510fff46eb9cbbc65775b1a9490e297" kindref="member">getA()</ref> and <ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a8c65780b85d3927038c3320d3cfca730" kindref="member">getB()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the objects are valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/DistanceTask.h" line="155" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classBipedalLocomotion_1_1IK_1_1DistanceTask" kindref="compound">DistanceTask</ref> class controls the distance of a frame with respect the world origin, or another frame. </para>
    </briefdescription>
    <detaileddescription>
<para>The task assumes perfect control of the robot velocity <formula id="212">$\nu$</formula> that contains the base linear and angular velocity expressed in mixed representation and the joint velocities. The task represents the following equation <formula id="218">\[ \frac{1}{d} p ^ \top J_p \nu = k (d ^ * - d) \]</formula> where <formula id="219">$p$</formula> is the position of the target frame wrt the base or world frame. <formula id="220">$d$</formula> is the current distance. <formula id="221">$J_p$</formula> is the linear part of the robot jacobian. <formula id="167">$k$</formula> is the controller gain and <formula id="222">$d ^ *$</formula> is the desired distance. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BipedalLocomotion::IK::DistanceTask</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1DistanceTask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::IK::IKLinearTask</label>
        <link refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::LinearTask</label>
        <link refid="classBipedalLocomotion_1_1System_1_1LinearTask"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="1">
        <label>BipedalLocomotion::IK::DistanceTask</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1DistanceTask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::IK::IKLinearTask</label>
        <link refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::LinearTask</label>
        <link refid="classBipedalLocomotion_1_1System_1_1LinearTask"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_description</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/IK/DistanceTask.h" line="37" column="1" bodyfile="BipedalLocomotion/IK/DistanceTask.h" bodystart="38" bodyend="156"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad510fff46eb9cbbc65775b1a9490e297" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>getA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a8c65780b85d3927038c3320d3cfca730" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>getB</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a1d152be26f750d933bc07baf1344e97d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>getDescription</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a64bc311b8ca41c302a5cdca56a6975bd" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>getDistance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a591be3a0f92c9e1c40ccadf85c21f739" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>getResidual</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a43145d1c78a3ecd118cc94758b3e0ca0" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1ae20fef4d74c4745dfd513db1557e41a7" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>isValid</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1aa95f6768b7cd98aab6727e2eb729a308" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_A</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a0e86b8ecde78a0d6e87fcb2c373b2151" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_b</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a9d783195f72121a909513ae1da96ce39" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_computedDistance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a5efff74f1d43a59376a9c93a0400120a" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_description</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1aca405a4fc6cb81727a414f14511db042" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_desiredDistance</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a5523e96c07b9d0405ff87c9438b76c0d" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_distanceNumericThreshold</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a81d729b24e27011c23671c24fc4afab9" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_DoFs</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a57d08e2be501c4f148839d9759327691" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_framePosition</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1aa2a8b281631ed8de5da235b85e1482f3" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_isInitialized</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1ae12b5cd5bdb761ed0709304761ed95ac" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_isValid</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1ab396ab25d6b8078266b05b21e4e1c879" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_jacobian</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1ad504a29fb379dc3cd7fe4266ff4741c2" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_kinDyn</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a250fa3c8460b3adccd905754351e465e" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_kp</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a53ae795974ae8f75af5978ede2cfd2dc" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_referenceFrameIndex</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1ac247ca83a9c1ce64b6af5a025fc88f5a" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_referenceName</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a87dcf452d947ea831e6f78db9c01a9c2" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_relativeJacobian</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a04f796a5f53f7c856882ce1d43d81d12" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_robotVelocityVariable</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1aa4dbed0db2135579039cec2eb2a51f4e" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_spatialVelocitySize</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1ab5d3f476a9d2d8dae2395ec412e74f2f" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_targetFrameIndex</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a5c19b34ab77346742bc5224597cac090" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>m_targetFrameName</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1aa3cc5b03e7935cee91287a79089c6972" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>setDesiredDistance</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a37d5ce15f2ffc3ea8f46a4a05b935cae" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>setKinDyn</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a1efde120dccb1eebc59fc0e10f482823" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>setSetPoint</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a8365912c55099acb5061a876f2b386e3" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>setVariablesHandler</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a1bb91a55a081577bfeb7eef6cb869b59" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>size</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a06fab6bb77dd556a74c76b6e57dc0ba1" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>subA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad6a0743b7902e539d634358b269741b4" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>subA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2f9d37ec58342f227021c12a4a539748" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>Type</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1afc4afe6cc7d8ce530c82ddc6395bce61" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>type</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1DistanceTask_1a2458c120729223e110e76ece8344e8d8" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>update</name></member>
      <member refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask_1ae1ea36d22880e1068c77661eef76ecf0" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>~IKLinearTask</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a22edf322e7504d1a197b687d265445d7" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::DistanceTask</scope><name>~LinearTask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
