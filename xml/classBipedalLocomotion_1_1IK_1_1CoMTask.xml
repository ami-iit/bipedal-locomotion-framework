<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1IK_1_1CoMTask" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::IK::CoMTask</compoundname>
    <basecompoundref refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask" prot="public" virt="non-virtual">BipedalLocomotion::IK::IKLinearTask</basecompoundref>
    <includes local="no">BipedalLocomotion/IK/CoMTask.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1ab9b189c36c6700726c1b4ce4c097c73b" prot="private" static="no" mutable="no">
        <type>LieGroupControllers::ProportionalControllerR3d</type>
        <definition>LieGroupControllers::ProportionalControllerR3d BipedalLocomotion::IK::CoMTask::m_R3Controller</definition>
        <argsstring></argsstring>
        <name>m_R3Controller</name>
        <briefdescription>
<para>P Controller in R3. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="50" column="52" bodyfile="BipedalLocomotion/IK/CoMTask.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1a07d5a5e878c6a197e329ed3c9d57312c" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler_1_1VariableDescription" kindref="compound">System::VariablesHandler::VariableDescription</ref></type>
        <definition>System::VariablesHandler::VariableDescription BipedalLocomotion::IK::CoMTask::m_robotVelocityVariable</definition>
        <argsstring></argsstring>
        <name>m_robotVelocityVariable</name>
        <briefdescription>
<para>Variable describing the robot velocity (base + joint) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="52" column="51" bodyfile="BipedalLocomotion/IK/CoMTask.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1a8ff2c743ce50610fe653079d3bded38b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::CoMTask::m_isInitialized</definition>
        <argsstring></argsstring>
        <name>m_isInitialized</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the task has been initialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="60" column="10" bodyfile="BipedalLocomotion/IK/CoMTask.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1a2fbf31df737af962fed9a3bea4ef2569" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::CoMTask::m_isValid</definition>
        <argsstring></argsstring>
        <name>m_isValid</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the task is valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="61" column="10" bodyfile="BipedalLocomotion/IK/CoMTask.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1adda377f657bfa045ae413cc98bc4a7f5" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; iDynTree::KinDynComputations &gt;</type>
        <definition>std::shared_ptr&lt;iDynTree::KinDynComputations&gt; BipedalLocomotion::IK::CoMTask::m_kinDyn</definition>
        <argsstring></argsstring>
        <name>m_kinDyn</name>
        <briefdescription>
<para>Pointer to a KinDynComputations object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="63" column="21" bodyfile="BipedalLocomotion/IK/CoMTask.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1afe60f0e276cae1415491d0d0f952f126" prot="private" static="no" mutable="no">
        <type>std::array&lt; bool, m_linearVelocitySize &gt;</type>
        <definition>std::array&lt;bool, m_linearVelocitySize&gt; BipedalLocomotion::IK::CoMTask::m_mask</definition>
        <argsstring></argsstring>
        <name>m_mask</name>
        <initializer>{true, true, true}</initializer>
        <briefdescription>
<para>Mask used to select the DoFs controlled by the task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="67" column="16" bodyfile="BipedalLocomotion/IK/CoMTask.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1a7596d779c538d3890551340fd43501cb" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t BipedalLocomotion::IK::CoMTask::m_DoFs</definition>
        <argsstring></argsstring>
        <name>m_DoFs</name>
        <initializer>{m_linearVelocitySize}</initializer>
        <briefdescription>
<para>DoFs associated to the task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="68" column="17" bodyfile="BipedalLocomotion/IK/CoMTask.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1a9f65cbf828750a418faf7be55bccc6fa" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd BipedalLocomotion::IK::CoMTask::m_jacobian</definition>
        <argsstring></argsstring>
        <name>m_jacobian</name>
        <briefdescription>
<para>CoM Jacobian matrix in MIXED representation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="70" column="21" bodyfile="BipedalLocomotion/IK/CoMTask.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1a9b6bac87c5de018c913d5a41047b09e0" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t BipedalLocomotion::IK::CoMTask::m_linearVelocitySize</definition>
        <argsstring></argsstring>
        <name>m_linearVelocitySize</name>
        <initializer>{3}</initializer>
        <briefdescription>
<para>Size of the linear velocity vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="57" column="34" bodyfile="BipedalLocomotion/IK/CoMTask.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1a8945afdb561e7767d53c4cd6eb52cac0" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t BipedalLocomotion::IK::CoMTask::m_spatialVelocitySize</definition>
        <argsstring></argsstring>
        <name>m_spatialVelocitySize</name>
        <initializer>{6}</initializer>
        <briefdescription>
<para>Size of the spatial velocity vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="58" column="34" bodyfile="BipedalLocomotion/IK/CoMTask.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1a844e3b75ead48402cd2f3de84b9dfcf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::CoMTask::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; paramHandler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ae8bd038ace5d8bccda37b62c5712f22b">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>paramHandler</declname>
        </param>
        <briefdescription>
<para>Initialize the task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paramHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameters handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="4" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>robot_velocity_variable_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the variable contained in <computeroutput>VariablesHandler</computeroutput> describing the robot velocity   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>kp_linear</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput> or <computeroutput>vector&lt;double&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Gain of the position controller   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>mask</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector&lt;bool&gt;</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Mask representing the DoFs controlled. E.g. [1,0,1] will enable the control on the x and z coordinates only. (Default value, [1,1,1])   </para>
</entry><entry thead="no" align='center'><para>No   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. Where the generalized robot velocity is a vector containing the base spatial-velocity (expressed in mixed representation) and the joint velocities. </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="87" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1a5547bc6b5727fbec9947d6d4ede197b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::CoMTask::setKinDyn</definition>
        <argsstring>(std::shared_ptr&lt; iDynTree::KinDynComputations &gt; kinDyn) override</argsstring>
        <name>setKinDyn</name>
        <reimplements refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask_1acbafe7a440ba7e7fbd0d174dc994accf">setKinDyn</reimplements>
        <param>
          <type>std::shared_ptr&lt; iDynTree::KinDynComputations &gt;</type>
          <declname>kinDyn</declname>
        </param>
        <briefdescription>
<para>Set the kinDynComputations object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kinDyn</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a kinDynComputations object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="94" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1a4c561605260cbec8a8b485f32977acc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::CoMTask::setVariablesHandler</definition>
        <argsstring>(const System::VariablesHandler &amp;variablesHandler) override</argsstring>
        <name>setVariablesHandler</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a898c2f93e48aeeb41e29d17c17b95437">setVariablesHandler</reimplements>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref> &amp;</type>
          <declname>variablesHandler</declname>
        </param>
        <briefdescription>
<para>Set the set of variables required by the task. </para>
        </briefdescription>
        <detaileddescription>
<para>The variables are stored in the <ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variablesHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to a variables handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The handler must contain a variable named as the parameter <computeroutput>robot_velocity_variable_name</computeroutput> stored in the parameter handler. The variable represents the generalized velocity of the robot. Where the generalized robot velocity is a vector containing the base spatial-velocity (expressed in mixed representation) and the joints velocity. </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="107" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1a9832f6dbb6371acca37faedfbafd720a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::CoMTask::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1accd4ab19a7e8738abe53b485d8acbf1c">update</reimplements>
        <briefdescription>
<para>Update the content of the element. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="113" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1a5d1ff22f7b77dcbb05b48e2893a0b6e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::CoMTask::setSetPoint</definition>
        <argsstring>(Eigen::Ref&lt; const Eigen::Vector3d &gt; position, Eigen::Ref&lt; const Eigen::Vector3d &gt; velocity)</argsstring>
        <name>setSetPoint</name>
        <param>
          <type>Eigen::Ref&lt; const Eigen::Vector3d &gt;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; const Eigen::Vector3d &gt;</type>
          <declname>velocity</declname>
        </param>
        <briefdescription>
<para>Set the desired set-point of the trajectory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the CoM </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>velocity of the CoM expressed in mixed representation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="121" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1ab6ca18e2a25621c49c3c48503a123b24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::size_t</type>
        <definition>std::size_t BipedalLocomotion::IK::CoMTask::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a34621cd88c6d60909f09e95226f2cd67">size</reimplements>
        <briefdescription>
<para>Get the size of the task. </para>
        </briefdescription>
        <detaileddescription>
<para>(I.e the number of rows of the vector b) <simplesect kind="return"><para>the size of the task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="127" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1a3042433b1418622521962e99e3027357" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2f9d37ec58342f227021c12a4a539748" kindref="member">Type</ref></type>
        <definition>Type BipedalLocomotion::IK::CoMTask::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ac20d8e993c66663b61f587d9642f3e8a">type</reimplements>
        <briefdescription>
<para>The <ref refid="classBipedalLocomotion_1_1IK_1_1CoMTask" kindref="compound">CoMTask</ref> is an equality task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the size of the task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="133" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1CoMTask_1a4ccdae3479d871d3f7f9c7ab07312fd1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::CoMTask::isValid</definition>
        <argsstring>() const override</argsstring>
        <name>isValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2566bae7a097d11b420b89cdd3f2002f">isValid</reimplements>
        <briefdescription>
<para>Determines the validity of the objects retrieved with <ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad510fff46eb9cbbc65775b1a9490e297" kindref="member">getA()</ref> and <ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a8c65780b85d3927038c3320d3cfca730" kindref="member">getB()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the objects are valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/CoMTask.h" line="139" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1IK_1_1SE3Task" kindref="compound">SE3Task</ref> is a concrete implementation of the Task. </para>
    </briefdescription>
    <detaileddescription>
<para>Please use this element if you want to control the position and the orientation of a given frame rigidly attached to the robot. The task assumes perfect control of the robot velocity <formula id="117">$\nu$</formula> that contains the base linear and angular velocity expressed in mixed representation and the joint velocities. The task represents the following equation <formula id="121">\[ J \nu = \mathrm{v} ^ * \]</formula> where <formula id="122">$J$</formula> is the robot jacobian and <formula id="123">$\mathrm{v} ^ *$</formula> is the desired velocity. The desired velocity is chosen such that the frame will asymptotically converge to the desired trajectory. The linear component of <formula id="123">$\mathrm{v} ^ *$</formula> is computed with a standard Proportional controller in <formula id="124">$R^3$</formula> while the angular velocity is computed by a Proportional controller in <formula id="103">$SO(3)$</formula>. <simplesect kind="note"><para>Please refer to <ulink url="https://github.com/ami-iit/lie-group-controllers">https://github.com/ami-iit/lie-group-controllers</ulink> if you are interested in the implementation of the PD controllers. </para>
</simplesect>
<simplesect kind="note"><para>The <ref refid="classBipedalLocomotion_1_1IK_1_1SE3Task" kindref="compound">SE3Task</ref> is technically not a <formula id="125">$SE(3)$</formula> space defined task, instead is a <formula id="126">$SO(3) \times \mathbb{R}^3$</formula> task. Theoretically, there are differences between the two due to the different definitions of exponential maps and logarithm maps. Please consider that here the MIXED representation is used to define the 6d-velocity. You can find further details in Section 2.3.4 of <ulink url="https://traversaro.github.io/phd-thesis/traversaro-phd-thesis.pdf">https://traversaro.github.io/phd-thesis/traversaro-phd-thesis.pdf</ulink>. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BipedalLocomotion::IK::IKLinearTask</label>
        <link refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::IK::CoMTask</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1CoMTask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::LinearTask</label>
        <link refid="classBipedalLocomotion_1_1System_1_1LinearTask"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>BipedalLocomotion::IK::IKLinearTask</label>
        <link refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::IK::CoMTask</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1CoMTask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::LinearTask</label>
        <link refid="classBipedalLocomotion_1_1System_1_1LinearTask"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_description</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/IK/CoMTask.h" line="48" column="1" bodyfile="BipedalLocomotion/IK/CoMTask.h" bodystart="49" bodyend="140"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad510fff46eb9cbbc65775b1a9490e297" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>getA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a8c65780b85d3927038c3320d3cfca730" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>getB</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a1d152be26f750d933bc07baf1344e97d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>getDescription</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a591be3a0f92c9e1c40ccadf85c21f739" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>getResidual</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1a844e3b75ead48402cd2f3de84b9dfcf6" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1a4ccdae3479d871d3f7f9c7ab07312fd1" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>isValid</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1aa95f6768b7cd98aab6727e2eb729a308" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>m_A</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a0e86b8ecde78a0d6e87fcb2c373b2151" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>m_b</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a5efff74f1d43a59376a9c93a0400120a" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>m_description</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1a7596d779c538d3890551340fd43501cb" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>m_DoFs</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1a8ff2c743ce50610fe653079d3bded38b" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>m_isInitialized</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1a2fbf31df737af962fed9a3bea4ef2569" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>m_isValid</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1a9f65cbf828750a418faf7be55bccc6fa" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>m_jacobian</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1adda377f657bfa045ae413cc98bc4a7f5" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>m_kinDyn</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1a9b6bac87c5de018c913d5a41047b09e0" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>m_linearVelocitySize</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1afe60f0e276cae1415491d0d0f952f126" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>m_mask</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1ab9b189c36c6700726c1b4ce4c097c73b" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>m_R3Controller</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1a07d5a5e878c6a197e329ed3c9d57312c" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>m_robotVelocityVariable</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1a8945afdb561e7767d53c4cd6eb52cac0" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>m_spatialVelocitySize</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1a5547bc6b5727fbec9947d6d4ede197b9" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>setKinDyn</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1a5d1ff22f7b77dcbb05b48e2893a0b6e8" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>setSetPoint</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1a4c561605260cbec8a8b485f32977acc7" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>setVariablesHandler</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1ab6ca18e2a25621c49c3c48503a123b24" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>size</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a06fab6bb77dd556a74c76b6e57dc0ba1" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>subA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad6a0743b7902e539d634358b269741b4" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>subA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2f9d37ec58342f227021c12a4a539748" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>Type</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1a3042433b1418622521962e99e3027357" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>type</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1CoMTask_1a9832f6dbb6371acca37faedfbafd720a" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>update</name></member>
      <member refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask_1ae1ea36d22880e1068c77661eef76ecf0" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>~IKLinearTask</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a22edf322e7504d1a197b687d265445d7" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::CoMTask</scope><name>~LinearTask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
