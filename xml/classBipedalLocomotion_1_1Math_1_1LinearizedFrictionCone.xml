<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Math_1_1LinearizedFrictionCone" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Math::LinearizedFrictionCone</compoundname>
    <includes local="no">BipedalLocomotion/Math/LinearizedFrictionCone.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Math_1_1LinearizedFrictionCone_1a0dcbb65ac148e5e7f90d548d2c2de5f7" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd BipedalLocomotion::Math::LinearizedFrictionCone::m_A</definition>
        <argsstring></argsstring>
        <name>m_A</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/LinearizedFrictionCone.h" line="35" column="21" bodyfile="BipedalLocomotion/Math/LinearizedFrictionCone.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Math_1_1LinearizedFrictionCone_1aaa98632aa52d0ea97982e47ebc2c5647" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::Math::LinearizedFrictionCone::m_b</definition>
        <argsstring></argsstring>
        <name>m_b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/LinearizedFrictionCone.h" line="36" column="21" bodyfile="BipedalLocomotion/Math/LinearizedFrictionCone.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Math_1_1LinearizedFrictionCone_1acb4b8a3f581448db1535827dc076ceeb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Math::LinearizedFrictionCone::m_isIntialized</definition>
        <argsstring></argsstring>
        <name>m_isIntialized</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the class has been correctly initialize. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/LinearizedFrictionCone.h" line="38" column="10" bodyfile="BipedalLocomotion/Math/LinearizedFrictionCone.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Math_1_1LinearizedFrictionCone_1aefd4549ed1631d88f9e984a8edd0d89a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Math::LinearizedFrictionCone::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>initialize</name>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize the continuous algebraic riccati equation solver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameter handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The following parameters are required: <table rows="3" cols="3"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>number_of_slices</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>int</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Number of slices used to split 90 deg.    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>static_friction_coefficient</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Static friction coefficient.   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>true in case of success/false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/LinearizedFrictionCone.h" line="52" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Math_1_1LinearizedFrictionCone_1aad236d7d978b89152312d7d572bf069c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Ref&lt; const Eigen::MatrixXd &gt;</type>
        <definition>Eigen::Ref&lt;const Eigen::MatrixXd&gt; BipedalLocomotion::Math::LinearizedFrictionCone::getA</definition>
        <argsstring>() const</argsstring>
        <name>getA</name>
        <briefdescription>
<para>Get the matrix A. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the matrix A. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/LinearizedFrictionCone.h" line="58" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Math_1_1LinearizedFrictionCone_1af5d5c9a1b2cf4fd7ca3ea5e93abb28b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
        <definition>Eigen::Ref&lt;const Eigen::VectorXd&gt; BipedalLocomotion::Math::LinearizedFrictionCone::getB</definition>
        <argsstring>() const</argsstring>
        <name>getB</name>
        <briefdescription>
<para>Get the vector B. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the matrix B.. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/Math/LinearizedFrictionCone.h" line="64" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1Math_1_1LinearizedFrictionCone" kindref="compound">LinearizedFrictionCone</ref> computes the polyhedral approximation of the friction cone. </para>
    </briefdescription>
    <detaileddescription>
<para>A point contact remains fixed with respect the environment if the contact force lies in a cone described by <formula id="218">\[ f ^c \cdot n &gt; 0 \quad | f ^t | \le \mu f^c \cdot n \]</formula> where <formula id="219">$ f^c $</formula> is the contact force, <formula id="220">$ n $</formula> is the vector normal to the contact surface. <formula id="221">$ f^t $</formula> is the tangential force to the contact surface and <formula id="222">$ \mu $</formula> is the friction parameter. The <ref refid="classBipedalLocomotion_1_1Math_1_1LinearizedFrictionCone" kindref="compound">LinearizedFrictionCone</ref> aims to compute the polyhedral approximation of <formula id="223">$ | f ^t | \le \mu f^c \cdot n $</formula> by spitting the base of the cone into slices. </para>
    </detaileddescription>
    <location file="BipedalLocomotion/Math/LinearizedFrictionCone.h" line="33" column="1" bodyfile="BipedalLocomotion/Math/LinearizedFrictionCone.h" bodystart="34" bodyend="65"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Math_1_1LinearizedFrictionCone_1aad236d7d978b89152312d7d572bf069c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::LinearizedFrictionCone</scope><name>getA</name></member>
      <member refid="classBipedalLocomotion_1_1Math_1_1LinearizedFrictionCone_1af5d5c9a1b2cf4fd7ca3ea5e93abb28b7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::LinearizedFrictionCone</scope><name>getB</name></member>
      <member refid="classBipedalLocomotion_1_1Math_1_1LinearizedFrictionCone_1aefd4549ed1631d88f9e984a8edd0d89a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Math::LinearizedFrictionCone</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1Math_1_1LinearizedFrictionCone_1a0dcbb65ac148e5e7f90d548d2c2de5f7" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Math::LinearizedFrictionCone</scope><name>m_A</name></member>
      <member refid="classBipedalLocomotion_1_1Math_1_1LinearizedFrictionCone_1aaa98632aa52d0ea97982e47ebc2c5647" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Math::LinearizedFrictionCone</scope><name>m_b</name></member>
      <member refid="classBipedalLocomotion_1_1Math_1_1LinearizedFrictionCone_1acb4b8a3f581448db1535827dc076ceeb" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Math::LinearizedFrictionCone</scope><name>m_isIntialized</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
