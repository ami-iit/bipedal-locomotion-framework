<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::IK::JointVelocityLimitsTask</compoundname>
    <basecompoundref refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask" prot="public" virt="non-virtual">BipedalLocomotion::IK::IKLinearTask</basecompoundref>
    <includes local="no">BipedalLocomotion/IK/JointVelocityLimitsTask.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1a5b3131c9a795bfc73cb0c156aa485819" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::IK::JointVelocityLimitsTask::m_upperLimits</definition>
        <argsstring></argsstring>
        <name>m_upperLimits</name>
        <briefdescription>
<para>Upper limits in radians. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/JointVelocityLimitsTask.h" line="36" column="21" bodyfile="BipedalLocomotion/IK/JointVelocityLimitsTask.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1abc713e334a5e1f3af5fc72991696ffd6" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd BipedalLocomotion::IK::JointVelocityLimitsTask::m_lowerLimits</definition>
        <argsstring></argsstring>
        <name>m_lowerLimits</name>
        <briefdescription>
<para>Lower limits in radians. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/JointVelocityLimitsTask.h" line="37" column="21" bodyfile="BipedalLocomotion/IK/JointVelocityLimitsTask.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1a4c2113b070fcd8e6a160e67c2dd4612f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string BipedalLocomotion::IK::JointVelocityLimitsTask::m_robotVelocityVariableName</definition>
        <argsstring></argsstring>
        <name>m_robotVelocityVariableName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/JointVelocityLimitsTask.h" line="39" column="17" bodyfile="BipedalLocomotion/IK/JointVelocityLimitsTask.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1a0e7000bcbd38c2230da3cdaaa2483c5c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::JointVelocityLimitsTask::m_isInitialized</definition>
        <argsstring></argsstring>
        <name>m_isInitialized</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the task has been initialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/JointVelocityLimitsTask.h" line="41" column="10" bodyfile="BipedalLocomotion/IK/JointVelocityLimitsTask.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1a33bb418d22d7cad1bb16b35fb96b193a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::JointVelocityLimitsTask::m_isValid</definition>
        <argsstring></argsstring>
        <name>m_isValid</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>True if the task is valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/JointVelocityLimitsTask.h" line="42" column="10" bodyfile="BipedalLocomotion/IK/JointVelocityLimitsTask.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1a3e86da98734bd4d3f260bb427674f0e6" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; iDynTree::KinDynComputations &gt;</type>
        <definition>std::shared_ptr&lt;iDynTree::KinDynComputations&gt; BipedalLocomotion::IK::JointVelocityLimitsTask::m_kinDyn</definition>
        <argsstring></argsstring>
        <name>m_kinDyn</name>
        <briefdescription>
<para>Pointer to a KinDynComputations object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/JointVelocityLimitsTask.h" line="44" column="21" bodyfile="BipedalLocomotion/IK/JointVelocityLimitsTask.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1ac93971562fef73957a7e1709f7d2fe00" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::JointVelocityLimitsTask::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; paramHandler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ae8bd038ace5d8bccda37b62c5712f22b">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>paramHandler</declname>
        </param>
        <briefdescription>
<para>Initialize the task. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>paramHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameters handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="4" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>robot_velocity_variable_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the variable contained in <computeroutput>VariablesHandler</computeroutput> describing the robot velocity   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>upper_limits</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Vector containing the upper limit of the joints velocity   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>lower_limits</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>vector</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Vector containing the lower limit of the joints velocity   </para>
</entry><entry thead="no" align='center'><para>Yes   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. Where the generalized robot velocity is a vector containing the base spatial-velocity (expressed in mixed representation) and the joint velocities. </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/JointVelocityLimitsTask.h" line="65" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1a6b42a9c0d9f8be41e81d329ea8a929e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::JointVelocityLimitsTask::setKinDyn</definition>
        <argsstring>(std::shared_ptr&lt; iDynTree::KinDynComputations &gt; kinDyn) override</argsstring>
        <name>setKinDyn</name>
        <reimplements refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask_1acbafe7a440ba7e7fbd0d174dc994accf">setKinDyn</reimplements>
        <param>
          <type>std::shared_ptr&lt; iDynTree::KinDynComputations &gt;</type>
          <declname>kinDyn</declname>
        </param>
        <briefdescription>
<para>Set the kinDynComputations object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kinDyn</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a kinDynComputations object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/JointVelocityLimitsTask.h" line="72" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1af2256995aee207674fecd1429b848fc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::JointVelocityLimitsTask::setVariablesHandler</definition>
        <argsstring>(const System::VariablesHandler &amp;variablesHandler) override</argsstring>
        <name>setVariablesHandler</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a898c2f93e48aeeb41e29d17c17b95437">setVariablesHandler</reimplements>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref> &amp;</type>
          <declname>variablesHandler</declname>
        </param>
        <briefdescription>
<para>Set the set of variables required by the task. </para>
        </briefdescription>
        <detaileddescription>
<para>The variables are stored in the <ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variablesHandler</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to a variables handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The handler must contain a variable named as the parameter <computeroutput>robot_velocity_variable_name</computeroutput> stored in the parameter handler. The variable represents the generalized velocity of the robot. Where the generalized robot velocity is a vector containing the base spatial-velocity (expressed in mixed representation) and the joints velocity. </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/JointVelocityLimitsTask.h" line="85" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1a5d156964f9a3931e42cd1755e90edf9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::JointVelocityLimitsTask::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1accd4ab19a7e8738abe53b485d8acbf1c">update</reimplements>
        <briefdescription>
<para>Update the content of the element. </para>
        </briefdescription>
        <detaileddescription>
<para>For this task the matrices A and b are constant and do not need to be updated. <simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/JointVelocityLimitsTask.h" line="92" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1af6915f8ddf58110d4c98b11ad4ec0736" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::size_t</type>
        <definition>std::size_t BipedalLocomotion::IK::JointVelocityLimitsTask::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a34621cd88c6d60909f09e95226f2cd67">size</reimplements>
        <briefdescription>
<para>Get the size of the task. </para>
        </briefdescription>
        <detaileddescription>
<para>(I.e the number of rows of the vector b) <simplesect kind="return"><para>the size of the task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/JointVelocityLimitsTask.h" line="98" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1aa9c9f929781da68cc31620e79080d7a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2f9d37ec58342f227021c12a4a539748" kindref="member">Type</ref></type>
        <definition>Type BipedalLocomotion::IK::JointVelocityLimitsTask::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ac20d8e993c66663b61f587d9642f3e8a">type</reimplements>
        <briefdescription>
<para>The JointsLimitsTask is an inequality task. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the size of the task. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/JointVelocityLimitsTask.h" line="104" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1a872cccb8186c72f9ae1907e4161a4623" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::IK::JointVelocityLimitsTask::isValid</definition>
        <argsstring>() const override</argsstring>
        <name>isValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2566bae7a097d11b420b89cdd3f2002f">isValid</reimplements>
        <briefdescription>
<para>Determines the validity of the objects retrieved with <ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad510fff46eb9cbbc65775b1a9490e297" kindref="member">getA()</ref> and <ref refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a8c65780b85d3927038c3320d3cfca730" kindref="member">getB()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the objects are valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/IK/JointVelocityLimitsTask.h" line="110" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask" kindref="compound">JointVelocityLimitsTask</ref> is a concrete implementation of the Task. </para>
    </briefdescription>
    <detaileddescription>
<para>Please use this element if you want to ensure that the generated joint velocity will consider the joints velocity limits. The task represents the following equation <formula id="287">\[ \dot{s}_{-} \preceq \begin{bmatrix} 0_6 &amp; I_n \end{bmatrix} \nu \preceq \dot{s}_{+} \]</formula> where <formula id="53">$0_6$</formula> and <formula id="54">$I_n$</formula> are the zero and the identity matrix. <formula id="288">$\dot{s} _{-}$</formula> and <formula id="289">$\dot{s} _{+}$</formula> are the lower and upper limits of the joints velocity. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BipedalLocomotion::IK::IKLinearTask</label>
        <link refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::IK::JointVelocityLimitsTask</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::LinearTask</label>
        <link refid="classBipedalLocomotion_1_1System_1_1LinearTask"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>BipedalLocomotion::IK::IKLinearTask</label>
        <link refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::IK::JointVelocityLimitsTask</label>
        <link refid="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::LinearTask</label>
        <link refid="classBipedalLocomotion_1_1System_1_1LinearTask"/>
        <childnode refid="4" relation="usage">
          <edgelabel>m_description</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/IK/JointVelocityLimitsTask.h" line="34" column="1" bodyfile="BipedalLocomotion/IK/JointVelocityLimitsTask.h" bodystart="35" bodyend="111"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad510fff46eb9cbbc65775b1a9490e297" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>getA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a8c65780b85d3927038c3320d3cfca730" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>getB</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a1d152be26f750d933bc07baf1344e97d" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>getDescription</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a591be3a0f92c9e1c40ccadf85c21f739" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>getResidual</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1ac93971562fef73957a7e1709f7d2fe00" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1a872cccb8186c72f9ae1907e4161a4623" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>isValid</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1aa95f6768b7cd98aab6727e2eb729a308" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>m_A</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a0e86b8ecde78a0d6e87fcb2c373b2151" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>m_b</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a5efff74f1d43a59376a9c93a0400120a" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>m_description</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1a0e7000bcbd38c2230da3cdaaa2483c5c" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>m_isInitialized</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1a33bb418d22d7cad1bb16b35fb96b193a" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>m_isValid</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1a3e86da98734bd4d3f260bb427674f0e6" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>m_kinDyn</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1abc713e334a5e1f3af5fc72991696ffd6" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>m_lowerLimits</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1a4c2113b070fcd8e6a160e67c2dd4612f" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>m_robotVelocityVariableName</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1a5b3131c9a795bfc73cb0c156aa485819" prot="private" virt="non-virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>m_upperLimits</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1a6b42a9c0d9f8be41e81d329ea8a929e0" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>setKinDyn</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1af2256995aee207674fecd1429b848fc8" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>setVariablesHandler</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1af6915f8ddf58110d4c98b11ad4ec0736" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>size</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a06fab6bb77dd556a74c76b6e57dc0ba1" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>subA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1ad6a0743b7902e539d634358b269741b4" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>subA</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a2f9d37ec58342f227021c12a4a539748" prot="public" virt="non-virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>Type</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1aa9c9f929781da68cc31620e79080d7a0" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>type</name></member>
      <member refid="classBipedalLocomotion_1_1IK_1_1JointVelocityLimitsTask_1a5d156964f9a3931e42cd1755e90edf9b" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>update</name></member>
      <member refid="structBipedalLocomotion_1_1IK_1_1IKLinearTask_1ae1ea36d22880e1068c77661eef76ecf0" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>~IKLinearTask</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1LinearTask_1a22edf322e7504d1a197b687d265445d7" prot="public" virt="virtual"><scope>BipedalLocomotion::IK::JointVelocityLimitsTask</scope><name>~LinearTask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
