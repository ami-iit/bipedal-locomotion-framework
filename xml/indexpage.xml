<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="indexpage" kind="page">
    <compoundname>index</compoundname>
    <title>bipedal-locomotion-framework</title>
    <briefdescription>
<para>The <bold>bipedal-locomotion-framework</bold> project is a <emphasis>suite</emphasis> of libraries for achieving bipedal locomotion on humanoid robots. </para>
    </briefdescription>
    <detaileddescription>
<para>The <bold>bipedal-locomotion-framework</bold> project is a <emphasis>suite</emphasis> of libraries for achieving bipedal locomotion on humanoid robots.<image type="html" name="https://user-images.githubusercontent.com/16744101/117514707-d516e480-af94-11eb-9e7e-3df7a0997ddd.png" inline="yes"></image>
</para>
<sect1 id="index_1interesting-math-notes">
<title>📚 Interesting Math Notes</title>
<para>What follows is a list of interesting math notes that can be usefull to fully understand the usage of the library<itemizedlist>
<listitem><para><ref refid="so3-minjerk" kindref="compound">🧮 SO3 Minimum jerk trajectory</ref></para>
</listitem></itemizedlist>
</para>
</sect1>
<sect1 id="index_1mandatory-dependencies">
<title>📄 Mandatory dependencies</title>
<para>The <bold>bipedal-locomotion-framework</bold> project is versatile and can be used to compile only some components.</para>
<para>The minimum required dependencies are <computeroutput>Eigen3</computeroutput>, <computeroutput>iDynTree</computeroutput> and <computeroutput>spdlog</computeroutput>. If you want to build the tests please remember to install <computeroutput>Catch2</computeroutput>. If you are interested in the python bindings generation please install <computeroutput>python3</computeroutput> and <computeroutput>pybind11</computeroutput> in your system.</para>
</sect1>
<sect1 id="index_1exported-components">
<title>📙 Exported components</title>
<para>The <bold>bipedal-locomotion-framework</bold> project consists of several components. The components are stored in the <ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src"><computeroutput>src</computeroutput></ulink> folder and their compilation depends on the installed dependencies.</para>
<para><table rows="28" cols="3"><row>
<entry thead="yes" align='center'><para>Component   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Additional Dependencies    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>Framework</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Interface library that gathers all the exported components, includable with the file <computeroutput>BipedalLocomotion/Framework.h</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>-    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/AutoDiff"><computeroutput>AutoDiff</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Bridge between CppAD and Eigen   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://coin-or.github.io/CppAD/doc/cppad.htm"><computeroutput>CppAD</computeroutput></ulink>    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/ContactModels"><computeroutput>ContactModels</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Models to describe the contact between robot and enviroment   </para>
</entry><entry thead="no" align='center'><para>-    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/Contacts"><computeroutput>Contacts</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Syntactic description of a contact   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://github.com/artivis/manif"><computeroutput>manif</computeroutput></ulink> <ulink url="https://github.com/nlohmann/json/"><computeroutput>nlohmann json</computeroutput></ulink>    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/Conversions"><computeroutput>CommonConversions</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Common conversion utilities used in the framework   </para>
</entry><entry thead="no" align='center'><para>-    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/Conversions"><computeroutput>ManifConversions</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Library related conversion utilities used in the framework   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://github.com/artivis/manif"><computeroutput>manif</computeroutput></ulink>    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/Conversions"><computeroutput>matioCppConversions</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Library related conversion utilities used in the framework   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/matio-cpp"><computeroutput>matio-cpp</computeroutput></ulink>    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/Conversions"><computeroutput>CasadiConversions</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Library related conversion utilities used in the framework   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://github.com/casadi/casadi"><computeroutput>CasADi</computeroutput></ulink>    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/Estimators"><computeroutput>Estimators</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Library containing observers   </para>
</entry><entry thead="no" align='center'><para>-    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/Estimators"><computeroutput>FloatingBaseEstimator</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Library containing floating base estimators   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://github.com/artivis/manif"><computeroutput>manif</computeroutput></ulink>    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/Estimators"><computeroutput>RobotDynamicsEstimator</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Library containing floating base estimators   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://github.com/artivis/manif"><computeroutput>manif</computeroutput></ulink>    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/GenericContainer"><computeroutput>GenericContainer</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Data structure similar to <computeroutput>span</computeroutput> but resizable.   </para>
</entry><entry thead="no" align='center'><para>-    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/IK"><computeroutput>IK</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Inverse kinematics   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://github.com/artivis/manif"><computeroutput>manif</computeroutput></ulink> <ulink url="https://github.com/robotology/osqp-eigen"><computeroutput>osqp-eigen</computeroutput></ulink>    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/Math"><computeroutput>Math</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Library containing mathematical algorithms   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://github.com/artivis/manif"><computeroutput>manif</computeroutput></ulink>    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/ML"><computeroutput>ML</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Library containing deep learning algorithms   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://onnxruntime.ai/"><computeroutput>onnxruntime</computeroutput></ulink>    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/ParametersHandler"><computeroutput>ParametersHandler</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Library for retrieving parameters from configuration files   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://www.yarp.it/git-master/"><computeroutput>YARP</computeroutput></ulink> (only if you want the <computeroutput>YARP</computeroutput> implementation) <ulink url="https://github.com/marzer/tomlplusplus/"><computeroutput>tomlplusplus</computeroutput></ulink> (only if you want the <computeroutput>toml</computeroutput> implementation)    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/RobotInterface"><computeroutput>PerceptionInterface</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Generic interface classes to adapt to perception data formats like images and point clouds   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://github.com/opencv/opencv"><computeroutput>OpenCV</computeroutput></ulink> <ulink url="https://github.com/PointCloudLibrary/pcl"><computeroutput>PCL</computeroutput></ulink>    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/Perception"><computeroutput>PerceptionCapture</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Library containing driver classes for perception devices   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://github.com/opencv/opencv"><computeroutput>OpenCV</computeroutput></ulink> <ulink url="https://github.com/PointCloudLibrary/pcl"><computeroutput>PCL</computeroutput></ulink> <ulink url="https://github.com/IntelRealSense/librealsense"><computeroutput>realsense2</computeroutput></ulink>    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/Perception"><computeroutput>PerceptionFeatures</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Library containing perception algorithms useful for locomotion   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://github.com/opencv/opencv"><computeroutput>OpenCV</computeroutput></ulink>    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/Planners"><computeroutput>Planners</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Library containing planner useful for locomotion   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://github.com/artivis/manif"><computeroutput>manif</computeroutput></ulink> <ulink url="https://web.casadi.org/"><computeroutput>CasADi</computeroutput></ulink> <ulink url="http://www.qhull.org/"><computeroutput>qhull</computeroutput></ulink>    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/ReducedModelsController"><computeroutput>ReducedModelControllers</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Controller based on reduced models, e.g., <computeroutput>CentroidalMPC</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://github.com/casadi/casadi"><computeroutput>CasADi</computeroutput></ulink>    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/RobotInterface"><computeroutput>RobotInterface</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Library for communicating with the robot   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://www.yarp.it/git-master/"><computeroutput>YARP</computeroutput></ulink> (only if you want the <computeroutput>YARP</computeroutput> implementation)    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/SimplifiedModelControllers"><computeroutput>SimplifiedModelControllers</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Controllers based on simplified models, i.e, LIPM.   </para>
</entry><entry thead="no" align='center'><para>-    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/System"><computeroutput>System</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Description of discrete and continuous dynamical systems   </para>
</entry><entry thead="no" align='center'><para>-    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/TSID"><computeroutput>TSID</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Task space inverse dynamics   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://github.com/artivis/manif"><computeroutput>manif</computeroutput></ulink> <ulink url="https://github.com/ami-iit/lie-group-controllers"><computeroutput>lie-group-controllers</computeroutput></ulink>    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/TextLogging"><computeroutput>TextLogging</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Helper library to display messages into the console   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://www.yarp.it/git-master/"><computeroutput>YARP</computeroutput></ulink> (only if you want the <computeroutput>YARP</computeroutput> implementation) <ulink url="https://docs.ros.org/en/humble/"><computeroutput>ros-humble</computeroutput></ulink> (if you want the <computeroutput>ros2</computeroutput> implementation)    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/src/YarpUtilities"><computeroutput>YarpUtilities</computeroutput></ulink>   </para>
</entry><entry thead="no" align='center'><para>Utilities library for retrieving data and from YARP structures   </para>
</entry><entry thead="no" align='center'><para><ulink url="https://www.yarp.it/git-master/"><computeroutput>YARP</computeroutput></ulink>   </para>
</entry></row>
</table>
</para>
<para><simplesect kind="warning"><para>⚠️ Including <computeroutput>BipedalLocomotion/Framework.h</computeroutput> may result in higher compilation time because of the inclusion of headers which may not be used in your project. It is always suggested to follow the <ulink url="https://github.com/include-what-you-use/include-what-you-use/blob/cc0fad4be0db26e40713b6076263f204a311b573/docs/WhyIWYU.md">IWYU</ulink> paradigm. This applies also for the CMake targets. It is suggested to link only the targets used in your project.</para>
</simplesect>
</para>
</sect1>
<sect1 id="index_1install-with-conda">
<title>📦 Install with conda (recommended)</title>
<para>You can easily the library with <ulink url="https://anaconda.org/robotology/bipedal-locomotion-framework"><computeroutput>conda</computeroutput></ulink> using the following command</para>
<para><programlisting filename=".sh"><codeline><highlight class="normal">conda<sp/>install<sp/>-c<sp/>robotology<sp/>bipedal-locomotion-framework</highlight></codeline>
</programlisting></para>
<para><computeroutput>conda</computeroutput> will automatically install all the required dipendencies.</para>
</sect1>
<sect1 id="index_1build-the-suite">
<title>🛠️ Build the suite</title>
<para>The <bold>bipedal-locomotion-framework</bold> can be built on Windows, macOS, and Linux. The easiest way to compile the library is to use the <ulink url="https://github.com/robotology/robotology-superbuild"><computeroutput>robotology-superbuild</computeroutput></ulink>. If you enable the profiles <computeroutput>ROBOTOLOGY_ENABLE_DYNAMICS</computeroutput> and <computeroutput>ROBOTOLOGY_ENABLE_DYNAMICS_FULL_DEPS</computeroutput> in the <computeroutput>robotology-superbuild</computeroutput> you will automatically clone and build <bold>bipedal-locomotion-framework</bold> and all the dependencies.</para>
<para>If you do not want to use the <computeroutput>robotology-superbuild</computeroutput> you can manually compile the code in the repository running the following command in the terminal</para>
<para><programlisting filename=".sh"><codeline><highlight class="normal">git<sp/>clone<sp/>https://github.com/ami-iit/bipedal-locomotion-framework.git</highlight></codeline>
<codeline><highlight class="normal">cd<sp/>bipedal-locomotion-framework</highlight></codeline>
<codeline><highlight class="normal">mkdir<sp/>build<sp/>&amp;&amp;<sp/>cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>-DCMAKE_INSTALL_PREFIX=&lt;path/where/you/want/to/install&gt;<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-DCMAKE_BUILD_TYPE=Release<sp/>\</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>--build<sp/>.<sp/>--config<sp/>Release<sp/>--target<sp/>install</highlight></codeline>
</programlisting></para>
<para><simplesect kind="warning"><para>⚠️ If you manually compile the framework remember to install the dependencies required by the component you are interested in.</para>
</simplesect>
</para>
</sect1>
<sect1 id="index_1some-utilities">
<title>🖥️  Some utilities</title>
<para>The <bold>bipedal-locomotion-framework</bold> ships also some utilities that can help you in the everyday tests on a real robot. You can find them in the <ulink url="https://github.com/ami-iit/bipedal-locomotion-framework/tree/master/utilities"><computeroutput>utilities</computeroutput> folder</ulink>. Each utility contains a well-documented <computeroutput>README</computeroutput> where you can find further details.</para>
</sect1>
<sect1 id="index_1python">
<title>🐍 Python</title>
<para><bold>bipedal-locomotion-framework</bold> provides also python bindings. Only a small set of the components implemented in the library have the corresponding python bindings.</para>
<para>If you want to compile the bindings please install <computeroutput>python3</computeroutput> and <computeroutput>pybind11</computeroutput> in your system then you can run the following <computeroutput>CMake</computeroutput> command in your <computeroutput>build</computeroutput> folder. You also need to install <ulink url="https://github.com/artivis/manif/releases/tag/0.0.4"><computeroutput>manifpy</computeroutput></ulink>.</para>
<para><programlisting filename=".sh"><codeline><highlight class="normal">cmake<sp/>-DCMAKE_INSTALL_PREFIX=&lt;path/where/you/want/to/install&gt;<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-DCMAKE_BUILD_TYPE=Release<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-DFRAMEWORK_COMPILE_PYTHON_BINDINGS:BOOL=ON<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-DPython3_ROOT_DIR=$(python3<sp/>-c<sp/>&quot;import<sp/>sys;<sp/>print(sys.prefix)&quot;)<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-DFRAMEWORK_USE_Python3:BOOL=ON<sp/>\</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-DFRAMEWORK_USE_pybind11:BOOL=ON<sp/>.</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>--build<sp/>.<sp/>--config<sp/>Release<sp/>--target<sp/>install</highlight></codeline>
</programlisting></para>
<para><simplesect kind="warning"><para>⚠️ The python bindings are currently supported on Linux.</para>
</simplesect>
<simplesect kind="note"><para>You can find further information regarding the <computeroutput>python</computeroutput> bindings in <ref refid="python-additional-info" kindref="compound">🐍 Python bindings</ref></para>
</simplesect>
</para>
</sect1>
<sect1 id="index_1how-to-use-the-libraries">
<title>🏃 How to use the libraries</title>
<para><bold>bipedal-locomotion-framework</bold> provides native <computeroutput>CMake</computeroutput> support which allows the library to be easily used in <computeroutput>CMake</computeroutput> projects.</para>
<para><bold>bipedal-locomotion-framework</bold> exports the <computeroutput>CMake</computeroutput> targets presented in Exported components section. The targets can be imported using the <computeroutput>find_package</computeroutput> command and used by calling <computeroutput>target_link_libraries</computeroutput>.</para>
<para>For instance, <computeroutput>Math</computeroutput> component can be used as follows:</para>
<para><programlisting filename=".cmake"><codeline><highlight class="normal">cmake_minimum_required(VERSION<sp/>3.0)</highlight></codeline>
<codeline><highlight class="normal">project(myproject)</highlight></codeline>
<codeline><highlight class="normal">find_package(BipedalLocomotionFramework<sp/>COMPONENTS<sp/>Math<sp/>REQUIRED)</highlight></codeline>
<codeline><highlight class="normal">add_executable(example<sp/>example.cpp)</highlight></codeline>
<codeline><highlight class="normal">target_link_libraries(example<sp/>PRIVATE<sp/>BipedalLocomotion::Math)</highlight></codeline>
</programlisting></para>
<para>The list of the targets can be found in the table <ref refid="index_1exported-components" kindref="member">📙 Exported components</ref></para>
</sect1>
<sect1 id="index_1contributing">
<title>⚙️  Contributing</title>
<para>The <bold>bipedal-locomotion-framework</bold> is an open-source project, and is thus built with your contributions. We strongly encourage you to open an issue with your feature request. Once the issue has been opened, you can also proceed with a pull-request 🚀</para>
</sect1>
<sect1 id="index_1maintainers">
<title>🧑‍💻 Maintainers</title>
<para><itemizedlist>
<listitem><para>Giulio Romualdi (<ulink url="https://github.com/GiulioRomualdi">@GiulioRomualdi</ulink>)</para>
</listitem><listitem><para>Stefano Dafarra (<ulink url="https://github.com/S-Dafarra">@S-Dafarra</ulink>) </para>
</listitem></itemizedlist>
</para>
</sect1>
    </detaileddescription>
    <location file="/home/runner/work/bipedal-locomotion-framework/bipedal-locomotion-framework/docs/pages/main-page.dox"/>
  </compounddef>
</doxygen>
