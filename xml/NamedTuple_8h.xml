<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="NamedTuple_8h" kind="file" language="C++">
    <compoundname>NamedTuple.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">tuple</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includedby refid="CentroidalDynamics_8h" local="no">BipedalLocomotion/ContinuousDynamicalSystem/CentroidalDynamics.h</includedby>
    <includedby refid="DynamicalSystem_8h" local="no">BipedalLocomotion/ContinuousDynamicalSystem/DynamicalSystem.h</includedby>
    <includedby refid="FloatingBaseSystemKinematics_8h" local="no">BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseSystemKinematics.h</includedby>
    <includedby refid="ForwardEuler_8h" local="no">BipedalLocomotion/ContinuousDynamicalSystem/ForwardEuler.h</includedby>
    <includedby refid="LieGroupDynamics_8h" local="no">BipedalLocomotion/ContinuousDynamicalSystem/LieGroupDynamics.h</includedby>
    <includedby refid="LinearTimeInvariantSystem_8h" local="no">BipedalLocomotion/ContinuousDynamicalSystem/LinearTimeInvariantSystem.h</includedby>
    <includedby refid="RK4_8h" local="no">BipedalLocomotion/ContinuousDynamicalSystem/RK4.h</includedby>
    <includedby refid="SO3Dynamics_8h" local="no">BipedalLocomotion/ContinuousDynamicalSystem/SO3Dynamics.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>BipedalLocomotion/GenericContainer/NamedTuple.h</label>
        <link refid="NamedTuple_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="3">
        <label>tuple</label>
      </node>
      <node id="5">
        <label>utility</label>
      </node>
      <node id="4">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>BipedalLocomotion/GenericContainer/NamedTuple.h</label>
        <link refid="NamedTuple_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/DynamicalSystem.h</label>
        <link refid="DynamicalSystem_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/FixedBaseDynamics.h</label>
        <link refid="FixedBaseDynamics_8h"/>
      </node>
      <node id="5">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseDynamicsWithCompliantContacts.h</label>
        <link refid="FloatingBaseDynamicsWithCompliantContacts_8h"/>
      </node>
      <node id="12">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/RK4.h</label>
        <link refid="RK4_8h"/>
      </node>
      <node id="6">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseSystemKinematics.h</label>
        <link refid="FloatingBaseSystemKinematics_8h"/>
      </node>
      <node id="14">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/SO3Dynamics.h</label>
        <link refid="SO3Dynamics_8h"/>
      </node>
      <node id="7">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/Integrator.h</label>
        <link refid="Integrator_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/FirstOrderSmoother.h</label>
        <link refid="FirstOrderSmoother_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/FixedStepIntegrator.h</label>
        <link refid="FixedStepIntegrator_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/CentroidalDynamics.h</label>
        <link refid="CentroidalDynamics_8h"/>
      </node>
      <node id="11">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/MultiStateWeightProvider.h</label>
        <link refid="MultiStateWeightProvider_8h"/>
      </node>
      <node id="15">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/LinearTimeInvariantSystem.h</label>
        <link refid="LinearTimeInvariantSystem_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/ForwardEuler.h</label>
        <link refid="ForwardEuler_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>BipedalLocomotion/ContinuousDynamicalSystem/LieGroupDynamics.h</label>
        <link refid="LieGroupDynamics_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structBipedalLocomotion_1_1GenericContainer_1_1named__param" prot="public">BipedalLocomotion::GenericContainer::named_param</innerclass>
    <innerclass refid="structBipedalLocomotion_1_1GenericContainer_1_1named__tuple" prot="public">BipedalLocomotion::GenericContainer::named_tuple</innerclass>
    <innerclass refid="structstd_1_1tuple__size_3_1_1BipedalLocomotion_1_1GenericContainer_1_1named__tuple_3_01Params_8_8_8_01_4_01_4" prot="public">std::tuple_size&lt;::BipedalLocomotion::GenericContainer::named_tuple&lt; Params... &gt; &gt;</innerclass>
    <innerclass refid="structstd_1_1tuple__element_3_01Index_00_01_1_1BipedalLocomotion_1_1GenericContainer_1_1named__tuple_3_01Params_8_8_8_01_4_01_4" prot="public">std::tuple_element&lt; Index, ::BipedalLocomotion::GenericContainer::named_tuple&lt; Params... &gt; &gt;</innerclass>
    <innernamespace refid="namespaceBipedalLocomotion">BipedalLocomotion</innernamespace>
    <innernamespace refid="namespaceBipedalLocomotion_1_1GenericContainer">BipedalLocomotion::GenericContainer</innernamespace>
    <innernamespace refid="namespaceBipedalLocomotion_1_1GenericContainer_1_1detail">BipedalLocomotion::GenericContainer::detail</innernamespace>
    <innernamespace refid="namespaceBipedalLocomotion_1_1GenericContainer_1_1literals">BipedalLocomotion::GenericContainer::literals</innernamespace>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="NamedTuple_8h_1a43d83ea376e1a1fa734900f0fa4b9529" prot="public" static="no">
        <name>BLF_STRING_TO_HASH</name>
        <param><defname>x_</defname></param>
        <initializer>::BipedalLocomotion::GenericContainer::detail::sid_hash(#x_)</initializer>
        <briefdescription>
<para>Create the hash from a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x_</parametername>
</parameternamelist>
<parameterdescription>
<para>key </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/GenericContainer/NamedTuple.h" line="389" column="9" bodyfile="BipedalLocomotion/GenericContainer/NamedTuple.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="NamedTuple_8h_1ada076b998fea094893fd04f260e52c83" prot="public" static="no">
        <name>BLF_NAMED_PARAM</name>
        <param><defname>x_</defname></param>
        <param><defname>type_</defname></param>
        <initializer>    ::<ref refid="structBipedalLocomotion_1_1GenericContainer_1_1named__param" kindref="compound">BipedalLocomotion::GenericContainer::named_param</ref>&lt;<ref refid="NamedTuple_8h_1a43d83ea376e1a1fa734900f0fa4b9529" kindref="member">BLF_STRING_TO_HASH</ref>(x_), type_&gt;</initializer>
        <briefdescription>
<para>Create a named parameter given type and key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x_</parametername>
</parameternamelist>
<parameterdescription>
<para>key </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type_</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/GenericContainer/NamedTuple.h" line="396" column="9" bodyfile="BipedalLocomotion/GenericContainer/NamedTuple.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="NamedTuple_8h_1aeae062fde867d3cef830c1dbfe1e807f" prot="public" static="no">
        <type>std::uint64_t</type>
        <definition>using BipedalLocomotion::GenericContainer::hash_type = typedef std::uint64_t</definition>
        <argsstring></argsstring>
        <name>hash_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/GenericContainer/NamedTuple.h" line="24" column="1" bodyfile="BipedalLocomotion/GenericContainer/NamedTuple.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="NamedTuple_8h_1a1fef8fa8f5b2a174c4aa0143ac6d38e4" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr hash_type</type>
        <definition>constexpr hash_type BipedalLocomotion::GenericContainer::detail::fnv_basis</definition>
        <argsstring></argsstring>
        <name>fnv_basis</name>
        <initializer>= 14695981039346656037ull</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/GenericContainer/NamedTuple.h" line="31" column="21" bodyfile="BipedalLocomotion/GenericContainer/NamedTuple.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="NamedTuple_8h_1abe2a8fa6b5391ef105f921739638ddc2" prot="public" static="no" constexpr="yes" mutable="no">
        <type>constexpr hash_type</type>
        <definition>constexpr hash_type BipedalLocomotion::GenericContainer::detail::fnv_prime</definition>
        <argsstring></argsstring>
        <name>fnv_prime</name>
        <initializer>= 109951162821ull</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/GenericContainer/NamedTuple.h" line="32" column="21" bodyfile="BipedalLocomotion/GenericContainer/NamedTuple.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="NamedTuple_8h_1a55ff57492466984d38bf67e302d26189" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr hash_type</type>
        <definition>constexpr hash_type BipedalLocomotion::GenericContainer::detail::sid_hash</definition>
        <argsstring>(const char *str, hash_type hash=fnv_basis) noexcept</argsstring>
        <name>sid_hash</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>hash_type</type>
          <declname>hash</declname>
          <defval>fnv_basis</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/GenericContainer/NamedTuple.h" line="35" column="21" bodyfile="BipedalLocomotion/GenericContainer/NamedTuple.h" bodystart="35" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="NamedTuple_8h_1ac322ee615f7d23018c47ef2b3290b2fa" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto BipedalLocomotion::GenericContainer::make_named_tuple</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>make_named_tuple</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="structBipedalLocomotion_1_1GenericContainer_1_1named__tuple" kindref="compound">named_tuple</ref> object, deducing the target type from the types of arguments. </para>
        </briefdescription>
        <detaileddescription>
<para>@params args zero or more arguments to construct the <ref refid="structBipedalLocomotion_1_1GenericContainer_1_1named__tuple" kindref="compound">named_tuple</ref> from <simplesect kind="return"><para>A <ref refid="structBipedalLocomotion_1_1GenericContainer_1_1named__tuple" kindref="compound">named_tuple</ref> object containing the given values, created as if by <computeroutput><ref refid="structBipedalLocomotion_1_1GenericContainer_1_1named__tuple" kindref="compound">named_tuple</ref>&lt;Args...&gt;(std::forward&lt;Args&gt;(args)...).</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/GenericContainer/NamedTuple.h" line="302" column="28" bodyfile="BipedalLocomotion/GenericContainer/NamedTuple.h" bodystart="302" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="NamedTuple_8h_1ae7307e277e474f3dbb9f95f3e0e2b758" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr hash_type</type>
        <definition>constexpr hash_type BipedalLocomotion::GenericContainer::literals::operator&quot;&quot;_h</definition>
        <argsstring>(const char *tag, std::size_t s)</argsstring>
        <name>operator&quot;&quot;_h</name>
        <param>
          <type>const char *</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Forms a hash from a char*. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>To use the literal operator please refer to the following code <programlisting filename=".cpp"><codeline><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">BipedalLocomotion::GenericContainer::literals;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">constexpr<sp/>BipedalLocomotion::GenericContainer::hash_type<sp/>hash<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">_h;</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/GenericContainer/NamedTuple.h" line="319" column="21" bodyfile="BipedalLocomotion/GenericContainer/NamedTuple.h" bodystart="319" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="NamedTuple_8h_1ab70c8bf5efee8eb732d3dfa7d05efa58" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Params</declname>
            <defname>Params</defname>
          </param>
        </templateparamlist>
        <type>std::tuple_element&lt; I, typename ::<ref refid="structBipedalLocomotion_1_1GenericContainer_1_1named__tuple" kindref="compound">BipedalLocomotion::GenericContainer::named_tuple</ref>&lt; Params... &gt;::underlying_tuple &gt;::type &amp;</type>
        <definition>std::tuple_element&lt; I, typename ::BipedalLocomotion::GenericContainer::named_tuple&lt;Params...&gt;::underlying_tuple&gt;::type&amp; std::get</definition>
        <argsstring>(::BipedalLocomotion::GenericContainer::named_tuple&lt; Params... &gt; &amp;t) noexcept</argsstring>
        <name>get</name>
        <param>
          <type>::<ref refid="structBipedalLocomotion_1_1GenericContainer_1_1named__tuple" kindref="compound">BipedalLocomotion::GenericContainer::named_tuple</ref>&lt; Params... &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Extracts the Ith element from the named_tuple. </para>
        </briefdescription>
        <detaileddescription>
<para>It must be an integer value in <computeroutput>[0, sizeof...(Types))</computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>the named_tuple </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the selected element of t. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/GenericContainer/NamedTuple.h" line="341" column="1" bodyfile="BipedalLocomotion/GenericContainer/NamedTuple.h" bodystart="341" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="NamedTuple_8h_1a9edd803ba26171a0e7f55d52cb35a6e4" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Params</declname>
            <defname>Params</defname>
          </param>
        </templateparamlist>
        <type>const tuple_element&lt; I, typename ::<ref refid="structBipedalLocomotion_1_1GenericContainer_1_1named__tuple" kindref="compound">BipedalLocomotion::GenericContainer::named_tuple</ref>&lt; Params... &gt;::underlying_tuple &gt;::type &amp;</type>
        <definition>const tuple_element&lt; I, typename ::BipedalLocomotion::GenericContainer::named_tuple&lt;Params...&gt;::underlying_tuple&gt;::type&amp; std::get</definition>
        <argsstring>(const ::BipedalLocomotion::GenericContainer::named_tuple&lt; Params... &gt; &amp;t) noexcept</argsstring>
        <name>get</name>
        <param>
          <type>const ::<ref refid="structBipedalLocomotion_1_1GenericContainer_1_1named__tuple" kindref="compound">BipedalLocomotion::GenericContainer::named_tuple</ref>&lt; Params... &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Extracts the Ith element from the named_tuple. </para>
        </briefdescription>
        <detaileddescription>
<para>It must be an integer value in <computeroutput>[0, sizeof...(Types))</computeroutput>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>the named_tuple </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the selected element of t. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/GenericContainer/NamedTuple.h" line="356" column="1" bodyfile="BipedalLocomotion/GenericContainer/NamedTuple.h" bodystart="356" bodyend="359"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="authors"><para>Giulio Romualdi </para>
</simplesect>
<simplesect kind="copyright"><para>2023 Istituto Italiano di Tecnologia (IIT). This software may be modified and distributed under the terms of the BSD-3-Clause license. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="BipedalLocomotion/GenericContainer/NamedTuple.h"/>
  </compounddef>
</doxygen>
