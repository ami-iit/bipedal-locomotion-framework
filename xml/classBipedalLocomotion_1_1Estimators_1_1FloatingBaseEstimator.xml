<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Estimators::FloatingBaseEstimator</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1System_1_1Source" prot="public" virt="non-virtual">BipedalLocomotion::System::Source&lt; FloatingBaseEstimators::Output &gt;</basecompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator" prot="public" virt="non-virtual">BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1Estimators_1_1LeggedOdometry" prot="public" virt="non-virtual">BipedalLocomotion::Estimators::LeggedOdometry</derivedcompoundref>
    <includes local="no">BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h</includes>
    <innerclass refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1_1ModelComputations" prot="public">BipedalLocomotion::Estimators::FloatingBaseEstimator::ModelComputations</innerclass>
      <sectiondef kind="protected-type">
      <memberdef kind="enum" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac94d11332538be5c0ae96761645b74f1" prot="protected" static="no" strong="yes">
        <type></type>
        <name>State</name>
        <enumvalue id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac94d11332538be5c0ae96761645b74f1a9646ad3a1c3e708b4fa8b4b4270fbab6" prot="protected">
          <name>NotInitialized</name>
          <briefdescription>
<para>The estimator is not initialized yet call FloatingBaseEstimator::initialze method to initialize it. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac94d11332538be5c0ae96761645b74f1a59d87a4758a9d35fbaf6b204341bb399" prot="protected">
          <name>Initialized</name>
          <briefdescription>
<para>The estimator is initialized and ready to be used. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac94d11332538be5c0ae96761645b74f1a5bda814c4aedb126839228f1a3d92f09" prot="protected">
          <name>Running</name>
          <briefdescription>
<para>The estimator is running. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerator used to determine the running state of the estimator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="407" column="5" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="408" bodyend="413"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a1e23695506ec5bd1b3bccc32fe2ac75a" prot="protected" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1_1ModelComputations" kindref="compound">ModelComputations</ref></type>
        <definition>ModelComputations BipedalLocomotion::Estimators::FloatingBaseEstimator::m_modelComp</definition>
        <argsstring></argsstring>
        <name>m_modelComp</name>
        <briefdescription>
<para>Model computations object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="396" column="23" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a620d1da852a07960e55a6dd8a53fd1a5" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Options" kindref="compound">FloatingBaseEstimators::Options</ref></type>
        <definition>FloatingBaseEstimators::Options BipedalLocomotion::Estimators::FloatingBaseEstimator::m_options</definition>
        <argsstring></argsstring>
        <name>m_options</name>
        <briefdescription>
<para>Struct holding estimator options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="397" column="37" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a39e4591671b56359f28884caa4a0a5cf" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Measurements" kindref="compound">FloatingBaseEstimators::Measurements</ref></type>
        <definition>FloatingBaseEstimators::Measurements BipedalLocomotion::Estimators::FloatingBaseEstimator::m_meas</definition>
        <argsstring></argsstring>
        <name>m_meas</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="398" column="42" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a17e146652bf36d8a62bae4f217a26294" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Measurements" kindref="compound">FloatingBaseEstimators::Measurements</ref></type>
        <definition>FloatingBaseEstimators::Measurements BipedalLocomotion::Estimators::FloatingBaseEstimator::m_measPrev</definition>
        <argsstring></argsstring>
        <name>m_measPrev</name>
        <briefdescription>
<para>Struct holding the latest measurements that were set to the estimator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="398" column="49" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a6c98bb1f972363c0f1b795bdcd50f5fd" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1InternalState" kindref="compound">FloatingBaseEstimators::InternalState</ref></type>
        <definition>FloatingBaseEstimators::InternalState BipedalLocomotion::Estimators::FloatingBaseEstimator::m_state</definition>
        <argsstring></argsstring>
        <name>m_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="399" column="43" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac13379b400e3a5448370d62a60495c48" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1InternalState" kindref="compound">FloatingBaseEstimators::InternalState</ref></type>
        <definition>FloatingBaseEstimators::InternalState BipedalLocomotion::Estimators::FloatingBaseEstimator::m_statePrev</definition>
        <argsstring></argsstring>
        <name>m_statePrev</name>
        <briefdescription>
<para>Structs holding the curent and previous internal states of the estimation algorithm. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="399" column="51" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a7a69586c1a993d3abc61c786d25b88c1" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Output" kindref="compound">FloatingBaseEstimators::Output</ref></type>
        <definition>FloatingBaseEstimators::Output BipedalLocomotion::Estimators::FloatingBaseEstimator::m_estimatorOut</definition>
        <argsstring></argsstring>
        <name>m_estimatorOut</name>
        <briefdescription>
<para>Struct holding outputs of the estimator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="400" column="36" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a4a9a0355d4b8a11e747d2180c55cba64" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1StateStdDev" kindref="compound">FloatingBaseEstimators::StateStdDev</ref></type>
        <definition>FloatingBaseEstimators::StateStdDev BipedalLocomotion::Estimators::FloatingBaseEstimator::m_priors</definition>
        <argsstring></argsstring>
        <name>m_priors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="401" column="41" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad3c4555ded287bb1450dd9b664705c7c" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1StateStdDev" kindref="compound">FloatingBaseEstimators::StateStdDev</ref></type>
        <definition>FloatingBaseEstimators::StateStdDev BipedalLocomotion::Estimators::FloatingBaseEstimator::m_stateStdDev</definition>
        <argsstring></argsstring>
        <name>m_stateStdDev</name>
        <briefdescription>
<para>Struct holding standard deviations associated to prior state estimates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="401" column="50" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a4a762098fd8fe1158f163209402db0d1" prot="protected" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1SensorsStdDev" kindref="compound">FloatingBaseEstimators::SensorsStdDev</ref></type>
        <definition>FloatingBaseEstimators::SensorsStdDev BipedalLocomotion::Estimators::FloatingBaseEstimator::m_sensorsDev</definition>
        <argsstring></argsstring>
        <name>m_sensorsDev</name>
        <briefdescription>
<para>Struct holding standard deviations associated to sensor measurements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="402" column="43" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a67d83d2880b0c9e7e279410081138bd7" prot="protected" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac94d11332538be5c0ae96761645b74f1" kindref="member">State</ref></type>
        <definition>State BipedalLocomotion::Estimators::FloatingBaseEstimator::m_estimatorState</definition>
        <argsstring></argsstring>
        <name>m_estimatorState</name>
        <initializer>{<ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac94d11332538be5c0ae96761645b74f1a9646ad3a1c3e708b4fa8b4b4270fbab6" kindref="member">State::NotInitialized</ref>}</initializer>
        <briefdescription>
<para>State of the estimator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="415" column="11" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a73f6c5a571246a976c534dbf0c8485c9" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::Estimators::FloatingBaseEstimator::m_dt</definition>
        <argsstring></argsstring>
        <name>m_dt</name>
        <initializer>{0.01}</initializer>
        <briefdescription>
<para>Fixed time step of the estimator, in seconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="417" column="12" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a85d6ac77a6ccc37ef659e3378593fd07" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::m_useIMUForAngVelEstimate</definition>
        <argsstring></argsstring>
        <name>m_useIMUForAngVelEstimate</name>
        <initializer>{true}</initializer>
        <briefdescription>
<para>Use IMU measurements as internal state imu angular velocity by default set to true for strap down IMU based EKF implementations, if IMU measurements not used, corresponding impl can set to false. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="418" column="10" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a5e5751df76b701e6d0ef3d54fba70e0c" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::m_useIMUVelForBaseVelComputation</definition>
        <argsstring></argsstring>
        <name>m_useIMUVelForBaseVelComputation</name>
        <initializer>{true}</initializer>
        <briefdescription>
<para>Compute base velocity using inertnal state IMU velocity. </para>
        </briefdescription>
        <detaileddescription>
<para>by default set to true for strap down IMU based EKF implementations, if IMU measurements not used, corresponding impl can set to false </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="419" column="10" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad58879a3431ccf1a250419f79c54377c" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::m_useModelInfo</definition>
        <argsstring></argsstring>
        <name>m_useModelInfo</name>
        <initializer>{true}</initializer>
        <briefdescription>
<para>Flag to enable running the estimator without using the URDF model information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="420" column="10" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a25aecb934450c5584c292b0573880efc" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::m_isInvEKF</definition>
        <argsstring></argsstring>
        <name>m_isInvEKF</name>
        <initializer>{false}</initializer>
        <briefdescription>
<para>Flag to maintain soon to be deprecated functionalities currently existing only in InvEKFBaseEstimator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="421" column="10" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad7fae2ee9adde778ab2c1c3b468ea6ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::Estimators::FloatingBaseEstimator::FloatingBaseEstimator</definition>
        <argsstring>()</argsstring>
        <name>FloatingBaseEstimator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="36" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ab24dc4ee5a3afb031812df139a3dbd09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual BipedalLocomotion::Estimators::FloatingBaseEstimator::~FloatingBaseEstimator</definition>
        <argsstring>()</argsstring>
        <name>~FloatingBaseEstimator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="37" column="13" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a6effc5655b1fa1bdcad345f2ea420047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::initialize</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler, std::shared_ptr&lt; iDynTree::KinDynComputations &gt; kindyn)</argsstring>
        <name>initialize</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; iDynTree::KinDynComputations &gt;</type>
          <declname>kindyn</declname>
        </param>
        <briefdescription>
<para>Configure generic parameters and the model. </para>
        </briefdescription>
        <detaileddescription>
<para>The generic parameters include,<itemizedlist>
<listitem><para>sampling_period_in_s [PARAMETER|REQUIRED|Sampling period of the estimator in seconds]</para>
</listitem><listitem><para>ModelInfo [GROUP|REQUIRED|URDF Model specific parameters used by the estimator]<itemizedlist>
<listitem><para>base_link [PARAMETER|REQUIRED|base link frame from the URDF model| Exists in &quot;ModelInfo&quot; GROUP]</para>
</listitem><listitem><para>base_link_imu [PARAMETER|REQUIRED|IMU frame rigidly attached to thebase link from the URDF model| Exists in &quot;ModelInfo&quot; GROUP]</para>
</listitem><listitem><para>left_foot_contact_frame [PARAMETER|REQUIRED|left foot contact frame from the URDF model| Exists in &quot;ModelInfo&quot; GROUP]</para>
</listitem><listitem><para>right_foot_contact_frame [PARAMETER|REQUIRED|right foot contact frame from the URDF model| Exists in &quot;ModelInfo&quot; GROUP] <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>configure the generic parameters for the estimator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kindyn</parametername>
</parameternamelist>
<parameterdescription>
<para>shared pointer of iDynTree kindyncomputations object (model will be loaded internally) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>any custom initialization of parameters or the algorithm implementation is not done here, it must be done in <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref> by the child class implementing the algorithm </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="161" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a30b2e0f940d73c15239d4842f141a37e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::initialize</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a6db247d3db83217a16e963d01f6bcb77">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Configure generic parameters, calling this overloaded method assumes model information is not going to be used. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>configure the generic parameters for the estimator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="170" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a2ccbfaf83d8eed0fe3b0b5ca46017ef4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setIMUMeasurement</definition>
        <argsstring>(const Eigen::Vector3d &amp;accMeas, const Eigen::Vector3d &amp;gyroMeas)</argsstring>
        <name>setIMUMeasurement</name>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>accMeas</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>gyroMeas</declname>
        </param>
        <briefdescription>
<para>Set the polled IMU measurement. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">accMeas</parametername>
</parameternamelist>
<parameterdescription>
<para>linear accelerometer measurement expressed in the local IMU frame (m/s^2) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gyroMeas</parametername>
</parameternamelist>
<parameterdescription>
<para>gyroscope measurement expressed in the local IMU frame (rad/s) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="178" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a776353b9fda2354f3f7eb0c80940ca49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setContacts</definition>
        <argsstring>(const bool &amp;lfInContact, const bool &amp;rfInContact)</argsstring>
        <name>setContacts</name>
        <param>
          <type>const bool &amp;</type>
          <declname>lfInContact</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>rfInContact</declname>
        </param>
        <briefdescription>
<para>Set feet contact states. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">lfInContact</parametername>
</parameternamelist>
<parameterdescription>
<para>left foot contact state [0, 1] </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rfInContact</parametername>
</parameternamelist>
<parameterdescription>
<para>right foot contact state [0, 1] </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="187" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a83bfbba8171ebfc98b016c7449e7faf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setContactStatus</definition>
        <argsstring>(const std::string &amp;name, const bool &amp;contactStatus, const std::chrono::nanoseconds &amp;switchTime, const std::chrono::nanoseconds &amp;=std::chrono::nanoseconds::zero())</argsstring>
        <name>setContactStatus</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>contactStatus</declname>
        </param>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>switchTime</declname>
        </param>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <defval>std::chrono::nanoseconds::zero()</defval>
        </param>
        <briefdescription>
<para>Set contact status. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>contact frame name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">contactStatus</parametername>
</parameternamelist>
<parameterdescription>
<para>flag to check active contact </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">switchTime</parametername>
</parameternamelist>
<parameterdescription>
<para>time of switching contact </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeNow</parametername>
</parameternamelist>
<parameterdescription>
<para>current measurement update time </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="197" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad203e691ae8d7d8b41da86b2e081267b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setKinematics</definition>
        <argsstring>(const Eigen::VectorXd &amp;encoders, const Eigen::VectorXd &amp;encoderSpeeds)</argsstring>
        <name>setKinematics</name>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>encoders</declname>
        </param>
        <param>
          <type>const Eigen::VectorXd &amp;</type>
          <declname>encoderSpeeds</declname>
        </param>
        <briefdescription>
<para>Set kinematic measurements. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>it is assumed that the order of the joints loaded in the model and the order of the measurements in these vectors match </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">encoders</parametername>
</parameternamelist>
<parameterdescription>
<para>joint positions measured through encoders </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">encoderSpeeds</parametername>
</parameternamelist>
<parameterdescription>
<para>joint velocities measured through encoders </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="209" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a1beebdcb036ccc21700690d291ac59e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setLandmarkRelativePose</definition>
        <argsstring>(const int &amp;landmarkID, const Eigen::Quaterniond &amp;quat, const Eigen::Vector3d &amp;pos, const std::chrono::nanoseconds &amp;timeNow)</argsstring>
        <name>setLandmarkRelativePose</name>
        <param>
          <type>const int &amp;</type>
          <declname>landmarkID</declname>
        </param>
        <param>
          <type>const Eigen::Quaterniond &amp;</type>
          <declname>quat</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>timeNow</declname>
        </param>
        <briefdescription>
<para>Set the relative pose of a landmark relative to the base link. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">landmarkID</parametername>
</parameternamelist>
<parameterdescription>
<para>unique landmark ID </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">quat</parametername>
</parameternamelist>
<parameterdescription>
<para>relative orientation of the landmark as a quaternion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pos</parametername>
</parameternamelist>
<parameterdescription>
<para>relative position of the landmark </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeNow</parametername>
</parameternamelist>
<parameterdescription>
<para>relative position of the landmark </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="221" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a8deaab0e4940165c59f15355d47ddc79" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::FloatingBaseEstimator::advance</definition>
        <argsstring>() final</argsstring>
        <name>advance</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a67107e46e831d93f572558b541aab6d2">advance</reimplements>
        <briefdescription>
<para>Compute one step of the estimator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="230" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1afaa96d18ba685b1cb5cb9a56f4d862cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::FloatingBaseEstimator::resetEstimator</definition>
        <argsstring>(const FloatingBaseEstimators::InternalState &amp;newState)</argsstring>
        <name>resetEstimator</name>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1InternalState" kindref="compound">FloatingBaseEstimators::InternalState</ref> &amp;</type>
          <declname>newState</declname>
        </param>
        <briefdescription>
<para>Reset the internal state of the estimator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">newState</parametername>
</parameternamelist>
<parameterdescription>
<para>Internal state of the estimator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise.</para>
</simplesect>
<simplesect kind="note"><para>reset and advance estimator to get updated estimator output </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="239" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a3b6896ce5674651e673761bbce201154" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::FloatingBaseEstimator::resetEstimator</definition>
        <argsstring>(const Eigen::Quaterniond &amp;newBaseOrientation, const Eigen::Vector3d &amp;newBasePosition)</argsstring>
        <name>resetEstimator</name>
        <param>
          <type>const Eigen::Quaterniond &amp;</type>
          <declname>newBaseOrientation</declname>
        </param>
        <param>
          <type>const Eigen::Vector3d &amp;</type>
          <declname>newBasePosition</declname>
        </param>
        <briefdescription>
<para>Reset the base pose estimate and consequently the internal state of the estimator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">newBaseOrientation</parametername>
</parameternamelist>
<parameterdescription>
<para>base link orientation as a Eigen quaternion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">newBasePosition</parametername>
</parameternamelist>
<parameterdescription>
<para>base link position </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise.</para>
</simplesect>
<itemizedlist>
<listitem><para><simplesect kind="note"><para>reset and advance estimator to get updated estimator output </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="249" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1aecc991f84626ed5114483a3e7c0fd78c" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Output" kindref="compound">FloatingBaseEstimators::Output</ref> &amp;</type>
        <definition>virtual const FloatingBaseEstimators::Output&amp; BipedalLocomotion::Estimators::FloatingBaseEstimator::getOutput</definition>
        <argsstring>() const final</argsstring>
        <name>getOutput</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a8c089ecf2dd8ff0fb2732233994b6cac">getOutput</reimplements>
        <briefdescription>
<para>Get estimator outputs. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A struct containing he estimated internal states of the estiamtor and the associated covariance matrix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="256" column="50"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a0baf4a4877c4c790c35be575f63ea2d2" prot="public" static="no" const="yes" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::FloatingBaseEstimator::isOutputValid</definition>
        <argsstring>() const final</argsstring>
        <name>isOutputValid</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ac50de29a6160baa2bba195af9d69430a">isOutputValid</reimplements>
        <briefdescription>
<para>Determines the validity of the object retrieved with <ref refid="NamedTuple_8h_1ab70c8bf5efee8eb732d3dfa7d05efa58" kindref="member">get()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="262" column="18" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="262" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1aad3b0c5d6736bdc39e501833d6fd7dcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1_1ModelComputations" kindref="compound">ModelComputations</ref> &amp;</type>
        <definition>ModelComputations&amp; BipedalLocomotion::Estimators::FloatingBaseEstimator::modelComputations</definition>
        <argsstring>()</argsstring>
        <name>modelComputations</name>
        <briefdescription>
<para>Get <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1_1ModelComputations" kindref="compound">ModelComputations</ref> object by reference. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1_1ModelComputations" kindref="compound">ModelComputations</ref> object providing information between considered model related quantities in the estimator like the base link, IMU, feet contact frames. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="269" column="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::FloatingBaseEstimator::customInitialization</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>customInitialization</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a88d89de191ce004ad8fc1556f635f4d0">customInitialization</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1LeggedOdometry_1a3e622dbc8c0559b2ed5cb5048fc620f9">customInitialization</reimplementedby>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>These custom parameter specifications should be specified by the derived class. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>If <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a47e47d6dc44f160b520b673901db3abc" kindref="member">setupOptions()</ref> is called from within <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref>, ensure the group &quot;Options&quot; exist. Please check the documentation of <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a47e47d6dc44f160b520b673901db3abc" kindref="member">setupOptions()</ref> for relevant parameters</para>
</listitem><listitem><para>If <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a9ceef906a3dadd188f590dc21d0b5fd3" kindref="member">setupSensorDevs()</ref> is called from within <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref>, ensure the group &quot;SensorsStdDev&quot; exist. Please check the documentation of <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a9ceef906a3dadd188f590dc21d0b5fd3" kindref="member">setupSensorDevs()</ref> for relevant parameters</para>
</listitem><listitem><para>If <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad8bf6b1b6356c909fb930b0346610551" kindref="member">setupInitialStates()</ref> is called from within <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref>, ensure the group &quot;InitialStates&quot; exist. Please check the documentation of <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad8bf6b1b6356c909fb930b0346610551" kindref="member">setupInitialStates()</ref> for relevant parameters</para>
</listitem><listitem><para>If <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1abaaacf9df3cc68efdae1ec21ed55a90e" kindref="member">setupPriorDevs()</ref> is called from within <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref>, ensure the group &quot;PriorsStdDev&quot; exist. Please check the documentation of <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1abaaacf9df3cc68efdae1ec21ed55a90e" kindref="member">setupPriorDevs()</ref> for relevant parameters <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>configure the custom parameters for the estimator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="285" column="18" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="285" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a26c64914587b18e5eaa2f8b8df321446" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::FloatingBaseEstimator::predictState</definition>
        <argsstring>(const FloatingBaseEstimators::Measurements &amp;meas, const double &amp;dt)</argsstring>
        <name>predictState</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a66a181d6038b6b61030bf51a86426afa">predictState</reimplementedby>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Measurements" kindref="compound">FloatingBaseEstimators::Measurements</ref> &amp;</type>
          <declname>meas</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Propagate the states through the prediction model, if there exists any (eg. </para>
        </briefdescription>
        <detaileddescription>
<para>a strap-down IMU model) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">meas</parametername>
</parameternamelist>
<parameterdescription>
<para>measurements passed as exogeneous inputs to the prediction model </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>sampling period in seconds </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">state</parametername>
</parameternamelist>
<parameterdescription>
<para>previous state estimate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">P</parametername>
</parameternamelist>
<parameterdescription>
<para>previous state covariance matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="295" column="18" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="295" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a22dfe34e6bba688d4e00f6c97c47bd0c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::FloatingBaseEstimator::updateKinematics</definition>
        <argsstring>(FloatingBaseEstimators::Measurements &amp;meas, const double &amp;dt)</argsstring>
        <name>updateKinematics</name>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator_1a88eb6bac3576d78fd5a246a012ca7540">updateKinematics</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1Estimators_1_1LeggedOdometry_1a1a123da1d1e7a8bf3401dbcaa44fa93b">updateKinematics</reimplementedby>
        <param>
          <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Measurements" kindref="compound">FloatingBaseEstimators::Measurements</ref> &amp;</type>
          <declname>meas</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Update the predicted state estimates using kinematics and contact measurements. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">meas</parametername>
</parameternamelist>
<parameterdescription>
<para>measurements to update the predicted states </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>sampling period in seconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="304" column="18" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="304" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1acca7d1580a8085caedfdecbe08e89d9f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::Estimators::FloatingBaseEstimator::updateLandmarkRelativePoses</definition>
        <argsstring>(FloatingBaseEstimators::Measurements &amp;meas, const double &amp;dt)</argsstring>
        <name>updateLandmarkRelativePoses</name>
        <param>
          <type><ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Measurements" kindref="compound">FloatingBaseEstimators::Measurements</ref> &amp;</type>
          <declname>meas</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Update the predicted state estimates using relative pose measurements of static landmarks in the environment. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">meas</parametername>
</parameternamelist>
<parameterdescription>
<para>measurements to update the predicted states </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dt</parametername>
</parameternamelist>
<parameterdescription>
<para>sampling period in seconds </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="313" column="18" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="313" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac256d05311483c6bd380fc1a29cc7163" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::updateBaseStateFromIMUState</definition>
        <argsstring>(const FloatingBaseEstimators::InternalState &amp;state, const FloatingBaseEstimators::Measurements &amp;meas, manif::SE3d &amp;basePose, Eigen::Ref&lt; Eigen::Matrix&lt; double, 6, 1 &gt;&gt; baseTwist)</argsstring>
        <name>updateBaseStateFromIMUState</name>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1InternalState" kindref="compound">FloatingBaseEstimators::InternalState</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Measurements" kindref="compound">FloatingBaseEstimators::Measurements</ref> &amp;</type>
          <declname>meas</declname>
        </param>
        <param>
          <type>manif::SE3d &amp;</type>
          <declname>basePose</declname>
        </param>
        <param>
          <type>Eigen::Ref&lt; Eigen::Matrix&lt; double, 6, 1 &gt;&gt;</type>
          <declname>baseTwist</declname>
        </param>
        <briefdescription>
<para>Wrapper method for getting base state from internal IMU state. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">state</parametername>
</parameternamelist>
<parameterdescription>
<para>internal state of the estimator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">meas</parametername>
</parameternamelist>
<parameterdescription>
<para>previous measurement to the estimator </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">basePose</parametername>
</parameternamelist>
<parameterdescription>
<para>base pose as an iDynTree Transform object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">baseTwist</parametername>
</parameternamelist>
<parameterdescription>
<para>mixe- trivialized base velocity as an iDynTree Twist object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="323" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a47e47d6dc44f160b520b673901db3abc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setupOptions</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>setupOptions</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Setup estimator options. </para>
        </briefdescription>
        <detaileddescription>
<para>The parameters in the Options group are,<itemizedlist>
<listitem><para>enable_imu_bias_estimation [PARAMETER|-|Enable/disable IMU bias estimation]</para>
</listitem><listitem><para>enable_static_imu_bias_initialization [PARAMETER|-|Enable/disable IMU bias initialization assuming static configuration]</para>
</listitem><listitem><para>nr_samples_for_imu_bias_initialization [PARAMETER|REQUIRED, if staticImuBiasInitializationEnabled is set to true|Number of samples for static bias initialization]</para>
</listitem><listitem><para>enable_ekf_update [PARAMETER|-|Enable/disable update step of EKF (not recommended to set to false)]</para>
</listitem><listitem><para>acceleration_due_to_gravity [PARAMETER|-|Acceleration due to gravity, 3d vector] <simplesect kind="note"><para>this is a recipe method that can be called by the derived class from within <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref> </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="339" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a9ceef906a3dadd188f590dc21d0b5fd3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setupSensorDevs</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>setupSensorDevs</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Setup measurement noise standard deviations The parameters in the SensorsStdDev group are,. </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>accelerometer_measurement_noise_std_dev [PARAMETER|REQUIRED|Accelerometer measurement white noise deviation]</para>
</listitem><listitem><para>gyroscope_measurement_noise_std_dev [PARAMETER|REQUIRED|Gyroscope measurement white noise deviation]</para>
</listitem><listitem><para>accelerometer_measurement_bias_noise_std_dev [PARAMETER|REQUIRED, if imuBiasEstimationEnabled is set to true|Accelerometer measurement bias noise deviation]</para>
</listitem><listitem><para>gyroscope_measurement_bias_noise_std_dev [PARAMETER|REQUIRED, if imuBiasEstimationEnabled is set to true|Gyroscope measurement bias noise deviation]</para>
</listitem><listitem><para>contact_foot_linear_velocity_noise_std_dev [PARAMETER|REQUIRED|Linear velocity white noise deviation when foot is in contact]</para>
</listitem><listitem><para>contact_foot_angular_velocity_noise_std_dev [PARAMETER|REQUIRED|Angular velocity white noise deviation when foot is in contact]</para>
</listitem><listitem><para>swing_foot_linear_velocity_noise_std_dev [PARAMETER|REQUIRED|Linear velocity white noise deviation when foot is swinging off contact]</para>
</listitem><listitem><para>swing_foot_angular_velocity_noise_std_dev [PARAMETER|REQUIRED|Angular velocity white noise deviation when foot is swinging off contact]</para>
</listitem><listitem><para>forward_kinematic_measurement_noise_std_dev [PARAMETER|REQUIRED|White noise deviation in relative poses computed through forward kinematics]</para>
</listitem><listitem><para>encoders_measurement_noise_std_dev [PARAMETER|REQUIRED|Encoder measurement white noise deviation] <simplesect kind="note"><para>this is a recipe method that can be called by the derived class from within <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref> </para>
</simplesect>
<simplesect kind="note"><para>ensure to call <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a47e47d6dc44f160b520b673901db3abc" kindref="member">setupOptions()</ref> before calling <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a9ceef906a3dadd188f590dc21d0b5fd3" kindref="member">setupSensorDevs()</ref> to handle bias related parameters to be configured properly </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="358" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad8bf6b1b6356c909fb930b0346610551" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setupInitialStates</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>setupInitialStates</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Setup initial states. </para>
        </briefdescription>
        <detaileddescription>
<para>The parameters in the InitialStates group are,<itemizedlist>
<listitem><para>imu_orientation_quaternion_wxyz [PARAMETER|REQUIRED|Initial IMU orientation wrt inertial frame, as a quaternion]</para>
</listitem><listitem><para>imu_position_xyz [PARAMETER|REQUIRED|Initial IMU position wrt inertial frame]</para>
</listitem><listitem><para>imu_linear_velocity_xyz [PARAMETER|REQUIRED|Initial IMU linear velocity wrt inertial frame, in a mixed-velocity representation]</para>
</listitem><listitem><para>l_contact_frame_orientation_quaternion_wxyz [PARAMETER|REQUIRED|Initial left foot contact frame orientation wrt inertial frame, as a quaternion]</para>
</listitem><listitem><para>l_contact_frame_position_xyz [PARAMETER|REQUIRED|Initial left foot contact frame position wrt inertial frame]</para>
</listitem><listitem><para>r_contact_frame_orientation_quaternion_wxyz [PARAMETER|REQUIRED|Initial right foot contact frame orientation wrt inertial frame, as a quaternion]</para>
</listitem><listitem><para>r_contact_frame_position_xyz [PARAMETER|REQUIRED|Initial right foot contact frame position wrt inertial frame]</para>
</listitem><listitem><para>accelerometer_bias [PARAMETER|REQUIRED, if imuBiasEstimationEnabled is set to true|Initial accelerometer bias expressed in IMU frame]</para>
</listitem><listitem><para>gyroscope_bias [PARAMETER|REQUIRED, if imuBiasEstimationEnabled is set to true|Initial gyroscope bias expressed in IMU frame] <simplesect kind="note"><para>this is a recipe method that can be called by the derived class from within <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref> </para>
</simplesect>
<simplesect kind="note"><para>ensure to call <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a47e47d6dc44f160b520b673901db3abc" kindref="member">setupOptions()</ref> before calling <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad8bf6b1b6356c909fb930b0346610551" kindref="member">setupInitialStates()</ref> to handle bias related parameters to be configured properly </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="376" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1abaaacf9df3cc68efdae1ec21ed55a90e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setupPriorDevs</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>setupPriorDevs</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Setup initial state standard deviations. </para>
        </briefdescription>
        <detaileddescription>
<para>The parameters in the PriorsStdDev group are,<itemizedlist>
<listitem><para>imu_orientation_quaternion_wxyz [PARAMETER|REQUIRED|Initial IMU orientation as wrt inertial frame]</para>
</listitem><listitem><para>imu_position [PARAMETER|REQUIRED|Initial IMU position deviation wrt inertial frame]</para>
</listitem><listitem><para>imu_linear_velocity [PARAMETER|REQUIRED|Initial IMU linear velocity deviation wrt inertial frame, in a mixed-velocity representation]</para>
</listitem><listitem><para>l_contact_frame_orientation_quaternion [PARAMETER|REQUIRED|Initial left foot contact frame orientation deviation wrt inertial frame]</para>
</listitem><listitem><para>l_contact_frame_position [PARAMETER|REQUIRED|Initial left foot contact frame position deviation wrt inertial frame]</para>
</listitem><listitem><para>r_contact_frame_orientation_quaternion [PARAMETER|REQUIRED|Initial right foot contact frame orientation deviation wrt inertial frame]</para>
</listitem><listitem><para>r_contact_frame_position [PARAMETER|REQUIRED|Initial right foot contact frame position deviation wrt inertial frame]</para>
</listitem><listitem><para>accelerometer_bias [PARAMETER|REQUIRED, if imuBiasEstimationEnabled is set to true|Initial accelerometer bias devitaion expressed in IMU frame]</para>
</listitem><listitem><para>gyroscope_bias [PARAMETER|REQUIRED, if imuBiasEstimationEnabled is set to true|Initial gyroscope bias deviation expressed in IMU frame] <simplesect kind="note"><para>this is a recipe method that can be called by the derived class from within <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" kindref="member">customInitialization()</ref> </para>
</simplesect>
<simplesect kind="note"><para>ensure to call <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a47e47d6dc44f160b520b673901db3abc" kindref="member">setupOptions()</ref> before calling <ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1abaaacf9df3cc68efdae1ec21ed55a90e" kindref="member">setupPriorDevs()</ref> to handle bias related parameters to be configured properly </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="394" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a14bb55c740bab8b15a8a89dd28c40d5d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setupModelParams</definition>
        <argsstring>(std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>setupModelParams</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Setup model related parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="429" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac59ec82239398f18c5fc5347bf8d979e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Estimators::FloatingBaseEstimator::setupFixedVectorParamPrivate</definition>
        <argsstring>(const std::string &amp;param, const std::string &amp;prefix, std::weak_ptr&lt; BipedalLocomotion::ParametersHandler::IParametersHandler &gt; handler, std::vector&lt; double &gt; &amp;vec)</argsstring>
        <name>setupFixedVectorParamPrivate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">BipedalLocomotion::ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Setup parameter vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>print prefix </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter handler </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">vec</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="440" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator" kindref="compound">FloatingBaseEstimator</ref> class contains the bare-bones implementation for a <ref refid="classBipedalLocomotion_1_1Estimators_1_1LeggedOdometry" kindref="compound">LeggedOdometry</ref> based or Extended Kalman Filter based floating base estimation algorithms for bipedal robots. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>it is assumed that if an IMU (primary) is specified in the inherited implementation, then this IMU is rigidly attached to the specified base link in the implementation </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="8">
        <label>BipedalLocomotion::Estimators::InvariantEKFBaseEstimator</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1InvariantEKFBaseEstimator"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimator</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Source&lt; FloatingBaseEstimators::Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; FloatingBaseEstimators::Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>BipedalLocomotion::Estimators::LeggedOdometry</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1LeggedOdometry"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="7">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="23">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::Options</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Options"/>
      </node>
      <node id="11">
        <label>BipedalLocomotion::Contacts::EstimatedContact</label>
        <link refid="structBipedalLocomotion_1_1Contacts_1_1EstimatedContact"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>K</label>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="17">
        <label>T</label>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimator</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>m_modelComp</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_meas</edgelabel>
          <edgelabel>m_measPrev</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>m_priors</edgelabel>
          <edgelabel>m_stateStdDev</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>m_estimatorOut</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>m_sensorsDev</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>m_state</edgelabel>
          <edgelabel>m_statePrev</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>m_options</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>std::map&lt; int, Eigen::Matrix&lt; double, 6, 1 &gt;, std::less&lt; int &gt;, Eigen::aligned_allocator&lt; std::pair&lt; const int, Eigen::Matrix&lt; double, 6, 1 &gt; &gt; &gt; &gt;</label>
        <childnode refid="15" relation="template-instance">
          <edgelabel>&lt; int, Eigen::Matrix&lt; double, 6, 1 &gt;, std::less&lt; int &gt;, Eigen::aligned_allocator&lt; std::pair&lt; const int, Eigen::Matrix&lt; double, 6, 1 &gt; &gt; &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>std::map&lt; K, T &gt;</label>
        <childnode refid="16" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Source&lt; FloatingBaseEstimators::Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="template-instance">
          <edgelabel>&lt; FloatingBaseEstimators::Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="18">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::StateStdDev</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1StateStdDev"/>
        <childnode refid="19" relation="usage">
          <edgelabel>landmarkPose</edgelabel>
          <edgelabel>supportFramePose</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="10">
        <label>std::map&lt; int, BipedalLocomotion::Contacts::EstimatedContact &gt;</label>
        <childnode refid="11" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="15" relation="template-instance">
          <edgelabel>&lt; int, BipedalLocomotion::Contacts::EstimatedContact &gt;</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::InternalState</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1InternalState"/>
        <childnode refid="10" relation="usage">
          <edgelabel>landmarkData</edgelabel>
          <edgelabel>supportFrameData</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::Measurements</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Measurements"/>
        <childnode refid="10" relation="usage">
          <edgelabel>stampedContactsStatus</edgelabel>
          <edgelabel>stampedRelLandmarkPoses</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::SensorsStdDev</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1SensorsStdDev"/>
      </node>
      <node id="12">
        <label>BipedalLocomotion::Contacts::ContactBase</label>
        <link refid="structBipedalLocomotion_1_1Contacts_1_1ContactBase"/>
        <childnode refid="13" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimators::Output</label>
        <link refid="structBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimators_1_1Output"/>
        <childnode refid="18" relation="usage">
          <edgelabel>stateStdDev</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>state</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>BipedalLocomotion::Estimators::FloatingBaseEstimator::ModelComputations</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1_1ModelComputations"/>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>std::string</label>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" line="33" column="1" bodyfile="BipedalLocomotion/FloatingBaseEstimators/FloatingBaseEstimator.h" bodystart="34" bodyend="443"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a8deaab0e4940165c59f15355d47ddc79" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a618ab786bb43814b3b3012b843fce93b" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>close</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a462a1ca838fc97062d93395f2ecb52e9" prot="protected" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>customInitialization</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad7fae2ee9adde778ab2c1c3b468ea6ac" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>FloatingBaseEstimator</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1aecc991f84626ed5114483a3e7c0fd78c" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>getOutput</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a6effc5655b1fa1bdcad345f2ea420047" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a30b2e0f940d73c15239d4842f141a37e" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a975a7ecbf38c917c7b72519581fc7dba" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a0baf4a4877c4c790c35be575f63ea2d2" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>isOutputValid</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a73f6c5a571246a976c534dbf0c8485c9" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_dt</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a7a69586c1a993d3abc61c786d25b88c1" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_estimatorOut</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a67d83d2880b0c9e7e279410081138bd7" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_estimatorState</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a25aecb934450c5584c292b0573880efc" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_isInvEKF</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a39e4591671b56359f28884caa4a0a5cf" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_meas</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a17e146652bf36d8a62bae4f217a26294" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_measPrev</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a1e23695506ec5bd1b3bccc32fe2ac75a" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_modelComp</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a620d1da852a07960e55a6dd8a53fd1a5" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_options</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a4a9a0355d4b8a11e747d2180c55cba64" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_priors</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a4a762098fd8fe1158f163209402db0d1" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_sensorsDev</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a6c98bb1f972363c0f1b795bdcd50f5fd" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_state</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac13379b400e3a5448370d62a60495c48" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_statePrev</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad3c4555ded287bb1450dd9b664705c7c" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_stateStdDev</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a85d6ac77a6ccc37ef659e3378593fd07" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_useIMUForAngVelEstimate</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a5e5751df76b701e6d0ef3d54fba70e0c" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_useIMUVelForBaseVelComputation</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad58879a3431ccf1a250419f79c54377c" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>m_useModelInfo</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1aad3b0c5d6736bdc39e501833d6fd7dcf" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>modelComputations</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a69603f2c9c608815908425b5b8c2005c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>Output</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a26c64914587b18e5eaa2f8b8df321446" prot="protected" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>predictState</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1afaa96d18ba685b1cb5cb9a56f4d862cb" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>resetEstimator</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a3b6896ce5674651e673761bbce201154" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>resetEstimator</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a776353b9fda2354f3f7eb0c80940ca49" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setContacts</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a83bfbba8171ebfc98b016c7449e7faf6" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setContactStatus</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a2ccbfaf83d8eed0fe3b0b5ca46017ef4" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setIMUMeasurement</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1a472624c76d5e02e8ae16991cd77016ce" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ad2637be5c9075a2d8f09fedc6a42d808" prot="public" virt="pure-virtual" ambiguityscope="BipedalLocomotion::System::Advanceable::"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad203e691ae8d7d8b41da86b2e081267b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setKinematics</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a1beebdcb036ccc21700690d291ac59e3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setLandmarkRelativePose</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac59ec82239398f18c5fc5347bf8d979e" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setupFixedVectorParamPrivate</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ad8bf6b1b6356c909fb930b0346610551" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setupInitialStates</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a14bb55c740bab8b15a8a89dd28c40d5d" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setupModelParams</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a47e47d6dc44f160b520b673901db3abc" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setupOptions</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1abaaacf9df3cc68efdae1ec21ed55a90e" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setupPriorDevs</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a9ceef906a3dadd188f590dc21d0b5fd3" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>setupSensorDevs</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac94d11332538be5c0ae96761645b74f1" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>State</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ac256d05311483c6bd380fc1a29cc7163" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>updateBaseStateFromIMUState</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1a22dfe34e6bba688d4e00f6c97c47bd0c" prot="protected" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>updateKinematics</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1acca7d1580a8085caedfdecbe08e89d9f" prot="protected" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>updateLandmarkRelativePoses</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1afae1137cba829874bab4a1d25d559896" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>~Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1Estimators_1_1FloatingBaseEstimator_1ab24dc4ee5a3afb031812df139a3dbd09" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>~FloatingBaseEstimator</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ac9b58b0d2f6ae8821b873ed6f9817ccb" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>~InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1adcc49c38152c9204dcab4f8e87f68977" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>~OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1acf12427433027de27b18e6e70ba0cae8" prot="public" virt="virtual"><scope>BipedalLocomotion::Estimators::FloatingBaseEstimator</scope><name>~Source</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
