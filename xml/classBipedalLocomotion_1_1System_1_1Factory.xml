<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1System_1_1Factory" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::System::Factory</compoundname>
    <includes local="no">BipedalLocomotion/System/Factory.h</includes>
    <templateparamlist>
      <param>
        <type>typename _Type</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classBipedalLocomotion_1_1System_1_1Factory_1a6fd551f4a7f28a211b34c75d4fadb57b" prot="public" static="no">
        <type>_Type</type>
        <definition>using BipedalLocomotion::System::Factory&lt; _Type &gt;::Type =  _Type</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Factory.h" line="29" column="5" bodyfile="BipedalLocomotion/System/Factory.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classBipedalLocomotion_1_1System_1_1Factory_1a2af7b75f1e39e5715bfc65896a104470" prot="public" static="no">
        <type>typename std::add_pointer&lt; std::shared_ptr&lt; Type &gt;()&gt;::type</type>
        <definition>using BipedalLocomotion::System::Factory&lt; _Type &gt;::Builder =  typename std::add_pointer&lt;std::shared_ptr&lt;Type&gt;()&gt;::type</definition>
        <argsstring></argsstring>
        <name>Builder</name>
        <briefdescription>
<para>Pointer to the Type builder. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Factory.h" line="30" column="5" bodyfile="BipedalLocomotion/System/Factory.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1Factory_1a6e78b5b5517f899fdcf47260d6728b32" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unordered_map&lt; std::string, <ref refid="classBipedalLocomotion_1_1System_1_1Factory_1a2af7b75f1e39e5715bfc65896a104470" kindref="member">Builder</ref> &gt; &amp;</type>
        <definition>static std::unordered_map&lt;std::string, Builder&gt;&amp; BipedalLocomotion::System::Factory&lt; _Type &gt;::getMapFactory</definition>
        <argsstring>()</argsstring>
        <name>getMapFactory</name>
        <briefdescription>
<para>Get the map containing a map of idKey and the associated Builder function. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>an unordered_map of idKey and pointer to create the Type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Factory.h" line="38" column="31" bodyfile="BipedalLocomotion/System/Factory.h" bodystart="38" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1Factory_1aca1550eb8f6ee9d23a120e32c11ca85a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string BipedalLocomotion::System::Factory&lt; _Type &gt;::registerBuilder</definition>
        <argsstring>(std::string idKey, Builder classBuilder)</argsstring>
        <name>registerBuilder</name>
        <param>
          <type>std::string</type>
          <declname>idKey</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1System_1_1Factory_1a2af7b75f1e39e5715bfc65896a104470" kindref="member">Builder</ref></type>
          <declname>classBuilder</declname>
        </param>
        <briefdescription>
<para>Add a Builder for a given Type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idKey</parametername>
</parameternamelist>
<parameterdescription>
<para>the string representing the type of the Type. i.e., the stringify version of the class type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>classBuilder</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the function that creates a given Type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the idKey </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Factory.h" line="52" column="24" bodyfile="BipedalLocomotion/System/Factory.h" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1Factory_1ab2232067f34d75dc60f7765be196e029" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::shared_ptr&lt; Type &gt;</type>
        <definition>static std::shared_ptr&lt;Type&gt; BipedalLocomotion::System::Factory&lt; _Type &gt;::createInstance</definition>
        <argsstring>(const std::string &amp;idKey)</argsstring>
        <name>createInstance</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>idKey</declname>
        </param>
        <briefdescription>
<para>Create an instance of a Type given its id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idKey</parametername>
</parameternamelist>
<parameterdescription>
<para>the string representing the type of the Type. i.e., the stringify version of the class type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the Type. In case of issues, the pointer will be a nullptr. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Factory.h" line="64" column="28" bodyfile="BipedalLocomotion/System/Factory.h" bodystart="64" bodyend="78"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1System_1_1Factory_1a6ded584afee20f14d7b9cba0f1be87c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual BipedalLocomotion::System::Factory&lt; _Type &gt;::~Factory</definition>
        <argsstring>()=default</argsstring>
        <name>~Factory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/System/Factory.h" line="80" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1System_1_1Factory" kindref="compound">Factory</ref> implements the factory design patter for constructing a an object of a given Type given its id. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>BipedalLocomotion::System::Factory&lt; Dynamics &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Factory"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; Dynamics &gt;</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::Factory&lt; WeightProvider &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Factory"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; WeightProvider &gt;</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::ILinearTaskFactory&lt; _Task &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1ILinearTaskFactory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::WeightProviderFactory</label>
        <link refid="classBipedalLocomotion_1_1System_1_1WeightProviderFactory"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::System::Factory&lt; _Type &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Factory"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::System::Factory&lt; _Task &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Factory"/>
        <childnode refid="1" relation="template-instance">
          <edgelabel>&lt; _Task &gt;</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion::Estimators::RobotDynamicsEstimator::DynamicsFactory</label>
        <link refid="classBipedalLocomotion_1_1Estimators_1_1RobotDynamicsEstimator_1_1DynamicsFactory"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="BipedalLocomotion/System/Factory.h" line="26" column="12" bodyfile="BipedalLocomotion/System/Factory.h" bodystart="27" bodyend="81"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1System_1_1Factory_1a2af7b75f1e39e5715bfc65896a104470" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::Factory</scope><name>Builder</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Factory_1ab2232067f34d75dc60f7765be196e029" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::Factory</scope><name>createInstance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Factory_1a6e78b5b5517f899fdcf47260d6728b32" prot="private" virt="non-virtual"><scope>BipedalLocomotion::System::Factory</scope><name>getMapFactory</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Factory_1aca1550eb8f6ee9d23a120e32c11ca85a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::Factory</scope><name>registerBuilder</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Factory_1a6fd551f4a7f28a211b34c75d4fadb57b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::System::Factory</scope><name>Type</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Factory_1a6ded584afee20f14d7b9cba0f1be87c1" prot="public" virt="virtual"><scope>BipedalLocomotion::System::Factory</scope><name>~Factory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
