<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::Contacts::FixedFootDetector</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector" prot="public" virt="non-virtual">BipedalLocomotion::Contacts::ContactDetector</basecompoundref>
    <includes local="no">BipedalLocomotion/ContactDetectors/FixedFootDetector.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1a268884e697deca78b8d25350152f9a1e" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1Contacts_1_1ContactPhaseList" kindref="compound">ContactPhaseList</ref></type>
        <definition>ContactPhaseList BipedalLocomotion::Contacts::FixedFootDetector::m_contactPhaselist</definition>
        <argsstring></argsstring>
        <name>m_contactPhaselist</name>
        <briefdescription>
<para>List of the contacts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/FixedFootDetector.h" line="66" column="22" bodyfile="BipedalLocomotion/ContactDetectors/FixedFootDetector.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1abc67248060b923b21a476ac0c83afb79" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::Contacts::FixedFootDetector::m_currentTime</definition>
        <argsstring></argsstring>
        <name>m_currentTime</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Current time in seconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/FixedFootDetector.h" line="67" column="12" bodyfile="BipedalLocomotion/ContactDetectors/FixedFootDetector.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1a27b53afd200b832d4bcb4722f39939fb" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double BipedalLocomotion::Contacts::FixedFootDetector::m_dT</definition>
        <argsstring></argsstring>
        <name>m_dT</name>
        <initializer>{0}</initializer>
        <briefdescription>
<para>Fixed sampling time in seconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/FixedFootDetector.h" line="68" column="12" bodyfile="BipedalLocomotion/ContactDetectors/FixedFootDetector.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1a6f45fb20015fbb29dd48392a84932993" prot="private" static="no" mutable="no">
        <type><ref refid="structBipedalLocomotion_1_1Contacts_1_1EstimatedContact" kindref="compound">EstimatedContact</ref></type>
        <definition>EstimatedContact BipedalLocomotion::Contacts::FixedFootDetector::m_dummyContact</definition>
        <argsstring></argsstring>
        <name>m_dummyContact</name>
        <briefdescription>
<para>A dummy esitmated contact. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/FixedFootDetector.h" line="69" column="22" bodyfile="BipedalLocomotion/ContactDetectors/FixedFootDetector.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1acae539041db3bf7ddc2de9693d6a4012" prot="private" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::FixedFootDetector::customInitialization</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; handler) final</argsstring>
        <name>customInitialization</name>
        <reimplements refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1ad1abbcb2664c44fbc2b5274b3317089a">customInitialization</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize the detector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameter handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="2" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>sampling_time</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>double</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Sampling time of the detector is seconds   </para>
</entry><entry thead="no" align='center'><para>Yes   </para>
</entry></row>
</table>
</para>
</simplesect>
<simplesect kind="return"><para>true in case of success/false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/FixedFootDetector.h" line="80" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1a4ce837a6dcc21ac37faba2a162f6f677" prot="private" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::FixedFootDetector::updateContactStates</definition>
        <argsstring>() final</argsstring>
        <name>updateContactStates</name>
        <reimplements refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1aa14726515b605a427ef50a37ac7e7646">updateContactStates</reimplements>
        <briefdescription>
<para>Update the contact state. </para>
        </briefdescription>
        <detaileddescription>
<para>This function advance the current time stored in the class. <simplesect kind="return"><para>true in case of success/false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/FixedFootDetector.h" line="87" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1a754f58e5432ac868156f9fb5ad0675b8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::FixedFootDetector::updateFixedFoot</definition>
        <argsstring>()</argsstring>
        <name>updateFixedFoot</name>
        <briefdescription>
<para>Update the fixed foot. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true in case of success/false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/FixedFootDetector.h" line="93" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1a4a4433c8d78cfa699ff2fd3cfadd686e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::Contacts::FixedFootDetector::setContactPhaseList</definition>
        <argsstring>(const ContactPhaseList &amp;phaseList)</argsstring>
        <name>setContactPhaseList</name>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1Contacts_1_1ContactPhaseList" kindref="compound">ContactPhaseList</ref> &amp;</type>
          <declname>phaseList</declname>
        </param>
        <briefdescription>
<para>Set the contact phase list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>phaseList</parametername>
</parameternamelist>
<parameterdescription>
<para>a contact phase list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/FixedFootDetector.h" line="101" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1a48faffe128483c4226b8dcfb56e98587" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structBipedalLocomotion_1_1Contacts_1_1EstimatedContact" kindref="compound">EstimatedContact</ref> &amp;</type>
        <definition>const EstimatedContact&amp; BipedalLocomotion::Contacts::FixedFootDetector::getFixedFoot</definition>
        <argsstring>() const</argsstring>
        <name>getFixedFoot</name>
        <briefdescription>
<para>Get the fixed foot. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the fixed foot. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContactDetectors/FixedFootDetector.h" line="107" column="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector" kindref="compound">FixedFootDetector</ref> is a class that can be used to find the fixed foot given a sequence of contacts. </para>
    </briefdescription>
    <detaileddescription>
<para>The logic used to find the fixed foot is the follow:<itemizedlist>
<listitem><para>In the single support phase the fixed foot is the stance foot</para>
</listitem><listitem><para>In the double support phase the fixed foot is the foot in switch off phase, where switch off is the transition phase between stance and swing.</para>
</listitem></itemizedlist>
</para>
<para>The aforementioned logic is described by the following diagram <programlisting filename=".unparsed"><codeline><highlight class="normal">time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/>1<sp/><sp/><sp/>2<sp/><sp/><sp/>3<sp/><sp/><sp/>4<sp/><sp/><sp/>5<sp/><sp/><sp/>6<sp/><sp/><sp/>7<sp/><sp/><sp/>8<sp/><sp/><sp/>9<sp/><sp/><sp/>10<sp/><sp/>11<sp/><sp/>12<sp/><sp/>13<sp/><sp/>14<sp/><sp/>15<sp/><sp/>16<sp/><sp/>17</highlight></codeline>
<codeline><highlight class="normal">L<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|+++|---|+++++++++++|---|+++++++++++|---|+++++++++++|---|+++++++++++|</highlight></codeline>
<codeline><highlight class="normal">R<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|+++++++++++|---|+++++++++++|---|+++++++++++|---|+++++++++++|---|+++|</highlight></codeline>
<codeline><highlight class="normal">stance<sp/>foot<sp/><sp/>|LLL|RRR|RRR|LLL|LLL|RRR|RRR|LLL|LLL|RRR|RRR|LLL|LLL|RRR|RRR|LLL|LLL|</highlight></codeline>
</programlisting> <simplesect kind="warning"><para>The <ref refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector" kindref="compound">FixedFootDetector</ref> class can handle only bipedal locomotion. I.e. the <ref refid="classBipedalLocomotion_1_1Contacts_1_1ContactPhaseList" kindref="compound">ContactPhaseList</ref> passed to <ref refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1a4a4433c8d78cfa699ff2fd3cfadd686e" kindref="member">FixedFootDetector::setContactPhaseList</ref> must contain only single support and double phases. </para>
</simplesect>
<simplesect kind="warning"><para>The presented logic may not fit in a real scenario. Indeed the class implements an approach completely based on the desired footsteps and it does not consider the current state of the robot. We suggest to use <ref refid="classBipedalLocomotion_1_1Contacts_1_1SchmittTriggerDetector" kindref="compound">Contacts::SchmittTriggerDetector</ref> class if you want consider the force acting on the robot. </para>
</simplesect>
<simplesect kind="note"><para>Given the current implementation of the class, you should call <computeroutput><ref refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1a8600d27b4fd25ef5a19642c90da16008" kindref="member">ContactDetector::advance</ref></computeroutput> only to <computeroutput>advance</computeroutput> the current time stored within the class. If you want to get the fixed foot at the initial time <formula id="0">$t=t_i$</formula>, you should call <computeroutput><ref refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1a48faffe128483c4226b8dcfb56e98587" kindref="member">FixedFootDetector::getFixedFoot</ref></computeroutput> before calling advance. The following snippet can be used as a reference: <programlisting filename=".cpp"><codeline><highlight class="normal">FixedFootDetector<sp/>detector;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>initialize<sp/>the<sp/>detector</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">detector.initialize(paramsHandler);</highlight></codeline>
<codeline><highlight class="normal">detector.setContactPhaseList(contactPhaseList);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>fixed<sp/>frame<sp/>at<sp/>initial<sp/>time<sp/>instant<sp/>(t<sp/>=<sp/>t_i)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fixedFoot<sp/>=<sp/>detector.getFixedFoot();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>fixed<sp/>frame<sp/>at<sp/>initial<sp/>time<sp/>+<sp/>sampling<sp/>time<sp/>instant<sp/>(t<sp/>=<sp/>t_i<sp/>+<sp/>dt)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">detector.advance();</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fixedFoot<sp/>=<sp/>detector.getFixedFoot();</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Contacts::FixedFootDetector</label>
        <link refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Source&lt; EstimatedContactList &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; EstimatedContactList &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="8">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::Contacts::ContactDetector</label>
        <link refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>BipedalLocomotion::Contacts::EstimatedContact</label>
        <link refid="structBipedalLocomotion_1_1Contacts_1_1EstimatedContact"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>K</label>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="16">
        <label>T</label>
      </node>
      <node id="1">
        <label>BipedalLocomotion::Contacts::FixedFootDetector</label>
        <link refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>std::unordered_map&lt; K, T &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="3">
        <label>BipedalLocomotion::System::Source&lt; EstimatedContactList &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="template-instance">
          <edgelabel>&lt; EstimatedContactList &gt;</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="9">
        <label>std::unordered_map&lt; std::string, Contacts::EstimatedContact &gt;</label>
        <childnode refid="10" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="14" relation="template-instance">
          <edgelabel>&lt; std::string, Contacts::EstimatedContact &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>BipedalLocomotion::Contacts::ContactBase</label>
        <link refid="structBipedalLocomotion_1_1Contacts_1_1ContactBase"/>
        <childnode refid="12" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::Contacts::ContactDetector</label>
        <link refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_contactStates</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>std::string</label>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/ContactDetectors/FixedFootDetector.h" line="64" column="1" bodyfile="BipedalLocomotion/ContactDetectors/FixedFootDetector.h" bodystart="65" bodyend="108"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1a8600d27b4fd25ef5a19642c90da16008" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a618ab786bb43814b3b3012b843fce93b" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>close</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1acae539041db3bf7ddc2de9693d6a4012" prot="private" virt="virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>customInitialization</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1ad8e16e2a8a352a6fe6c99dbbf6270080" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>get</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1a9d0a9f236c81d8fe59c50f2f7db33128" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>get</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1a48faffe128483c4226b8dcfb56e98587" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>getFixedFoot</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1af11bae01dd074ff9e2d4ebdfcc7edd88" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>getOutput</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1a489846dc2acb563a641e4098d5bc8457" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a975a7ecbf38c917c7b72519581fc7dba" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1add50895455a7713e665da0c93b027c12" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>isOutputValid</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1a268884e697deca78b8d25350152f9a1e" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>m_contactPhaselist</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1a028ec4c9e7bbf0fce3fd8c5e94f72a4c" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>m_contactStates</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1abc67248060b923b21a476ac0c83afb79" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>m_currentTime</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1af9644dfa23468dd4c37532600c491810" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>m_detectorState</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1a27b53afd200b832d4bcb4722f39939fb" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>m_dT</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1a6f45fb20015fbb29dd48392a84932993" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>m_dummyContact</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a69603f2c9c608815908425b5b8c2005c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>Output</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1a11bf662e6ea3ac76dcc4767172bf6adb" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>resetContacts</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1a4a4433c8d78cfa699ff2fd3cfadd686e" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>setContactPhaseList</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1a472624c76d5e02e8ae16991cd77016ce" prot="public" virt="non-virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ad2637be5c9075a2d8f09fedc6a42d808" prot="public" virt="pure-virtual" ambiguityscope="BipedalLocomotion::System::Advanceable::"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1a2d43086e84e475eaec9adeb9575dea84" prot="protected" virt="non-virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>State</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1a4ce837a6dcc21ac37faba2a162f6f677" prot="private" virt="virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>updateContactStates</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1FixedFootDetector_1a754f58e5432ac868156f9fb5ad0675b8" prot="private" virt="non-virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>updateFixedFoot</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1afae1137cba829874bab4a1d25d559896" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>~Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1Contacts_1_1ContactDetector_1a586343d41d78cc88ea919e3600266fd3" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>~ContactDetector</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ac9b58b0d2f6ae8821b873ed6f9817ccb" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>~InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1adcc49c38152c9204dcab4f8e87f68977" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>~OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1acf12427433027de27b18e6e70ba0cae8" prot="public" virt="virtual"><scope>BipedalLocomotion::Contacts::FixedFootDetector</scope><name>~Source</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
