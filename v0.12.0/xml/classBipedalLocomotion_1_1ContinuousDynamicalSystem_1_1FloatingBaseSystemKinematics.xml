<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem" prot="public" virt="non-virtual">BipedalLocomotion::ContinuousDynamicalSystem::DynamicalSystem&lt; FloatingBaseSystemKinematics &gt;</basecompoundref>
    <includes local="no">BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseSystemKinematics.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics_1aa40da49ea837569d7d19423b8674fbbc" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1abe9655801c0f0a1391619325e571cd57" kindref="member">State</ref></type>
        <definition>State BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics::m_state</definition>
        <argsstring></argsstring>
        <name>m_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseSystemKinematics.h" line="67" column="11" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseSystemKinematics.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics_1a8efc2ecfd6577b8f024a97bba794a819" prot="private" static="no" mutable="no">
        <type><ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1a4c2a4bbac36e26c14571f79bfd6e4fa7" kindref="member">Input</ref></type>
        <definition>Input BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics::m_controlInput</definition>
        <argsstring></argsstring>
        <name>m_controlInput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseSystemKinematics.h" line="68" column="11" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseSystemKinematics.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics_1a6a7efa3015fe8cf007ede3ec653bff9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics::initialize</definition>
        <argsstring>(std::weak_ptr&lt; ParametersHandler::IParametersHandler &gt; handler)</argsstring>
        <name>initialize</name>
        <param>
          <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize the Dynamical system. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the parameter handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success/false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>This function does nothing but it is required for CRTP. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseSystemKinematics.h" line="77" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics_1a8ead6c79af9d3473733179976ee59304" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics::setState</definition>
        <argsstring>(const State &amp;state)</argsstring>
        <name>setState</name>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1abe9655801c0f0a1391619325e571cd57" kindref="member">State</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Set the state of the dynamical system. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>tuple containing a const reference to the state elements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseSystemKinematics.h" line="84" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics_1ab94a2ca52a4c1ef7b69a94131b3a3629" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1abe9655801c0f0a1391619325e571cd57" kindref="member">State</ref> &amp;</type>
        <definition>const State&amp; BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics::getState</definition>
        <argsstring>() const</argsstring>
        <name>getState</name>
        <briefdescription>
<para>Get the state to the dynamical system. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the current state of the dynamical system </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseSystemKinematics.h" line="90" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics_1a813ab32725b95f0e7680eb004bd6b554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics::setControlInput</definition>
        <argsstring>(const Input &amp;controlInput)</argsstring>
        <name>setControlInput</name>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1a4c2a4bbac36e26c14571f79bfd6e4fa7" kindref="member">Input</ref> &amp;</type>
          <declname>controlInput</declname>
        </param>
        <briefdescription>
<para>Set the control input to the dynamical system. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>controlInput</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the control input used to compute the system dynamics. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseSystemKinematics.h" line="97" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics_1aa38952215adbef47f3c318dc6f03de42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics::dynamics</definition>
        <argsstring>(const double &amp;time, StateDerivative &amp;stateDerivative)</argsstring>
        <name>dynamics</name>
        <param>
          <type>const double &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1a664a4e9ae349c0b14f83d98a90e52022" kindref="member">StateDerivative</ref> &amp;</type>
          <declname>stateDerivative</declname>
        </param>
        <briefdescription>
<para>Computes the floating based system dynamics. </para>
        </briefdescription>
        <detaileddescription>
<para>It return <formula id="21">$f(x, u, t)$</formula>. <simplesect kind="note"><para>The control input and the state have to be set separately with the methods setControlInput and setState. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>the time at witch the dynamics is computed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stateDynamics</parametername>
</parameternamelist>
<parameterdescription>
<para>tuple containing a reference to the element of the state derivative </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseSystemKinematics.h" line="107" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics" kindref="compound">FloatingBaseSystemKinematics</ref> describes a floating base system kinematics. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics" kindref="compound">FloatingBaseSystemKinematics</ref> inherits from a generic <ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem" kindref="compound">DynamicalSystem</ref> where:<itemizedlist>
<listitem><para><ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1abe9655801c0f0a1391619325e571cd57" kindref="member">DynamicalSystem::State</ref> is described by an std::tuple containing:<itemizedlist>
<listitem><para>Eigen::Vector3d: position of the base w.r.t. the inertial frame</para>
</listitem><listitem><para>manif::SO3d: rotation matrix <formula id="30">${} ^ I R _ {b}$</formula>. Matrix that transform a vector whose coordinates are expressed in the base frame in the inertial frame;</para>
</listitem><listitem><para>Eigen::VectorXd: the joint positions [in rad].</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1a664a4e9ae349c0b14f83d98a90e52022" kindref="member">DynamicalSystem::StateDerivative</ref> is described by an std::tuple containing:<itemizedlist>
<listitem><para>Eigen::Vector3d: base linear velocity w.r.t. the inertial frame;</para>
</listitem><listitem><para>manif::SO3d::Tangent: base angular velocity w.r.t. the inertial frame; (Left trivialized) whose coordinates are expressed in the base frame in the inertial frame;</para>
</listitem><listitem><para>Eigen::VectorXd: the joint velocities [in rad/s].</para>
</listitem></itemizedlist>
</para>
</listitem><listitem><para><ref refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1a4c2a4bbac36e26c14571f79bfd6e4fa7" kindref="member">DynamicalSystem::Input</ref> is described by an std::tuple containing:<itemizedlist>
<listitem><para>Eigen::Vector6d: base twist w.r.t. the inertial frame;</para>
</listitem><listitem><para>Eigen::VectorXd: the joint velocities [in rad/s]. </para>
</listitem></itemizedlist>
</para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics</label>
        <link refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::ContinuousDynamicalSystem::DynamicalSystem&lt; _Derived &gt;</label>
        <link refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::ContinuousDynamicalSystem::DynamicalSystem&lt; FloatingBaseSystemKinematics &gt;</label>
        <link refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; FloatingBaseSystemKinematics &gt;</edgelabel>
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics</label>
        <link refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::ContinuousDynamicalSystem::DynamicalSystem&lt; _Derived &gt;</label>
        <link refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::ContinuousDynamicalSystem::DynamicalSystem&lt; FloatingBaseSystemKinematics &gt;</label>
        <link refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem"/>
        <childnode refid="3" relation="template-instance">
          <edgelabel>&lt; FloatingBaseSystemKinematics &gt;</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseSystemKinematics.h" line="65" column="1" bodyfile="BipedalLocomotion/ContinuousDynamicalSystem/FloatingBaseSystemKinematics.h" bodystart="66" bodyend="108"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics_1aa38952215adbef47f3c318dc6f03de42" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics</scope><name>dynamics</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics_1ab94a2ca52a4c1ef7b69a94131b3a3629" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics</scope><name>getState</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics_1a6a7efa3015fe8cf007ede3ec653bff9b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1a4c2a4bbac36e26c14571f79bfd6e4fa7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics_1a8efc2ecfd6577b8f024a97bba794a819" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics</scope><name>m_controlInput</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics_1aa40da49ea837569d7d19423b8674fbbc" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics</scope><name>m_state</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics_1a813ab32725b95f0e7680eb004bd6b554" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics</scope><name>setControlInput</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1FloatingBaseSystemKinematics_1a8ead6c79af9d3473733179976ee59304" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics</scope><name>setState</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1abe9655801c0f0a1391619325e571cd57" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics</scope><name>State</name></member>
      <member refid="classBipedalLocomotion_1_1ContinuousDynamicalSystem_1_1DynamicalSystem_1a664a4e9ae349c0b14f83d98a90e52022" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ContinuousDynamicalSystem::FloatingBaseSystemKinematics</scope><name>StateDerivative</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
