<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::TSID::QPFixedBaseTSID</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1TSID_1_1QPTSID" prot="public" virt="non-virtual">BipedalLocomotion::TSID::QPTSID</basecompoundref>
    <includes local="no">BipedalLocomotion/TSID/QPFixedBaseTSID.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID_1afe34535ba7f72e8f8a8951eb7f57a48a" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; Impl &gt;</type>
        <definition>std::unique_ptr&lt;Impl&gt; BipedalLocomotion::TSID::QPFixedBaseTSID::m_pimpl</definition>
        <argsstring></argsstring>
        <name>m_pimpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/QPFixedBaseTSID.h" line="48" column="21" bodyfile="BipedalLocomotion/TSID/QPFixedBaseTSID.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID_1a45b6c66204b18531b9a120079fa2dcf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::TSID::QPFixedBaseTSID::QPFixedBaseTSID</definition>
        <argsstring>()</argsstring>
        <name>QPFixedBaseTSID</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/QPFixedBaseTSID.h" line="55" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID_1aad6d8bb491894542587d0aed95927ea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::TSID::QPFixedBaseTSID::~QPFixedBaseTSID</definition>
        <argsstring>()</argsstring>
        <name>~QPFixedBaseTSID</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/QPFixedBaseTSID.h" line="60" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID_1afd8a4a3f3823189efaee3def7fdfd86f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::QPFixedBaseTSID::initialize</definition>
        <argsstring>(std::weak_ptr&lt; const ParametersHandler::IParametersHandler &gt; handler) override</argsstring>
        <name>initialize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a6db247d3db83217a16e963d01f6bcb77">initialize</reimplements>
        <param>
          <type>std::weak_ptr&lt; const <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">ParametersHandler::IParametersHandler</ref> &gt;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Initialize the TSID algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the IParametersHandler interface.h </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>the following parameters are required by the class <table rows="4" cols="4"><row>
<entry thead="yes" align='center'><para>Parameter Name   </para>
</entry><entry thead="yes" align='center'><para>Type   </para>
</entry><entry thead="yes" align='center'><para>Description   </para>
</entry><entry thead="yes" align='center'><para>Mandatory    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>robot_acceleration_variable_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the variable contained in <computeroutput>VariablesHandler</computeroutput> describing the generalized robot acceleration   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>robot_torque_variable_name</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>string</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Name of the variable contained in <computeroutput>VariablesHandler</computeroutput> describing the robot torque   </para>
</entry><entry thead="no" align='center'><para>Yes    </para>
</entry></row>
<row>
<entry thead="no" align='center'><para><computeroutput>verbosity</computeroutput>   </para>
</entry><entry thead="no" align='center'><para><computeroutput>bool</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>Verbosity of the solver. Default value <computeroutput>false</computeroutput>   </para>
</entry><entry thead="no" align='center'><para>No   </para>
</entry></row>
</table>
Where the generalized robot acceleration is a vector containing the base acceleration (expressed in mixed representation) and the joint accelerations, </para>
</simplesect>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/QPFixedBaseTSID.h" line="75" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID_1ab30128e846c93bcf6cd4ebdf86e0db85" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::QPFixedBaseTSID::finalize</definition>
        <argsstring>(const System::VariablesHandler &amp;handler) override</argsstring>
        <name>finalize</name>
        <reimplements refid="classBipedalLocomotion_1_1System_1_1ILinearTaskSolver_1aab3c4a0555f5e1f98f7fbda7c200a7ed">finalize</reimplements>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1System_1_1VariablesHandler" kindref="compound">System::VariablesHandler</ref> &amp;</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>Finalize the TSID. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>You should call this method after you add ALL the tasks. </para>
</simplesect>
<simplesect kind="return"><para>true in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/QPFixedBaseTSID.h" line="83" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID_1aad89c0f72bd2c95558a8c6d8c0cc754e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::TSID::QPFixedBaseTSID::setKinDyn</definition>
        <argsstring>(std::shared_ptr&lt; iDynTree::KinDynComputations &gt; kinDyn)</argsstring>
        <name>setKinDyn</name>
        <param>
          <type>std::shared_ptr&lt; iDynTree::KinDynComputations &gt;</type>
          <declname>kinDyn</declname>
        </param>
        <briefdescription>
<para>Set the kinDynComputations object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kinDyn</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a kinDynComputations object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True in case of success, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/TSID/QPFixedBaseTSID.h" line="90" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID" kindref="compound">QPFixedBaseTSID</ref> is specialization of <ref refid="classBipedalLocomotion_1_1TSID_1_1QPTSID" kindref="compound">QPTSID</ref> class in the case of fixed base system. </para>
    </briefdescription>
    <detaileddescription>
<para>The TSID is here implemented as Quadratic Programming (QP) problem. The user should set the desired task with the method <ref refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1ae9cafa680ca8f1138acf880c04181970" kindref="member">QPFixedBaseTSID::addTask</ref>. Each task has a given priority. Currently we support only priority equal to 0 or 1. If the task priority is set to 0 the task will be considered as a hard task, thus treated as a constraint. If the priority is equal to 1 the task will be embedded in the cost function. The class is also able to treat inequality constraints. Note that this class considers just one contact wrench as we assume the external wrench acting on only the base link. Here you can find an example of the <ref refid="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID" kindref="compound">QPFixedBaseTSID</ref> class. <linebreak/>
 <image type="html" name="https://user-images.githubusercontent.com/43743081/112606007-308f7780-8e18-11eb-875f-d8a7c4b960eb.png" inline="yes"></image>
 <simplesect kind="note"><para>If you want to solve the Inverse Dynamics for a floating base system please use <ref refid="classBipedalLocomotion_1_1TSID_1_1QPTSID" kindref="compound">QPTSID</ref>. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="7">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::TSID::QPTSID</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1QPTSID"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::ILinearTaskSolver&lt; TSIDLinearTask, TSIDState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1ILinearTaskSolver"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; TSIDLinearTask, TSIDState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="11">
        <label>BipedalLocomotion::System::Source&lt; _State &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; _State &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>BipedalLocomotion::System::ILinearTaskSolver&lt; _Task, _State &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1ILinearTaskSolver"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::TSID::QPFixedBaseTSID</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::TSID::TaskSpaceInverseDynamics</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1TaskSpaceInverseDynamics"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>BipedalLocomotion::System::InputPort&lt; _Input &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1InputPort"/>
      </node>
      <node id="2">
        <label>BipedalLocomotion::TSID::QPTSID</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1QPTSID"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>BipedalLocomotion::System::ILinearTaskSolver&lt; TSIDLinearTask, TSIDState &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1ILinearTaskSolver"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="template-instance">
          <edgelabel>&lt; TSIDLinearTask, TSIDState &gt;</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>BipedalLocomotion::System::OutputPort&lt; _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1OutputPort"/>
      </node>
      <node id="11">
        <label>BipedalLocomotion::System::Source&lt; _State &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="template-instance">
          <edgelabel>&lt; _State &gt;</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>BipedalLocomotion::System::ILinearTaskSolver&lt; _Task, _State &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1ILinearTaskSolver"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>BipedalLocomotion::System::Advanceable&lt; EmptySignal, Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="template-instance">
          <edgelabel>&lt; EmptySignal, Output &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::TSID::QPFixedBaseTSID</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>BipedalLocomotion::TSID::TaskSpaceInverseDynamics</label>
        <link refid="classBipedalLocomotion_1_1TSID_1_1TaskSpaceInverseDynamics"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>BipedalLocomotion::System::Source&lt; Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Source"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>BipedalLocomotion::System::Advanceable&lt; _Input, _Output &gt;</label>
        <link refid="classBipedalLocomotion_1_1System_1_1Advanceable"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/TSID/QPFixedBaseTSID.h" line="42" column="1" bodyfile="BipedalLocomotion/TSID/QPFixedBaseTSID.h" bodystart="43" bodyend="91"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1ae9cafa680ca8f1138acf880c04181970" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>addTask</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1a876c8497d3bf307df0c9a4a3d0849aa4" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>addTask</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1ILinearTaskSolver_1a2aa760519d2a9a20045d27ca97cc1d8f" prot="public" virt="pure-virtual" ambiguityscope="BipedalLocomotion::TSID::TaskSpaceInverseDynamics::"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>addTask</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1ILinearTaskSolver_1aa120f4a6ec30a664c29b0acfcca7730d" prot="public" virt="pure-virtual" ambiguityscope="BipedalLocomotion::TSID::TaskSpaceInverseDynamics::"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>addTask</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1abc2defe1e3f95380a2788ffaec767ba1" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>advance</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a09ee5b41c77c6b626f4d5cb775065325" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1aaeb3eba3073fbc844dea1eba4c9b68f3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ac1549cb26bd896e27370e97b0795ba3f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1af940e76a562ca42b6dd61c04f4cbdf4e" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>build</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a618ab786bb43814b3b3012b843fce93b" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>close</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID_1ab30128e846c93bcf6cd4ebdf86e0db85" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>finalize</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1a483e2dca295dd4dad89f0c268c4afeaa" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>getOutput</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1a29cac804112c38c5dc69267e9c6a5feb" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>getRawSolution</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1a0f9c32fae276d489e803a942fafaf38e" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>getTask</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1ab9f5f896dc418c0370f87a083bfd9c32" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>getTaskNames</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1a1384c7afc1b98be5d6964aa89ef8ce1f" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>getTaskWeightProvider</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID_1afd8a4a3f3823189efaee3def7fdfd86f" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>initialize</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a975a7ecbf38c917c7b72519581fc7dba" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>Input</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a27c614cb30c1e4b78e64791f4919dfa7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a74d1418613e89a7f2993ea936228a44a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a02ec5c947f1d2d83d2952c3b899cc58f" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1ae1312f6965a91d4b2472c30ff95c4e5c" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>isOutputValid</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID_1afe34535ba7f72e8f8a8951eb7f57a48a" prot="private" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>m_pimpl</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1a922e6eec2f74620c49f9fcd1ddf709ae" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1ad63e64dcad4c269263ecd20b2c81352b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1ae147cdee9ff9160a9dfe0d3e349a9aad" prot="public" virt="non-virtual" ambiguityscope="Advanceable&lt; EmptySignal, Output &gt;::"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1adf0d9fc07bab0ec5d4db7f3a35816bf2" prot="public" virt="non-virtual" ambiguityscope="Advanceable&lt; EmptySignal, Output &gt;::"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1a54f476d3c8d6d003fb714309ea6272aa" prot="public" virt="non-virtual" ambiguityscope="Advanceable&lt; EmptySignal, Output &gt;::BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1adb341b37472241b6da8b552166308d7b" prot="public" virt="non-virtual" ambiguityscope="Advanceable&lt; EmptySignal, Output &gt;::BipedalLocomotion::System::InputPort::"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1af5e15f5e4962a5c8e0f0c0a49adb9ca1" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1ad5c6ce3ad7d2a064d7bb512fe0bc489e" prot="public" virt="non-virtual" ambiguityscope="BipedalLocomotion::System::OutputPort::"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>operator=</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1a69603f2c9c608815908425b5b8c2005c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>Output</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a7c0d15e677a1935918fc747ba4c25ec1" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a0a39b891749961d34507b4b591886741" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1a581340f280eca1890a8a7b2331761b57" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID_1a45b6c66204b18531b9a120079fa2dcf5" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>QPFixedBaseTSID</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1adb8db0bf0a0d8ea5903dadadaf5fbdcf" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>QPTSID</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1a472624c76d5e02e8ae16991cd77016ce" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ad2637be5c9075a2d8f09fedc6a42d808" prot="public" virt="pure-virtual" ambiguityscope="Advanceable&lt; EmptySignal, Output &gt;::"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>setInput</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID_1aad89c0f72bd2c95558a8c6d8c0cc754e" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>setKinDyn</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1aae215634b3570c759197a08cf73dc787" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>setTaskWeight</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1a1350f108b174380ac457e31b32dc0aa5" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>setTaskWeight</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1aa6af70cc2e04e6a7e011af3d968b3b4b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>Source</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1a1c126531af21d485f09f297cb162c30a" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>Source</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1af0cf2abdf10e6594372a0b062fe4a8af" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>Source</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1ILinearTaskSolver_1a770b4595f008dbc6ae50e2889639df12" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>State</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1ILinearTaskSolver_1a6d1cc19ae482b87b3f5dadefa1eb4e7b" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>Task</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1a0875e576675b9f0c8dffbe231abb21cf" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>toString</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Advanceable_1afae1137cba829874bab4a1d25d559896" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>~Advanceable</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1ILinearTaskSolver_1a3f7b647df3e41efe16c75754181f9931" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>~ILinearTaskSolver</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1InputPort_1ac9b58b0d2f6ae8821b873ed6f9817ccb" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>~InputPort</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1OutputPort_1adcc49c38152c9204dcab4f8e87f68977" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>~OutputPort</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPFixedBaseTSID_1aad6d8bb491894542587d0aed95927ea5" prot="public" virt="non-virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>~QPFixedBaseTSID</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1QPTSID_1a3f17e23e66667d4480986e20f448f0d8" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>~QPTSID</name></member>
      <member refid="classBipedalLocomotion_1_1System_1_1Source_1acf12427433027de27b18e6e70ba0cae8" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>~Source</name></member>
      <member refid="classBipedalLocomotion_1_1TSID_1_1TaskSpaceInverseDynamics_1af67a42286571cd0263af0b22e7b32167" prot="public" virt="virtual"><scope>BipedalLocomotion::TSID::QPFixedBaseTSID</scope><name>~TaskSpaceInverseDynamics</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
