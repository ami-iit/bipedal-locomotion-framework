<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>BipedalLocomotion::ParametersHandler::IParametersHandler</compoundname>
    <derivedcompoundref refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation" prot="public" virt="non-virtual">BipedalLocomotion::ParametersHandler::StdImplementation</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation" prot="public" virt="non-virtual">BipedalLocomotion::ParametersHandler::TomlImplementation</derivedcompoundref>
    <derivedcompoundref refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation" prot="public" virt="non-virtual">BipedalLocomotion::ParametersHandler::YarpImplementation</derivedcompoundref>
    <includes local="no">BipedalLocomotion/ParametersHandler/IParametersHandler.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1af52e37b791362f025487212e52256c51" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">IParametersHandler</ref> &gt;</type>
        <definition>using BipedalLocomotion::ParametersHandler::IParametersHandler::unique_ptr =  std::unique_ptr&lt;IParametersHandler&gt;</definition>
        <argsstring></argsstring>
        <name>unique_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="30" column="5" bodyfile="BipedalLocomotion/ParametersHandler/IParametersHandler.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a8afda2b689337f31a090dabd24df53f3" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">IParametersHandler</ref> &gt;</type>
        <definition>using BipedalLocomotion::ParametersHandler::IParametersHandler::shared_ptr =  std::shared_ptr&lt;IParametersHandler&gt;</definition>
        <argsstring></argsstring>
        <name>shared_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="32" column="5" bodyfile="BipedalLocomotion/ParametersHandler/IParametersHandler.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a03eb908249dcb6c90bd61bdb55bd9aa7" prot="public" static="no">
        <type>std::weak_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">IParametersHandler</ref> &gt;</type>
        <definition>using BipedalLocomotion::ParametersHandler::IParametersHandler::weak_ptr =  std::weak_ptr&lt;IParametersHandler&gt;</definition>
        <argsstring></argsstring>
        <name>weak_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="34" column="5" bodyfile="BipedalLocomotion/ParametersHandler/IParametersHandler.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1afdb240a10f9cb5345c86574f974d7e5d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::ParametersHandler::IParametersHandler::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, int &amp;parameter) const =0</argsstring>
        <name>getParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1ab28e970cd27385d23bac09aea675ea7d">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a5511a7d71159bb8d2e2f284431eac5d1">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a484bf26a05d767b7f13589e25721b1ce">getParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [int]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="42" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a309b3e41c285bafc3abfdaa19107a94d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::ParametersHandler::IParametersHandler::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, double &amp;parameter) const =0</argsstring>
        <name>getParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a6bdcc4fcbe7d3ba85df91bd6953d08ed">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a12d106023924ec3ae4599d5c1f57d52e">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1aa5c5c9f4dbd352fbd5f9c17985accfb3">getParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [double]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="50" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a6f70e7ff8d921ddd86b1d787dea31817" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::ParametersHandler::IParametersHandler::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, std::string &amp;parameter) const =0</argsstring>
        <name>getParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a6fff9373e0c1e4655732b29b55cefee0">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a7e96f4db775bfd6c6229cdfdbb705e9e">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1ad76663f0dc1955660886542f3adfd173">getParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [std::string]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="58" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a580f55f92e5113e5e956500a642c334f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::ParametersHandler::IParametersHandler::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, bool &amp;parameter) const =0</argsstring>
        <name>getParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1abf3da53b0e22b6bc966e0429ffddf050">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1ad2e89673adfcb9898f9ba76b3f6a4a89">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a77838487a5c87eb82d5d98cdb986641b">getParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [bool]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="66" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a32cea1fc7fe065fbd6222b26a4e8e669" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::ParametersHandler::IParametersHandler::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, std::chrono::nanoseconds &amp;parameter) const =0</argsstring>
        <name>getParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a197c7bf275b55ba2b0a79f5443f0ec56">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a22bbed7969fa1f23ab948699683e0e3e">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1af77eaebe3d7d1327da4da50dfe89b2f9">getParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>std::chrono::nanoseconds &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [int]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="74" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a4b5d92b170d471760070c9b19fcf2355" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::ParametersHandler::IParametersHandler::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, std::vector&lt; bool &gt; &amp;parameter) const =0</argsstring>
        <name>getParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a0ab67dbbdc2750c18f1fe907f4b59a5f">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a6a77664180a9e9d54ecd13ddc44844de">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a0111773bdb6634bebefca77aee1470ba">getParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>std::vector&lt; bool &gt; &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [std::vector&lt;bool&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="82" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ae2157684e9278364f16d491771db4de8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::ParametersHandler::IParametersHandler::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, GenericContainer::Vector&lt; int &gt;::Ref parameter) const =0</argsstring>
        <name>getParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1afe6e81d64f37e1fe4fc47cd6deed1bb8">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a58095752b261b5dc62b2bf438d9269d5">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a8f3c85c02969f7f8db575cc24c22ebee">getParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; int &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;int&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="91" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a3f9f2f10327e8e1f090357ca49fa6149" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::ParametersHandler::IParametersHandler::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, GenericContainer::Vector&lt; double &gt;::Ref parameter) const =0</argsstring>
        <name>getParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a0ec6d7bf5d4b967da3d7952550e81585">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a945893028ec4c53aa0731026ee67cb1a">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a6a6b19fea7c698e4dbfe1bf47a88bac0">getParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; double &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;double&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="100" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1aaa35d7a32c43c5d75e48ad1228d1d335" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::ParametersHandler::IParametersHandler::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, GenericContainer::Vector&lt; std::string &gt;::Ref parameter) const =0</argsstring>
        <name>getParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1add66ec6c371a21d84e0e965479a56012">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a9bbdb6fd83abc1eece7385c4dd1d39f0">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a84e532092b9cc1f490cd69ceb1382ed4">getParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; std::string &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;std::string&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="109" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a9145dbaf1143a1a3da2f415e6c67894a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::ParametersHandler::IParametersHandler::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, GenericContainer::Vector&lt; std::chrono::nanoseconds &gt;::Ref parameter) const =0</argsstring>
        <name>getParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a6f602667e5c3929dbfd8231717c6bc04">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a1e21fcc6b435e6f33f7cd063f7f0d755">getParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1ade61fb20a94b484bcb19f24c5e5480e1">getParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; std::chrono::nanoseconds &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;std::chrono::nanoseconds&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="118" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a6d237be21441ba4ad215955d1e59d78c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BipedalLocomotion::ParametersHandler::IParametersHandler::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const int &amp;parameter)=0</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a28f7f90b5a967a03559efffdb88dbf5c">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a7b99e8520fcd89dfc002cd76e62283ca">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a22c35bd2722d4ec538aab79cdfc99f56">setParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [int]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="126" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1af3d26ff754203f7ea0c18026299279f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BipedalLocomotion::ParametersHandler::IParametersHandler::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const double &amp;parameter)=0</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1ac4cfaab8b1deee996f4c78eeca6dc57b">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1ada5d517cd6712e7fdcade0f3d0de55c9">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a047943c17ef15231efa10b486b40e4d1">setParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [double]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="133" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a676ff31c0f2a523d23115acb820fa8c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BipedalLocomotion::ParametersHandler::IParametersHandler::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const std::string &amp;parameter)=0</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a30e08ad5b04bd51eb6911ea655d7c111">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a099f42898ff8dbf795c7c75928065453">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a6881d6a1f5fe38346354e9113903c28f">setParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [std::string]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="140" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ac50bdd9d7c54d542979601502aa63724" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BipedalLocomotion::ParametersHandler::IParametersHandler::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const char *parameter)=0</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a517b6a22ee166c60f09bda0b81d3b79b">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a5b79540432064125097af70ca2f0718c">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1ae17080381e2cdafb498e59c8848379c6">setParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [const char*]. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>this is required because of <ulink url="https://www.bfilipek.com/2019/07/surprising-conversions-char-bool.html">https://www.bfilipek.com/2019/07/surprising-conversions-char-bool.html</ulink> </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="149" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a31e93d8df853c8e714ea0f02b561692d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BipedalLocomotion::ParametersHandler::IParametersHandler::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const bool &amp;parameter)=0</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a3337d1d53551a453e82c1e3f41b89a90">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1ae1cf9094a7f84519bb19771b7cd29c52">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a597bfc52821217fb8e94fa33867fc4db">setParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [bool]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="156" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1aedd08b1aeedb09aff57a9dbb19dc88c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BipedalLocomotion::ParametersHandler::IParametersHandler::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const std::chrono::nanoseconds &amp;parameter)=0</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a2a53ec58219560ae51aeef6be4a4e06f">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a66aa74ef3f85f6cdb5f90176b96895fa">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a2e30951b1f38cc986178b2e8904e1190">setParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [std::chrono::nanoseconds]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="163" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1adbf64417a4c269eea758e895545a05db" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BipedalLocomotion::ParametersHandler::IParametersHandler::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const std::vector&lt; bool &gt; &amp;parameter)=0</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a7abf3b2e68e819c6aba8c670c083d97b">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a06aa8f03332037cc857472982daf8b21">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1aa6ff4a24f07200238d7a1d6631338081">setParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [std::vector&lt;bool&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="171" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a99835b09d78671d66f127bb3f2f11a8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BipedalLocomotion::ParametersHandler::IParametersHandler::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const GenericContainer::Vector&lt; const int &gt;::Ref parameter)=0</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1ac6986781f6c43ed8a08b182e7b5cbaed">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1af5d54035b958caa5850ca5bcd2ba2b47">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1af544c00dc785e431af824e9b491a3ac3">setParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; const int &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [GenericContainer::Vector&lt;int&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="179" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a6acc040bc256463c628af59033a59863" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BipedalLocomotion::ParametersHandler::IParametersHandler::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const GenericContainer::Vector&lt; const double &gt;::Ref parameter)=0</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a6b9bf79b93199e68bce2083047870bed">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a3b23017dce6e3baffeba093ac2059c96">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1aa6d600cbbe0fd72d7152179c4e055a10">setParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; const double &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [GenericContainer::Vector&lt;double&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="188" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ab1cb738f9b06bf45c5f0bb63c87b87eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BipedalLocomotion::ParametersHandler::IParametersHandler::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const GenericContainer::Vector&lt; const std::string &gt;::Ref parameter)=0</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1af6e3479a2da7783fbc157601e8daec73">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1afd3e0f168562bbe9bb0d973975cd15ee">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1aebc4c9d1fdec6de81711a2f62729c375">setParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; const std::string &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [GenericContainer::Vector&lt;std::string&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="197" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a8446ca0f4e9028008b73ce6080615e64" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BipedalLocomotion::ParametersHandler::IParametersHandler::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const GenericContainer::Vector&lt; const std::chrono::nanoseconds &gt;::Ref parameter)=0</argsstring>
        <name>setParameter</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a6cdb52e049af728d2c820af987b23e1f">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1af2fe0e0cc15abcbb0475a558718eae7c">setParameter</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a1b2bba2e0b0d02f9dd404af6f19969b5">setParameter</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; const std::chrono::nanoseconds &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;std::chrono::nanoseconds&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="207" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a8ca1254ab3f157396052b4df3cefc15d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>weak_ptr</type>
        <definition>virtual weak_ptr BipedalLocomotion::ParametersHandler::IParametersHandler::getGroup</definition>
        <argsstring>(const std::string &amp;name) const =0</argsstring>
        <name>getGroup</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1ac7d19a2945a765e3239598b007d45a32">getGroup</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a7967601e80d345c45915e2d8ca843088">getGroup</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a6b4468d8f7de872ec34ea500f3b9ba4c">getGroup</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get a Group from the handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the group </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">IParametersHandler</ref>, if the group is not found the weak pointer cannot be locked </para>
</simplesect>
<simplesect kind="warning"><para>Please implement the specific version of this method in the Derived class. Please check <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a6b4468d8f7de872ec34ea500f3b9ba4c" kindref="member">YarpImplementation::getGroup</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="219" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a78e1afbcb61323fa5d5a105466aa4a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::ParametersHandler::IParametersHandler::setGroup</definition>
        <argsstring>(const std::string &amp;name, shared_ptr newGroup)=0</argsstring>
        <name>setGroup</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a4da25fef8c4a501ce481ed4b9aef54ad">setGroup</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1ac0f5b19fdabc727f3baf3589c57f7d10">setGroup</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1abc6ef5e9b41ab7238fdcc01b9393f7e0">setGroup</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>shared_ptr</type>
          <declname>newGroup</declname>
        </param>
        <briefdescription>
<para>Set a new group on the handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the group </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newGroup</parametername>
</parameternamelist>
<parameterdescription>
<para>shared pointer to the new group </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Please implement the specific version of this method in the Derived class. Please check <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1abc6ef5e9b41ab7238fdcc01b9393f7e0" kindref="member">YarpImplementation::setGroup</ref> </para>
</simplesect>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="229" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a22dd2d7f429a64092bba1e3bdbe29713" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string BipedalLocomotion::ParametersHandler::IParametersHandler::toString</definition>
        <argsstring>() const =0</argsstring>
        <name>toString</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1aed41af1c7497f57b8a6aa798a2491916">toString</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1ac79cb2e2193a73685e3197c2bf269e3d">toString</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1abb16748e8b91989125a9dc225d380bde">toString</reimplementedby>
        <briefdescription>
<para>Return a standard text representation of the content of the object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a string containing the standard text representation of the content of the object. </para>
</simplesect>
<simplesect kind="warning"><para>Please implement the specific version of this method in the Derived class. Please check <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1abb16748e8b91989125a9dc225d380bde" kindref="member">YarpImplementation::toString</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="237" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ab15662ad31c0c5c750a8c0d301bd7033" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BipedalLocomotion::ParametersHandler::IParametersHandler::isEmpty</definition>
        <argsstring>() const =0</argsstring>
        <name>isEmpty</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1af19873df37726f9f16ef8500e3122f54">isEmpty</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a4623cca36f2a12cef8d48560746b383c">isEmpty</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a5e1f8b4bab80afcaf2f42be4772b82fa">isEmpty</reimplementedby>
        <briefdescription>
<para>Check if the handler contains parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the handler does not contain any parameters, false otherwise </para>
</simplesect>
<simplesect kind="warning"><para>Please implement the specific version of this method in the Derived class. Please check <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a5e1f8b4bab80afcaf2f42be4772b82fa" kindref="member">YarpImplementation::isEmpty</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="245" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a7b1cd95ec96c2ea547d4e1acf5f4c3bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BipedalLocomotion::ParametersHandler::IParametersHandler::clear</definition>
        <argsstring>()=0</argsstring>
        <name>clear</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a7f3459d34a0688a57a1280b2f17ddc45">clear</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a454498de819a8547a721fb91d97332ca">clear</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a0da1c5181ac9645187da8e3cdf4be213">clear</reimplementedby>
        <briefdescription>
<para>Clears the handler from all the parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Please implement the specific version of this method in the Derived class. Please check <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a0da1c5181ac9645187da8e3cdf4be213" kindref="member">YarpImplementation::clear</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="252" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ad77436eee28c16c2ac6218ee04ec88b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>shared_ptr</type>
        <definition>virtual shared_ptr BipedalLocomotion::ParametersHandler::IParametersHandler::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation_1a37fa6ff92195856b511126c08a326760">clone</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation_1a803b0534eba653136f5eef379b393065">clone</reimplementedby>
        <reimplementedby refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a24a75f5c666a6a26571fd1ad0320a42b">clone</reimplementedby>
        <briefdescription>
<para>Clone the content of the content. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a IParametersHandler::shared_ptr clone of the current handler. </para>
</simplesect>
<simplesect kind="warning"><para>Please implement the specific version of this method in the Derived class. Please check <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a24a75f5c666a6a26571fd1ad0320a42b" kindref="member">YarpImplementation::clone</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="260" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ac2dde38cbb2c531e185a40144b1d98ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual BipedalLocomotion::ParametersHandler::IParametersHandler::~IParametersHandler</definition>
        <argsstring>()=default</argsstring>
        <name>~IParametersHandler</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="265" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Parameters handler interface. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>BipedalLocomotion::ParametersHandler::TomlImplementation</label>
        <link refid="classBipedalLocomotion_1_1ParametersHandler_1_1TomlImplementation"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BipedalLocomotion::ParametersHandler::IParametersHandler</label>
        <link refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler"/>
      </node>
      <node id="4">
        <label>BipedalLocomotion::ParametersHandler::YarpImplementation</label>
        <link refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>BipedalLocomotion::ParametersHandler::StdImplementation</label>
        <link refid="classBipedalLocomotion_1_1ParametersHandler_1_1StdImplementation"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="BipedalLocomotion/ParametersHandler/IParametersHandler.h" line="27" column="1" bodyfile="BipedalLocomotion/ParametersHandler/IParametersHandler.h" bodystart="28" bodyend="266"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a7b1cd95ec96c2ea547d4e1acf5f4c3bd" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>clear</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ad77436eee28c16c2ac6218ee04ec88b5" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>clone</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a8ca1254ab3f157396052b4df3cefc15d" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>getGroup</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1afdb240a10f9cb5345c86574f974d7e5d" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a309b3e41c285bafc3abfdaa19107a94d" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a6f70e7ff8d921ddd86b1d787dea31817" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a580f55f92e5113e5e956500a642c334f" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a32cea1fc7fe065fbd6222b26a4e8e669" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a4b5d92b170d471760070c9b19fcf2355" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ae2157684e9278364f16d491771db4de8" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a3f9f2f10327e8e1f090357ca49fa6149" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1aaa35d7a32c43c5d75e48ad1228d1d335" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a9145dbaf1143a1a3da2f415e6c67894a" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ab15662ad31c0c5c750a8c0d301bd7033" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>isEmpty</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a78e1afbcb61323fa5d5a105466aa4a1b" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>setGroup</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a6d237be21441ba4ad215955d1e59d78c" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1af3d26ff754203f7ea0c18026299279f5" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a676ff31c0f2a523d23115acb820fa8c4" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ac50bdd9d7c54d542979601502aa63724" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a31e93d8df853c8e714ea0f02b561692d" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1aedd08b1aeedb09aff57a9dbb19dc88c1" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1adbf64417a4c269eea758e895545a05db" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a99835b09d78671d66f127bb3f2f11a8f" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a6acc040bc256463c628af59033a59863" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ab1cb738f9b06bf45c5f0bb63c87b87eb" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a8446ca0f4e9028008b73ce6080615e64" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a8afda2b689337f31a090dabd24df53f3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>shared_ptr</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a22dd2d7f429a64092bba1e3bdbe29713" prot="public" virt="pure-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>toString</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1af52e37b791362f025487212e52256c51" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>unique_ptr</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a03eb908249dcb6c90bd61bdb55bd9aa7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>weak_ptr</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ac2dde38cbb2c531e185a40144b1d98ac" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::IParametersHandler</scope><name>~IParametersHandler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
