<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation" kind="class" language="C++" prot="public">
    <compoundname>BipedalLocomotion::ParametersHandler::YarpImplementation</compoundname>
    <basecompoundref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" prot="public" virt="non-virtual">BipedalLocomotion::ParametersHandler::IParametersHandler</basecompoundref>
    <includes local="no">BipedalLocomotion/ParametersHandler/YarpImplementation.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a2a92ff8d4b019d7ec40afcddf65c7742" prot="private" static="no" mutable="no">
        <type>yarp::os::Bottle</type>
        <definition>yarp::os::Bottle BipedalLocomotion::ParametersHandler::YarpImplementation::m_container</definition>
        <argsstring></argsstring>
        <name>m_container</name>
        <briefdescription>
<para>Bottle object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="35" column="22" bodyfile="BipedalLocomotion/ParametersHandler/YarpImplementation.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a69d0e044ef1dc52487c4912d5b5fd84a" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::shared_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation" kindref="compound">YarpImplementation</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;std::string, std::shared_ptr&lt;YarpImplementation&gt; &gt; BipedalLocomotion::ParametersHandler::YarpImplementation::m_lists</definition>
        <argsstring></argsstring>
        <name>m_lists</name>
        <briefdescription>
<para>Map containing pointers to the (asked) groups. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="36" column="24" bodyfile="BipedalLocomotion/ParametersHandler/YarpImplementation.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a34bf094bf03af5f0f66c91a498ad3cd3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::YarpImplementation::getParameterPrivate</definition>
        <argsstring>(const std::string &amp;parameterName, T &amp;parameter) const</argsstring>
        <name>getParameterPrivate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Private implementation of getParameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="48" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a03a556f78a8d2be6b29d48782fbee600" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::YarpImplementation::setParameterPrivate</definition>
        <argsstring>(const std::string &amp;parameterName, const T &amp;parameter)</argsstring>
        <name>setParameterPrivate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Private implementation of setParameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="57" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a077b0a6389adc0aa2429ec12952fe6a0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation" kindref="compound">YarpImplementation</ref> &gt;</type>
        <definition>std::shared_ptr&lt;YarpImplementation&gt; BipedalLocomotion::ParametersHandler::YarpImplementation::clonePrivate</definition>
        <argsstring>() const</argsstring>
        <name>clonePrivate</name>
        <briefdescription>
<para>Clone the content of the handler. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A pointer to <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation" kindref="compound">YarpImplementation</ref> containing the content of the handler. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="63" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a7def534d693b118883d3c60c251ea817" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool BipedalLocomotion::ParametersHandler::YarpImplementation::stringToDuration</definition>
        <argsstring>(const std::string &amp;string, std::chrono::nanoseconds &amp;time)</argsstring>
        <name>stringToDuration</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>std::chrono::nanoseconds &amp;</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Convert a formatted string into a std::chrono::nanoseconds. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="69" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1af57c51e99b67e40d1eddfca418d9fae5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string BipedalLocomotion::ParametersHandler::YarpImplementation::durationToString</definition>
        <argsstring>(const std::chrono::nanoseconds &amp;parameter)</argsstring>
        <name>durationToString</name>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Convert a std::chrono::nanoseconds into a formatted string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="74" column="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a2029a7fe24230683465d6ab99ef0d297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ParametersHandler::YarpImplementation::YarpImplementation</definition>
        <argsstring>(const yarp::os::Searchable &amp;searchable)</argsstring>
        <name>YarpImplementation</name>
        <param>
          <type>const yarp::os::Searchable &amp;</type>
          <declname>searchable</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>searchable</parametername>
</parameternamelist>
<parameterdescription>
<para>reference to a searchable object. The object is copied inside the Handler </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="82" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1ae5223e6348970d0c3c388ac46abe5857" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ParametersHandler::YarpImplementation::YarpImplementation</definition>
        <argsstring>()=default</argsstring>
        <name>YarpImplementation</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="87" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a60cf026ca1362f6762dca4abcc2b4ee6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::YarpImplementation::set</definition>
        <argsstring>(const yarp::os::Searchable &amp;searchable)</argsstring>
        <name>set</name>
        <param>
          <type>const yarp::os::Searchable &amp;</type>
          <declname>searchable</declname>
        </param>
        <briefdescription>
<para>Set the handler from an object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>searchable</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to copy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="93" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a19e160a13499f83b82e189813b7e371c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::YarpImplementation::setFromFile</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>setFromFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Set the handler from a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the file that should be loaded. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="100" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a484bf26a05d767b7f13589e25721b1ce" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::YarpImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, int &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1afdb240a10f9cb5345c86574f974d7e5d">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [int]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="108" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1aa5c5c9f4dbd352fbd5f9c17985accfb3" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::YarpImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, double &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a309b3e41c285bafc3abfdaa19107a94d">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [double]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="116" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1ad76663f0dc1955660886542f3adfd173" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::YarpImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, std::string &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a6f70e7ff8d921ddd86b1d787dea31817">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [std::string]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="124" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a77838487a5c87eb82d5d98cdb986641b" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::YarpImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, bool &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a580f55f92e5113e5e956500a642c334f">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [bool]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="132" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1af77eaebe3d7d1327da4da50dfe89b2f9" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::YarpImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, std::chrono::nanoseconds &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a32cea1fc7fe065fbd6222b26a4e8e669">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>std::chrono::nanoseconds &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [std::chrono::nanoseconds]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="140" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a0111773bdb6634bebefca77aee1470ba" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::YarpImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, std::vector&lt; bool &gt; &amp;parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a4b5d92b170d471760070c9b19fcf2355">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>std::vector&lt; bool &gt; &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [std::vector&lt;bool&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="148" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a8f3c85c02969f7f8db575cc24c22ebee" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::YarpImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, GenericContainer::Vector&lt; int &gt;::Ref parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ae2157684e9278364f16d491771db4de8">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; int &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;int&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="156" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a6a6b19fea7c698e4dbfe1bf47a88bac0" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::YarpImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, GenericContainer::Vector&lt; double &gt;::Ref parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a3f9f2f10327e8e1f090357ca49fa6149">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; double &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;double&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="164" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a84e532092b9cc1f490cd69ceb1382ed4" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::YarpImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, GenericContainer::Vector&lt; std::string &gt;::Ref parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1aaa35d7a32c43c5d75e48ad1228d1d335">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; std::string &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;std::string&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="172" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1ade61fb20a94b484bcb19f24c5e5480e1" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::YarpImplementation::getParameter</definition>
        <argsstring>(const std::string &amp;parameterName, GenericContainer::Vector&lt; std::chrono::nanoseconds &gt;::Ref parameter) const final</argsstring>
        <name>getParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a9145dbaf1143a1a3da2f415e6c67894a">getParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type><ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; std::chrono::nanoseconds &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;std::chrono::nanoseconds&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true/false in case of success/failure </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="180" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a22c35bd2722d4ec538aab79cdfc99f56" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::YarpImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const int &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a6d237be21441ba4ad215955d1e59d78c">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [int]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="188" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a047943c17ef15231efa10b486b40e4d1" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::YarpImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const double &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1af3d26ff754203f7ea0c18026299279f5">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [double]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="195" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a6881d6a1f5fe38346354e9113903c28f" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::YarpImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const std::string &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a676ff31c0f2a523d23115acb820fa8c4">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [std::string]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="202" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1ae17080381e2cdafb498e59c8848379c6" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::YarpImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const char *parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ac50bdd9d7c54d542979601502aa63724">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [const char*]. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>this is required because of <ulink url="https://www.bfilipek.com/2019/07/surprising-conversions-char-bool.html">https://www.bfilipek.com/2019/07/surprising-conversions-char-bool.html</ulink> </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="211" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a597bfc52821217fb8e94fa33867fc4db" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::YarpImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const bool &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a31e93d8df853c8e714ea0f02b561692d">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [bool]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="218" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a2e30951b1f38cc986178b2e8904e1190" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::YarpImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const std::chrono::nanoseconds &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1aedd08b1aeedb09aff57a9dbb19dc88c1">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const std::chrono::nanoseconds &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [std::chrono::nanoseconds]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="225" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1aa6ff4a24f07200238d7a1d6631338081" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::YarpImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const std::vector&lt; bool &gt; &amp;parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1adbf64417a4c269eea758e895545a05db">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [std::vector&lt;bool&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="232" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1af544c00dc785e431af824e9b491a3ac3" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::YarpImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const GenericContainer::Vector&lt; const int &gt;::Ref parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a99835b09d78671d66f127bb3f2f11a8f">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; const int &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [GenericContainer::Vector&lt;int&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="239" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1aa6d600cbbe0fd72d7152179c4e055a10" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::YarpImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const GenericContainer::Vector&lt; const double &gt;::Ref parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a6acc040bc256463c628af59033a59863">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; const double &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [GenericContainer::Vector&lt;double&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="246" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1aebc4c9d1fdec6de81711a2f62729c375" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::YarpImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const GenericContainer::Vector&lt; const std::string &gt;::Ref parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ab1cb738f9b06bf45c5f0bb63c87b87eb">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; const std::string &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Set a parameter [GenericContainer::Vector&lt;std::string&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="253" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a1b2bba2e0b0d02f9dd404af6f19969b5" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::YarpImplementation::setParameter</definition>
        <argsstring>(const std::string &amp;parameterName, const GenericContainer::Vector&lt; const std::chrono::nanoseconds &gt;::Ref parameter) final</argsstring>
        <name>setParameter</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a8446ca0f4e9028008b73ce6080615e64">setParameter</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>parameterName</declname>
        </param>
        <param>
          <type>const <ref refid="classBipedalLocomotion_1_1GenericContainer_1_1Vector" kindref="compound">GenericContainer::Vector</ref>&lt; const std::chrono::nanoseconds &gt;::Ref</type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
<para>Get a parameter [GenericContainer::Vector&lt;std::chrono::nanoseconds&gt;]. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parameterName</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="260" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a6b4468d8f7de872ec34ea500f3b9ba4c" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>weak_ptr</type>
        <definition>weak_ptr BipedalLocomotion::ParametersHandler::YarpImplementation::getGroup</definition>
        <argsstring>(const std::string &amp;name) const final</argsstring>
        <name>getGroup</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a8ca1254ab3f157396052b4df3cefc15d">getGroup</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get a Group from the handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the group </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">IParametersHandler</ref>, if the group is not found the weak pointer cannot be locked </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="270" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1abc6ef5e9b41ab7238fdcc01b9393f7e0" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::YarpImplementation::setGroup</definition>
        <argsstring>(const std::string &amp;name, shared_ptr newGroup) final</argsstring>
        <name>setGroup</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a78e1afbcb61323fa5d5a105466aa4a1b">setGroup</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>shared_ptr</type>
          <declname>newGroup</declname>
        </param>
        <briefdescription>
<para>Set a new group on the handler. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the group </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newGroup</parametername>
</parameternamelist>
<parameterdescription>
<para>shared pointer to the new group </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="277" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1abb16748e8b91989125a9dc225d380bde" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string BipedalLocomotion::ParametersHandler::YarpImplementation::toString</definition>
        <argsstring>() const final</argsstring>
        <name>toString</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a22dd2d7f429a64092bba1e3bdbe29713">toString</reimplements>
        <briefdescription>
<para>Return a standard text representation of the content of the object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a string containing the standard text representation of the content of the object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="283" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a5e1f8b4bab80afcaf2f42be4772b82fa" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool BipedalLocomotion::ParametersHandler::YarpImplementation::isEmpty</definition>
        <argsstring>() const final</argsstring>
        <name>isEmpty</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ab15662ad31c0c5c750a8c0d301bd7033">isEmpty</reimplements>
        <briefdescription>
<para>Check if the handler contains parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the handler does not contain any parameters, false otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="289" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a0da1c5181ac9645187da8e3cdf4be213" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>void</type>
        <definition>void BipedalLocomotion::ParametersHandler::YarpImplementation::clear</definition>
        <argsstring>() final</argsstring>
        <name>clear</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a7b1cd95ec96c2ea547d4e1acf5f4c3bd">clear</reimplements>
        <briefdescription>
<para>Clears the handler from all the parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="294" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a24a75f5c666a6a26571fd1ad0320a42b" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>shared_ptr</type>
        <definition>shared_ptr BipedalLocomotion::ParametersHandler::YarpImplementation::clone</definition>
        <argsstring>() const final</argsstring>
        <name>clone</name>
        <reimplements refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ad77436eee28c16c2ac6218ee04ec88b5">clone</reimplements>
        <briefdescription>
<para>Clone the content of the content. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a IParametersHandler::shared_ptr clone of the current handler. </para>
</simplesect>
<simplesect kind="warning"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="301" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a229f0efd055b386c23fb4f3d16ba56eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BipedalLocomotion::ParametersHandler::YarpImplementation::~YarpImplementation</definition>
        <argsstring>()=default</argsstring>
        <name>~YarpImplementation</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="306" column="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation" kindref="compound">YarpImplementation</ref> Yarp implementation of the <ref refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler" kindref="compound">IParametersHandler</ref> interface. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BipedalLocomotion::ParametersHandler::IParametersHandler</label>
        <link refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::ParametersHandler::YarpImplementation</label>
        <link refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BipedalLocomotion::ParametersHandler::IParametersHandler</label>
        <link refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler"/>
      </node>
      <node id="1">
        <label>BipedalLocomotion::ParametersHandler::YarpImplementation</label>
        <link refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BipedalLocomotion/ParametersHandler/YarpImplementation.h" line="32" column="1" bodyfile="BipedalLocomotion/ParametersHandler/YarpImplementation.h" bodystart="33" bodyend="307"/>
    <listofallmembers>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a0da1c5181ac9645187da8e3cdf4be213" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>clear</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a24a75f5c666a6a26571fd1ad0320a42b" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>clone</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a077b0a6389adc0aa2429ec12952fe6a0" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>clonePrivate</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1af57c51e99b67e40d1eddfca418d9fae5" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>durationToString</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a6b4468d8f7de872ec34ea500f3b9ba4c" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>getGroup</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a484bf26a05d767b7f13589e25721b1ce" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1aa5c5c9f4dbd352fbd5f9c17985accfb3" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1ad76663f0dc1955660886542f3adfd173" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a77838487a5c87eb82d5d98cdb986641b" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1af77eaebe3d7d1327da4da50dfe89b2f9" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a0111773bdb6634bebefca77aee1470ba" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a8f3c85c02969f7f8db575cc24c22ebee" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a6a6b19fea7c698e4dbfe1bf47a88bac0" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a84e532092b9cc1f490cd69ceb1382ed4" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1ade61fb20a94b484bcb19f24c5e5480e1" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>getParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a34bf094bf03af5f0f66c91a498ad3cd3" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>getParameterPrivate</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a5e1f8b4bab80afcaf2f42be4772b82fa" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>isEmpty</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a2a92ff8d4b019d7ec40afcddf65c7742" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>m_container</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a69d0e044ef1dc52487c4912d5b5fd84a" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>m_lists</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a60cf026ca1362f6762dca4abcc2b4ee6" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>set</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a19e160a13499f83b82e189813b7e371c" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>setFromFile</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1abc6ef5e9b41ab7238fdcc01b9393f7e0" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>setGroup</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a22c35bd2722d4ec538aab79cdfc99f56" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a047943c17ef15231efa10b486b40e4d1" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a6881d6a1f5fe38346354e9113903c28f" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1ae17080381e2cdafb498e59c8848379c6" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a597bfc52821217fb8e94fa33867fc4db" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a2e30951b1f38cc986178b2e8904e1190" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1aa6ff4a24f07200238d7a1d6631338081" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1af544c00dc785e431af824e9b491a3ac3" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1aa6d600cbbe0fd72d7152179c4e055a10" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1aebc4c9d1fdec6de81711a2f62729c375" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a1b2bba2e0b0d02f9dd404af6f19969b5" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>setParameter</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a03a556f78a8d2be6b29d48782fbee600" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>setParameterPrivate</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a8afda2b689337f31a090dabd24df53f3" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>shared_ptr</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a7def534d693b118883d3c60c251ea817" prot="private" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>stringToDuration</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1abb16748e8b91989125a9dc225d380bde" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>toString</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1af52e37b791362f025487212e52256c51" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>unique_ptr</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1a03eb908249dcb6c90bd61bdb55bd9aa7" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>weak_ptr</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a2029a7fe24230683465d6ab99ef0d297" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>YarpImplementation</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1ae5223e6348970d0c3c388ac46abe5857" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>YarpImplementation</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1IParametersHandler_1ac2dde38cbb2c531e185a40144b1d98ac" prot="public" virt="virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>~IParametersHandler</name></member>
      <member refid="classBipedalLocomotion_1_1ParametersHandler_1_1YarpImplementation_1a229f0efd055b386c23fb4f3d16ba56eb" prot="public" virt="non-virtual"><scope>BipedalLocomotion::ParametersHandler::YarpImplementation</scope><name>~YarpImplementation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
